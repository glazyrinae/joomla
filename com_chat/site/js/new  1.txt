<?php
require_once 'applications/settings/params.php';

class Turs_PrivateofficeController extends Optima_Controllers_Abstract
{
    private $domen;
    public $sessionlifetime=43200;
    public $sessiononline=43200;
	public $upload_path = '/files/polises/';
	public $upload_plist_path = '/files/plists/';
	public $mail_text_bottom = '<div style="text-align:center;">*** Это письмо сформировано автоматически службой уведомлений, отвечать на него не нужно. ***</div>';
	public $strahovka_b = array(27,20,22);
	public $strahovka_c = array(18,34);
	public $agent_change_doc = array(28466);
	private $riteil_key = 28720;
	private $legal_riteil = 6;
	private $dogovorCheckDate  = '2014-02-01'; // Проверка даты заключения договора
	
	
	
	public function init()
	{
	   $this->domen=(string)Zend_Registry::get('domen'); //(string)Zend_Registry::get('domen')
	   parent::init();
	}
	public function authonline($login, $pass, $individual=0) 
    {
$redirect=1;

function do_post_request($url, $data, $useragent, $cook)
{
$params = array('http' => array(
'method' => 'POST',
'user_agent' =>  $useragent,
'content' => $data,
'header' => 'Cookie:'.$cook
));

$ctx = stream_context_create($params);
$fp = @fopen($url, 'rb', false, $ctx);
if (!$fp) {
throw new Exception("Problem with $url, $php_errormsg");
}

$response = @stream_get_meta_data ($fp);
if ($response === false) {
throw new Exception("Problem reading data from $url, $php_errormsg");
}
return $response;
} // End of do_post_request
//
function do_get_request($url,  $useragent)
{
$params = array('http' => array(
'method' => 'GET',
'user_agent' =>  $useragent

));

$ctx = stream_context_create($params);
$fp = @fopen($url, 'rb', false, $ctx);
if (!$fp) {
throw new Exception("Problem with $url, $php_errormsg");
}

$response =  @stream_get_meta_data ($fp);
if ($response === false) {
throw new Exception("Problem reading data from $url, $php_errormsg");
}
return $response;
}  // end of do_get_request
function getcookies($getarray) {
            $setcookie='';
			foreach ($getarray as $value) {
			    if (strpos($value, 'Set-Cookie') !== false) {
                    $setcookie=trim($value);
                }
            }
            $setcookie_arr=explode(':', $setcookie);
			if (isset($setcookie_arr[1])) {
                $setcookie=trim($setcookie_arr[1]);
            }
			$setcookie_arr=explode(';', $setcookie);
            if (isset($setcookie_arr[0])) {
                $setcookie=trim($setcookie_arr[0]);
            }
            return $setcookie;
        }
	
	////////////////////////////////////////////////	
        if ($this->domen=='ua') $uri = '/MasterWeb2013UA/Extra/QuotedDynamic.aspx';//'/MasterWeb2012/extra/';                
        elseif($individual) $uri = '/MasterWebPersonal-test/extra/QuotedDynamic.aspx?r=1';                
        else $uri = '/MasterWeb2015/Extra/QuotedDynamic.aspx'; ///$uri = '/MasterWeb2013/Extra/QuotedDynamic.aspx';//'/MasterWeb2011/extra/';                

        /*if (strpos($_SERVER['HTTP_HOST'],'developer.multitour.ru')!==false || strpos($_SERVER['HTTP_HOST'],'developerua.multitour.ru')!==false ){
             $server = '195.210.139.168';
             if(strpos($_SERVER['HTTP_HOST'],'developerua.multitour.ru')!== false) $uri = '/MasterWeb2043UA/Extra/QuotedDynamic.aspx';                
             if(strpos($_SERVER['HTTP_HOST'],'developer.multitour.ru')!== false) $uri = '/MasterWeb2015/Extra/QuotedDynamic.aspx';       
        } 
		else  */
		{
            $server = 'online.multitour.ru';
			//$server = '212.158.160.82';
        }
        if (defined('INDIVIDUAL_MSSERVER')) $server=INDIVIDUAL_MSSERVER;
        if (defined('INDIVIDUAL_URI')) $uri = INDIVIDUAL_URI; 
        ////////////////////////////////////////////////
	$useragent = 'Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 ( .NET CLR 3.5.30729; .NET4.0E)';
        $useragent = $_SERVER['HTTP_USER_AGENT'];
		
        $rg = do_get_request('http://'.$server.$uri,  $useragent);
		$setcookie1  = getcookies($rg['wrapper_data']);
		$pass=rawurlencode($pass);
        $login=rawurlencode($login);
        
        $post='__EVENTTARGET=&__EVENTARGUMENT=&__LASTFOCUS=&__VIEWSTATE=&ctl00%24pageMessenger%24hidMessage=&ctl00%24pageMessenger%24hidRedirect=&ctl00%24Login%24ctl01=' . $login . '&ctl00%24Login%24ctl02=' . $pass . '&ctl00%24Login%24ctl03=OK&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ddlDepartFrom=0&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ddlCountry=6263&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ddlTourType=&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyResort=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyRegion=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ddlTour=&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyHotel=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ctrlCalendar%24TxtMultiDatepickerFrom=01.05.2011&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ctrlCalendar%24TxtMultiDatepickerTo=01.05.2011&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ctrlCalendar%24DaysShift=0&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ctrlCalendar%24hidErrDate=%D0%9D%D0%B0%D1%87%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F+%D0%B4%D0%B0%D1%82%D0%B0+%D0%BD%D0%B5+%D0%BC%D0%BE%D0%B6%D0%B5%D1%82+%D0%B1%D1%8B%D1%82%D1%8C+%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B5+%D0%BA%D0%BE%D0%BD%D0%B5%D1%87%D0%BD%D0%BE%D0%B9%21&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24txtAdults=2&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24txtChilds=0&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24txtChild1=0&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24txtChild2=0&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyDuration=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyCategory=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyBoard=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24chkAnyKindOfTour=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24txtPriceMaximum=&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24currencySelector%24curList=%D1%80%D0%B1&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24qListHotel%24cbYes=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24qListHotel%24cbRequest=on&ctl00%24generalContent%24QuotedDynamicControl%24DynamicOffersFilter%24ddlPageSize=20';
		
		
        
		$rg = do_post_request('http://'.$server.$uri, $post, $useragent,$setcookie1);
		
		//print_r($rg); exit;
		
		$setcookie2 = getcookies($rg['wrapper_data']);
		
		
		if ($setcookie2=='.masterweblight-auth=' || $setcookie2=='' ) $authbool2=false;
	        else $authbool2=true;
		
		
        if ($authbool2) {
		
		    $setcookie=array($setcookie1, $setcookie2);
            //$getarray = do_get_request('http://'.$server.$uri,  $useragent, $setcookie);
            $setcookiename1='';
            $setcookievalue1='';
            $setcookiename2='';
            $setcookievalue2='';
            $setcookie1arr=explode('=', $setcookie1);
            $setcookie2arr=explode('=', $setcookie2);
            if (count($setcookie1arr)==2) {
                $setcookiename1=trim($setcookie1arr[0]);
                $setcookievalue1=trim($setcookie1arr[1]);
            }
            if (count($setcookie2arr)==2) {
                $setcookiename2=trim($setcookie2arr[0]);
                $setcookievalue2=trim($setcookie2arr[1]);
            }
            $timecookie=time();
            setcookie($setcookiename1, $setcookievalue1, $timecookie, '/', '.multitour.ru', false, true);
            setcookie($setcookiename2, $setcookievalue2, $timecookie, '/', '.multitour.ru', false, true);
        }
		
        return $authbool2;
	
    }

	public function indexAction()
    {
	
        $this->setCfgLayout('full_admin');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
	
            $url = (string)$this->_getParam('url');
            //$this->setCfgLayout('empty');
            
            $login=(string)$this->_getParam('login');
            $pass=(string)$this->_getParam('pass');
            $individual=(string)$this->_getParam('individual');
            if (!preg_match("/^[a-zA-Z0-9@._]{1,40}$/", $login)) $login='';
            if (!preg_match("/^[a-zA-Z0-9+*-]{1,20}$/", $pass)) $pass='';
            // echo '$pass='.$pass.'-<br>';             exit;
            if ($login=='' || $pass=='') {
                if (!headers_sent()) {
                    header('Location: /privateoffice/'.(($url!='/privateoffice/')?'?url='.$url:''));
                }
                exit;
            }
            $privateofficemodel=$this->getModel('Privateoffice');
     
			$curatorsmodel = $this->getModel('Curators');
            $curatorinfo=$curatorsmodel->getcuratorbylogin($login);
     	 
			$userinfo=$privateofficemodel->getuserpassbylogin($login);
			$useradmin=$privateofficemodel->getadminpassbylogin($login);
			
			$managersmodel = $this->getModel('Managers');
			$managerinfo = $managersmodel->getmanagerbylogin($login);
			
			
			
			
            $authbool1=false;
            $authbool2=false;
            if (is_array($userinfo)) {
                if ($userinfo['pass']==$pass) $authbool1=true;
            }
            elseif (is_array($useradmin)) {
                if ($useradmin['AD_PASS']==md5($pass)) $authbool1=true;
            }
            elseif (is_array($curatorinfo)) {
                if ($curatorinfo['cur_pass']==md5($pass)) $authbool1=true;
            }
			elseif (is_array($managerinfo)) {
                if ($managerinfo['cur_pass']==md5($pass)) $authbool1=true;
            }
			
			
			
             // zend_debug::dump($userinfo);
             // zend_debug::dump($pass);
             // exit;
//            if (!$authbool1 || true ) {
            // zend_debug::dump($pass);exit;
            if (!is_array($useradmin) && !is_array($curatorinfo) && !is_array($managerinfo)) {
                $authbool2=$this->authonline($login, $pass, $individual);
            }
                  // zend_debug::dump($authbool1);
                  // zend_debug::dump($authbool2);
             // exit;
			 			
     
            if (!$authbool1 && $authbool2) {
	    
	$userinfo=$privateofficemodel->getuserpassbylogin($login);
                
                // zend_debug::dump($authbool2);
                // exit;
                $userinfofull=$privateofficemodel->getuserinfobylogin($login);
						  
                // Zend_Debug::dump($userinfofull);
                // exit;
	
                if (!$userinfofull) {
                    echo 'Ошибка авторизации';
                    session_destroy();
                    exit;
                }
                $uskey=(int)$userinfofull['US_KEY'];
                if (!$userinfo) {
                    $privateofficemodel->adduserpass($uskey,$login, $pass);
                } else {
                    $privateofficemodel->fixuserpass($uskey, $pass);
                }
                //echo 'test3';
                // exit;
            }
            if ($authbool1 || $authbool2) {
                // zend_debug::dump($useradmin); exit;
                //echo 'Поздравляем дорогой друг, вы прошли авторизацию';
	
                session_start();
                //if ($login!='admin') {
                if (!is_array($useradmin) && !is_array($curatorinfo) && !is_array($managerinfo)) {
                    $userinfo=$privateofficemodel->getuserinfobylogin($login);
                    if (!$userinfo) {
                        echo 'Ошибка авторизации';
                        session_destroy();
                        exit;
                    }
                    if($userinfo['US_REG']!=1){
                        $this->sessiondestroy();
                    }
                    $uskey=(int)$userinfo['US_KEY'];
                    $usid=(int)$userinfo['US_ID'];
                    $uspost=strtolower(trim($userinfo['US_POST']));
                    $status=0;
                    $user_type='user';
                    // if (strlen($uspost)>0) $boss=1;
                    // else $boss=0;
                    if (stripos($uspost,'admin')!==false) $boss=1;
                    else $boss=0;
                } elseif(is_array($useradmin)) {
                    $usid=0;
                    $uskey=0;
                    $status=1;
                    $user_type='admin';
                    $boss=1;
                } elseif(is_array($curatorinfo)) {
                    $uskey=0;
                    $login='manager_'.$login;
                    $usid=0;
                    $status=0;
                    $user_type='manager';
                    $boss=1;
                } elseif(is_array($managerinfo)) {
                    $uskey=0;
                    $login='meneger_'.$login;
                    $usid=0;
                    $status=1;
                    $user_type='meneger';
                    $boss=1;
                }
				
                // $boss=0;
                $_SESSION['s_uskey']=$uskey;
                $_SESSION['s_usid']=$usid;
                $_SESSION['s_login']=$login;
                $_SESSION['s_status']=$status;
                $_SESSION['s_boss']=$boss;
                $_SESSION['s_user_type']=$user_type;
                
                $sessid=session_id();
                if (strlen($sessid)>40) $sessid=substr($sessid, 0, 40);
                //$ip_str=$_SERVER['REMOTE_ADDR'];
                $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
                $timestamp=time();
                if ($login!='admin') $privateofficemodel->delsessbylogin($login,$uskey);
                
                // echo '$uskey = '.$uskey.'<br>';
                // echo '$sessid = '.$sessid.'<br>';
                // exit;
                $sessinfo=$privateofficemodel->getsessinfo($uskey, $sessid);
                if (!$sessinfo) {
                    $privateofficemodel->addsess($uskey, $login, $sessid, $ip_int, $timestamp);
                }
                $sessinfo=$privateofficemodel->getsessinfo($uskey, $sessid);
                if (!$sessinfo) $this->sessiondestroy();
                $timestart_sess=$sessinfo['timestart'];
                $timeupdate_sess=$sessinfo['timeupdate'];
                $idsess_sess=(int)$sessinfo['idsess'];
                
                $this->addlogs($uskey,$login, $timestamp, $idsess_sess, $ip_int, 'GET', 'auth', '');
                
                if ($user_type == 'manager' || $user_type == 'meneger') {
                    $urlredirect='/privateoffice/userinfo/applist/';
                } elseif ($user_type == 'user') {
                    $urlredirect='/privateoffice/userinfo/';
                } else {
                    $urlredirect='/privateoffice/adminmain/';
                }
                if($url) $urlredirect = $url;//htmlspecialchars_decode($url);
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            } else {
                $this->sessiondestroy();
            }
        
        } else {
            session_start();
            if (isset($_SESSION['s_uskey'])) {
                $user_type=$_SESSION['s_user_type'];
                $status=$_SESSION['s_status'];
                if ($user_type == 'manager') {
                    $urlredirect='/privateoffice/userinfo/applist/';
                } elseif ($user_type == 'user') {
                    $urlredirect='/privateoffice/userinfo/';
                } else {
                    $urlredirect='/privateoffice/adminmain/';
                }
                
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            } 
        }
    }
    public function forgotpassAction()
    {
        $this->setCfgLayout('full_admin');
        $this->view->error=false;
        $this->view->send=false;
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $email = (string)$this->_getParam('email','');
            $captcha = (string)$this->_getParam('ct_captcha','');
            $securimage = new SecurImage_Models_securimage();
      
            if ($securimage->check($captcha) == true) {
                $this->view->send=true;
                $headers="From: \"".$this->utf8_to_cp1251('Просьба о восстановлении пароля')."\" <".$email.">\n";
                $headers.="Content-Type: text/html; charset=windows-1251\n";
                $headers.="Content-Transfer-Encoding: 8bit";
                $sendhtml='Пользователь '.$email.' просит восстановить ему пароль';
                
                //$emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='dogovor@multitour.ru';
                //$emaillist[]='semenov@multitour.ru';
//                $emaillist[]='podlevskikh@multitour.ru';
                $subjectmail=$this->utf8_to_cp1251('Просьба о восстановлении пароля');
                $sendhtml=$this->utf8_to_cp1251($sendhtml);
                
                if ($emaillist!=null) {
                     // zend_debug::dump($emaillist);
                     // exit;
                    for ($i=0;$i<count($emaillist);$i++) {
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                        if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                        } //else {
                            //echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        //}
                    }
                }
            }//$this->setCfgLayout('empty');
            else $this->view->error=true;
        } else {
            session_start();
            $_SESSION['ctform']['captcha_error'] = "";
        
            if (isset($_SESSION['s_uskey'])) {
                $user_type=$_SESSION['s_user_type'];
                $status=$_SESSION['s_status'];
                if ($user_type == 'manager') {
                    $urlredirect='/privateoffice/userinfo/applist/';
                } elseif ($user_type == 'user') {
                    $urlredirect='/privateoffice/userinfo/';
                } else {
                    $urlredirect='/privateoffice/adminmain/';
                }
                
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            } 
        }
    }
    public function managerloginAction()
    {
        $this->setCfgLayout('full_admin');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            //$this->setCfgLayout('empty');
            $login=(string)$this->_getParam('login');
            $pass=(string)$this->_getParam('pass');
            if (!preg_match("/^[a-zA-Z0-9]{1,20}$/", $login)) $login='';
            if (!preg_match("/^[a-zA-Z0-9+*-]{1,20}$/", $pass)) $pass='';
            // echo '$pass='.$pass.'-<br>';
            // exit;
            if ($login=='' || $pass=='') {
                if (!headers_sent()) {
                    header('Location: /privateoffice/manager/login/');
                }
                exit;
            }
            $privateofficemodel=$this->getModel('Privateoffice');
            $curatorsmodel = $this->getModel('Curators');
            $userinfo=$curatorsmodel->getcuratorbylogin($login);
			// zend_debug::dump($userinfo);
            // zend_debug::dump(md5($pass));
            // exit;
            $authbool1=false;
            $authbool2=false;
            if (is_array($userinfo)) {
                if ($userinfo['cur_pass']==md5($pass)) $authbool1=true;
            }
            // zend_debug::dump($authbool1);
            // exit;
//            if (!$authbool1 || true ) {
            // zend_debug::dump($authbool1);
            // exit;
            if (!$authbool1) {
                if (!headers_sent()) {
                    header('Location: /privateoffice/manager/login/');
                }
                exit;
            }
            else {
                session_start();
                
                $uskey=(int)$userinfo['cur_usid'];
                // $usid=(int)$userinfo['usid'];
                // zend_debug::dump($userinfo);
                // exit;
                $_SESSION['s_uskey']=$uskey;
				// $_SESSION['s_m_usid']=$usid;
				$login='manager_'.$login;
                $_SESSION['s_login']=$login;
                $_SESSION['s_status']=0;
                $_SESSION['s_user_type']='manager';
                
                $sessid=session_id();
                if (strlen($sessid)>40) $sessid=substr($sessid, 0, 40);
                //$ip_str=$_SERVER['REMOTE_ADDR'];
                $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
                $timestamp=time();
                $privateofficemodel->delsessbylogin($login,$uskey);
                
                // echo '$uskey = '.$uskey.'<br>';
                // echo '$sessid = '.$sessid.'<br>';
                // exit;
                $sessinfo=$privateofficemodel->getsessinfo($uskey, $sessid);
                // zend_debug::dump($sessinfo);
                // exit;
                
                if (!$sessinfo || $sessinfo['usid']!=$login) {
                    $privateofficemodel->addsess($uskey, $login, $sessid, $ip_int, $timestamp);
					// echo $login;
					// exit;
                }
                $sessinfo=$privateofficemodel->getsessinfo($uskey, $sessid);
                if (!$sessinfo) $this->sessiondestroy();
                $timestart_sess=$sessinfo['timestart'];
                $timeupdate_sess=$sessinfo['timeupdate'];
                $idsess_sess=(int)$sessinfo['idsess'];
                
                $this->addlogs($uskey,$login, $timestamp, $idsess_sess, $ip_int, 'GET', 'auth', '');
                
                $urlredirect='/privateoffice/userinfo/applist/';
                
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            }
        
        } else {
            session_start();
            // zend_debug::dump($_SESSION);
            // exit;
            if (isset($_SESSION['s_m_uskey'])) {
                $urlredirect='/privateoffice/userinfo/applist/';
                
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            } 
        }
    }
	public function agentlistAction()
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='manager' && $usertype!='admin') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
     
        $prkey = (int)$this->_getParam('prkey', 0);

        
        $kol=(int)$this->_getParam('k',30);
        if (!preg_match("/^[0-9]{1,10}$/",$kol)) $kol=30;
        if ($kol!=10 && $kol!=20 && $kol!=30 && $kol!=100 && $kol!=500) $kol=30;
        
        $page=(int)$this->_getParam('page',1);
        if (!preg_match("/^[0-9]{1,10}$/",$page)) $page=1;
        if ($page<1) $page=1;        
        
        $privateofficemodel=$this->getModel('Privateoffice');

        if ($prkey>0) { // Вывод конкретного агентства
		

		if ($_SERVER['REQUEST_METHOD'] == 'POST') { // Если отпрвлено сообщение 
			$uslogin = $_SESSION['s_login']; //  Определить кто же отправитель
			$ustype=(isset($_SESSION['s_user_type']))?$_SESSION['s_user_type']:'';
			
			
			
            if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey = $curatorinfo['cur_usid'];
				$sendername = $curatorinfo['cur_fio_position'];
				
				
            }
			}
			else
			{
				$useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
				
				$uskey = $useradmin['AD_ID'];
				$sendername = $useradmin['AD_NAME'];
			}

			
			$postaction = (string)$this->_getParam('postaction', '');
            $id_parent=0;
            $subject = (string)$this->_getParam('subject', '');
            $message = (string)$this->_getParam('message', '');
			$subject = htmlspecialchars(strip_tags(trim(substr($subject, 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message = htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message = str_replace('\'', '', $message);
            $subject = str_replace('\'', '', $subject);
            $subject = str_replace("\n", '', $subject);
            $subject = str_replace("\r", '', $subject);
  
            $usid =  (string)$this->_getParam('idfrom', '');
            $params = array();
            $params['usidfrom'] = $uslogin; //'admin';
            $params['usidto'] = $usid;
            $ip_int = $this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip'] = $ip_int;
            $timestamp = time();
            $params['time'] = $timestamp;
            $params['idmess_parent'] = $id_parent;
            $params['status'] = 1;
            $params['subject'] = $subject;
            $params['message'] = $message;
            $params['remark']='';
            $params['messtype'] = 'MTC';
           
		   
			if($postaction == 'add')
			{
			$privateofficemodel->addmess($params);
            $privateofficemodel->setmesslistbyusidviewedadmbyparentid($login,$id_parent);
			// Отправить уведомление на почту
			
			$emailfrom='noreply@multitour.ru';
			$userinfo = $privateofficemodel->getuserinfobylogin($usid);
			$datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];

			$site = 'www.multitour.ru';
			if($this->domen=='ua') $site = 'www.multitur.ua';
		
			
			 $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение из личного кабинета от компании МУЛЬТИТУР</th></tr>'."\r\n";
             $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;';
				   
			$sendhtml.=  $sendername;
			$sendhtml.='	   </td></tr>'."\r\n";
		
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://'.$site.'/privateoffice/message">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            
			$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.
				   (($parentmess['numb'])?'<a href="http://'.$site.'/privateoffice/userinfo/dogovor?code='.$parentmess['numb'].'">'
				   .stripslashes($subject).'</a>':stripslashes($subject)).'</td></tr>'."\r\n";
			
			
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($message).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table></center>';
			$sendhtml.= $this->mail_text_bottom;
			
			$subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            
			
		/*	echo $sendhtml;
			exit;*/
            $emaillist[]= $usemail;
			
            if ($emaillist!=null) {
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    

					if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
					
					
                }
            }
			
			
			//
			
            if (!headers_sent()) {
                header('Location: /privateoffice/agentlist/?prkey=' . $prkey);
            }
		    exit;
			}
			
			
        }
            
			
			
			//////////////////
            $this->setView('admagentinfo');        
			
			$this->view->prkey =  $prkey;
            $this->view->anegtinfo=$privateofficemodel->getagentinfo($prkey);
            $this->view->anegtbonus=$privateofficemodel->getagentbonus($prkey);
            if (!$this->view->anegtinfo) {
                echo '<h1>Такого агентства не существует</h3>';
                exit;
            }
            $this->view->anegtuserlist=$privateofficemodel->getanegtuserlist($prkey);
            $this->view->anegtdogslist=$privateofficemodel->getanegtdogslist($prkey);
        } else {
            $this->setView('agentlist');        
            
			
            $this->view->anegtlist=$privateofficemodel->getagentlist($kol,$page);
        }
        $this->view->prkey=$prkey;
        $this->view->uskey=$uskey;
        $count=$this->view->anegtlist['count'];
        if (ceil($count/$kol)<$page) $page=1; 
        
        // echo '$page = '.$page.'<br>';
        // echo '$kol = '.$kol.'<br>';
        // echo '$count = '.$count.'<br>';
        $this->view->page=$page;
        $this->view->kol=$kol;
        $this->view->count=$count;
        
        //echo 'memory_get_usage = '.memory_get_usage().'<br>';
    }    
	
	public function agentolddogovorAction()
    {
	$cdate  =  mktime(0,0,0,date("m"),date("d"),date("Y")); // Сегодняшняя дата
    	$this->setCfgLayout('empty');
		$defaultcuratoremail = 'kurator1@multitour.ru';
		$privateofficemodel=$this->getModel('Privateoffice');
		$rows = $privateofficemodel->getuserslistwitholddog(31);
		foreach($rows as $row)
		{
		$dateend = strtotime($row['PD_DATEEND']); // Дата окончания договора 
		
			$sendhtml= '';
			$emailfrom= $defaultcuratoremail;
			$subject = '';
			
			//print_r($row);
			if($row['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorinfo($row['PR_OWNER']);
                if ($curator) $emailfrom = $curator['cur_email'];
            }
			
			if($dateend == $cdate) //  Сегодня срок действия договора заканчивается
			{
			$subject = 'Уведомление от МУЛЬТИТУР: истек срок действия вашего агентского договора';
			
			$sendhtml='<p>';
			$sendhtml .= 'Уважаемые коллеги, срок действия вашего договора №'.$row['DG_NUM'].' истек!';
			$sendhtml.='</p>';
			} else // Срок договора закончится через N дней
			{
			$days2end = ($dateend-$cdate)/86400; // Количество дней до истечения срока договора
			$subject = '"Уведомление от МУЛЬТИТУР: истекает срок действия вашего агентского договора';
			$sendhtml='<p>';
			$sendhtml .= 'Уважаемые коллеги, срок действия вашего договора №'.$row['DG_NUM'].' истекает через '.$days2end.' дней!';
		    $sendhtml.='</p>';
			}

		 // Отправка сообщения в личный кабинет
			$params=array();
			$params['usidfrom']='admin';
			$params['usidto']=$row['US_ID'];
            $params['ip']=$this->ip2int($_SERVER['REMOTE_ADDR']);;
            $params['time']= time();
            $params['status']=1;
            $params['idmess_parent']=0;
            $params['subject']=$subject;
            $params['subject_eng']='';
            $params['numb']=''; // Номер путёвки
            $params['message']=$sendhtml;
            $params['remark']='';
			$params['messtype']='WWW'; // Тип сообщения при отправки в мастерТур
			//DBG $privateofficemodel->addmess($params);			

		// Отправка сообщения на электронный ящик
			$emailfrom='noreply@multitour.ru';
			$emaillist =  explode(";",$row['PR_EMAIL']);	
            $subjectmail=$this->utf8_to_cp1251($subject);
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
			for($emi =0; $emi < sizeof($emaillist); $emi++)
			{
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
                    $headers.="X-Sender: <".$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                   //DBG $se=mail($emaillist[$emi],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка. Адрес: $emaillist[$emi] <br>\n\r";
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$imi]." <br>\n\r";

			        }
            }
			
			
			
		}
	
	}    
	

	
	
	public function designAction()
    {
        $this->setCfgLayout('page');
    }
	public function design1Action()
    {
        $this->setCfgLayout('empty');
    }
	private function sessiondestroy() 
    {
        $url = urlencode((string)$this->_getParam('url'));
        if(!$url) $url = urlencode($_SERVER["REQUEST_URI"]);
	    // echo htmlspecialchars ($url);
		// exit;
        session_destroy();
        if (!headers_sent()) {
            header('Location: /privateoffice/'.(($url!='%2Fprivateoffice%2F' && !preg_match('/%2Fprivateoffice%2Flogout/', $url))?'?url='.$url:''));
        }
        exit;
    }

	private function authsecure($destroy=1)
    {
        if (!isset($_SESSION)) {
            session_start();
        }
        // echo 'test1 ';
        // exit;
        $sessid=session_id();
        // echo '$sessid = '.$sessid.'<br>';
        // echo 'strlen($sessid) = '.strlen($sessid).'<br>';
        //exit;
        $authbool=true;
        if (!isset($_SESSION['s_uskey'])) {
            if ($destroy) {
                $this->sessiondestroy();
            } else {
                $authbool=false;
            }
        }
		
			
		
        if ($authbool) {
            if (isset($_SERVER['REQUEST_METHOD'])) $method=$_SERVER['REQUEST_METHOD'];
            else $method='GET';
            if (isset($_SERVER['REQUEST_URI'])) {
                if (isset($_SERVER['HTTP_X_REQUESTED_WITH'])) {
                    $requesturi='';
                    $requesturi_arr=array();
                    if (isset($_SERVER['HTTP_REFERER'])) {
                        if (strpos($_SERVER['HTTP_REFERER'], '/') !== false) {
                            $requesturi_arr=explode('/',$_SERVER['HTTP_REFERER']);
                            $requesturi_arr_size=count($requesturi_arr);
                            for ($i=3; $i<$requesturi_arr_size; $i++) {
                                $requesturi.='/';
                                $requesturi.=$requesturi_arr[$i];
                            }
                        }
                    }
                } else $requesturi=$_SERVER['REQUEST_URI'];
            } else $requesturi='';
            $login=$_SESSION['s_login'];
            $ustype=(isset($_SESSION['s_user_type']))?$_SESSION['s_user_type']:'';
			
			
			
            if($ustype == 'manager'){
                preg_match('/^manager_(.*)$/', $login, $matches);
                // zend_debug::dump($matches);
                // exit;
				$login = $matches[1];
            }
			
			if($ustype == 'meneger'){
                preg_match('/^meneger_(.*)$/', $login, $matches);
            	$login = $matches[1];
            }
            $uskey=$_SESSION['s_uskey'];
			
			
			
            $requestscript='';
            $requestquery='';
            if (strpos($requesturi, '?')!==false) {
                $request_arr=explode('?', $requesturi);
                $requestscript=$request_arr[0];
                $requestquery=$request_arr[1];
            } else {
                $requestscript=$requesturi;
                $requestquery='';
            }
            $requestscript=str_replace('\'', '', $requestscript);
            $requestquery=str_replace('\'', '', $requestquery);
            $requestquery=str_replace('\\', '', $requestquery);
            $requestscript=str_replace('\\', '', $requestscript);
            $requestquery=substr(addslashes(htmlspecialchars($requestquery,ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8')),0,255);
            $requestscript=substr(addslashes(htmlspecialchars($requestscript,ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8')),0,255);

            // echo '$requestscript = '.$requestscript.'<br>';
            // echo '$requestquery = '.$requestquery.'<br>';
            // exit;
            $timestamp=time();
            $privateofficemodel=$this->getModel('Privateoffice');
            $timedel=$timestamp-$this->sessionlifetime;
            //удалем все сессии старше срока
            $privateofficemodel->delsessbytimestart($timedel);
            
            $sessinfo=$privateofficemodel->getsessinfo($uskey, $sessid);
            if($ustype == 'admin')
            {
                $userinfo=$privateofficemodel->getadminpassbylogin($login);
			}
            elseif($ustype == 'manager')
            {
                $curatorsmodel = $this->getModel('Curators');
                $userinfo=$curatorsmodel->getcuratorbylogin($login);
			}
			elseif($ustype == 'meneger')
            {
                $curatorsmodel = $this->getModel('Managers');
                $userinfo=$curatorsmodel->getmanagerbylogin($login);
			}
            else $userinfo=$privateofficemodel->getuserpassbylogin($login);
			if (!$sessinfo) {
                if ($destroy) {
                    $this->sessiondestroy();
                } else {
                    $authbool=false;
                }
            }
            if (!$userinfo) {
                if ($destroy) {
                    $this->sessiondestroy();
                } else {
                    $authbool=false;
                }
            }
        }
		
		
        if ($authbool) {
            $timestamp=time();
            $timestart_sess=$sessinfo['timestart'];
            $timeupdate_sess=$sessinfo['timeupdate'];
            $timeonline_sess=(int)$sessinfo['timeonline'];
            $idsess_sess=(int)$sessinfo['idsess'];
            $uskey_sess=(int)$sessinfo['uskey'];

            if (($timestamp-$timeonline_sess)>$this->sessiononline) {
                if($ustype == 'user')
                {
                    $usid=$userinfo['usid'];
                    $pass=$userinfo['pass'];
                    $this->authonline($usid, $pass);
			    }
                $privateofficemodel->fixsesstimeonline($uskey, $sessid, $timestamp);
            } 
            $privateofficemodel->fixsesstimeupdate($uskey, $sessid, $timestamp);
            //if ($destroy) {
                $lastlog=$privateofficemodel->getlogslast($uskey, $idsess_sess);
                $addbool=true;
                $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
                if ($lastlog) {
                    if (is_array($lastlog)) {
                        $method_last=$lastlog['method'];
                        $idsess_last=(int)$lastlog['idsess'];
                        $requestscript_last=$lastlog['fname'];
                        $requestquery_last=$lastlog['params'];
                        $idlog=$lastlog['idlog'];
                        if ($method_last==$method && $requestscript_last==$requestscript && $requestquery_last==$requestquery && $idsess_last==$idsess_sess) {
                            $privateofficemodel->updatetimelogs($idlog, $timestamp);
                            $addbool=false;
                        }
                    } 
                }
                if ($addbool) $this->addlogs($uskey_sess,(($ustype == 'manager')?'manager_':'').$login, $timestamp, $idsess_sess, $ip_int, $method, $requestscript, $requestquery);
            //}
        }
		
        //zend_debug::dump($authbool);
        
    }
	private function getuskeyinsession()
    {
        //session_start();
        // echo 'test1 ';
        // exit;
        if (isset($_SESSION['s_uskey'])) {
            $status=(int)$_SESSION['s_status'];
            $usertype = $this->getusertypeinsession();
            if ($usertype=='manager' || $usertype=='admin') {
                $uskey = (int)$this->_getParam('uskey',$_SESSION['s_uskey']);
            }
            else {
                $uskey=$_SESSION['s_uskey'];
            }
            return $uskey;
        } else {
            echo 'error';
            exit;
        }
    }
	private function getbossinsession()
    {
        //session_start();
        // echo 'test1 ';
        // exit;
        if (isset($_SESSION['s_boss'])) {
            if ($_SESSION['s_boss']) {
                return 1;
            } else {
                return 0;
            }
        } else {
            return 0;
        }
    }
    private function getusertypeinsession()
    {
        //session_start();
        // echo 'test1 ';
        // exit;
        if (isset($_SESSION['s_user_type'])) {
            return $_SESSION['s_user_type'];
        } else {
            return false;
        }
    }
    //преобразучет IP из числового в строковое значение
    private function int2ip($i) {
        $d[0]=(int)($i/256/256/256);
        $d[1]=(int)(($i-$d[0]*256*256*256)/256/256);
        $d[2]=(int)(($i-$d[0]*256*256*256-$d[1]*256*256)/256);
        $d[3]=$i-$d[0]*256*256*256-$d[1]*256*256-$d[2]*256;
        return $d[0] . '.' . $d[1] . '.' . $d[2] . '.' . $d[3];
    }
    //преобразучет IP из строкового в числовое значение
    private function ip2int($ip) {
        $a=explode('.',$ip);
        return $a[0]*256*256*256+$a[1]*256*256+$a[2]*256+$a[3];
    }    
	private function addlogs($uskey, $login, $timestamp, $idsess, $ip, $method, $requestscript, $requestquery)
    {
        $privateofficemodel=$this->getModel('Privateoffice');
        $privateofficemodel->addlogs($uskey, $login, $timestamp, $idsess, $ip, $method, $requestscript, $requestquery);
    }
    
    //Личный кабинет, главная страница пользователя
	public function userinfoAction()
    {
	 
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        // zend_debug::dump($this->view->userbonus);
        // exit;
        // if ($type==0) 
        // else $this->view->userbonus=$privateofficemodel->getuserbonusbypr($prkey);
        // zend_debug::dump($this->view->userbonus);
        // exit;
        // if (!$this->view->agentinfo) {
            // return $this->error(404);                
            // exit;
        // }
        $pgkey=(int)$this->view->agentinfo['PR_PGKEY'];
        $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
         
        $this->view->news=$privateofficemodel->getnews();
        $this->view->count=$this->view->news['count'];
        $this->view->news=$this->view->news['data'];
        if($this->view->news)
            foreach ($this->view->news as $new_id => $new)
                $this->view->news[$new_id]['date_str'] = date('d', strtotime($new['date'])).' '.$this->getmontxt(date('m',strtotime($new['date']))).' '.date('Y',strtotime($new['date']));
        $this->view->posts=$privateofficemodel->getlastposts();
        if ($alldogpriv==0) {
            $this->view->kolvodog=$privateofficemodel->getkolvodogbyus($uskey);
            $this->view->kolvodogus=$privateofficemodel->getkolvodogbyus($uskey);
        } else {
            $partners_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
            $partners_arr[]=array('key' => $prkey);
            $this->view->kolvodogus=$privateofficemodel->getkolvodogbyus($uskey);
            $this->view->kolvodogpr=$privateofficemodel->getkolvodogbypr($partners_arr);    
            $this->view->kolvodog=$privateofficemodel->getkolvodogbypr($partners_arr);    
        }
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
        $this->view->alldogpriv=$alldogpriv;
        $this->view->prkey=$prkey;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
		
    }
    public function newslistAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('page');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
       
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=(int)$this->view->userinfo['US_ID'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        //$messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        // if ($type==0) 
        // else $this->view->userbonus=$privateofficemodel->getuserbonusbypr($prkey);
        // zend_debug::dump($this->view->userbonus);
        // exit;
        // if (!$this->view->agentinfo) {
            // return $this->error(404);                
            // exit;
        // }
        $pgkey=(int)$this->view->agentinfo['PR_PGKEY'];
        $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        $this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('kol', 10);
        $this->view->news=$privateofficemodel->getnews($this->view->kol, $this->view->page);
        $this->view->count=$this->view->news['count'];
		$this->view->news=$this->view->news['data'];
        $this->view->alldogpriv=$alldogpriv;
        $this->view->prkey=$prkey;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
	public function newslistadminAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('full_admin');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status = (int)$_SESSION['s_status'];
        if ($usertype!='manager' && $usertype!='admin') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        
        // zend_debug::dump($allbool);
        // exit;
        
        $privateofficemodel=$this->getModel('Privateoffice');
        $del=(int)$this->_getParam('del', 0);
        if($del)
        {
            $privateofficemodel->delnew($del);
            $urlredirect = '/privateoffice/newcomlistadmin?nwid='.$nwid;
            
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        $newsblock = $privateofficemodel->getnews();
        $this->view->countblock=$newsblock['count'];
        $this->view->newsblock=$newsblock['data'];
		
        $this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('kol', 10);
        $this->view->news=$privateofficemodel->getnews($this->view->kol, $this->view->page);
        $this->view->count=$this->view->news['count'];
        $this->view->news=$this->view->news['data'];
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function newcomlistadminAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('full_admin');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $privateofficemodel=$this->getModel('Privateoffice');
        if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey=$curatorinfo['cur_usid'];
            }
        }
        else 
        {
            $uslogin = $_SESSION['s_login'];
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
        $status = (int)$_SESSION['s_status'];
        if ($usertype!='manager' && $usertype!='admin') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
       
        $nwid=(int)$this->_getParam('nwid',0);
        if (!$nwid) header('Location: /privateoffice/newslistadmin/');
        //if ($boss===0) $type=0;
        $del=(int)$this->_getParam('del', 0);
        if($del)
        {
            $privateofficemodel->delcom($del);
            $urlredirect = '/privateoffice/newcomlistadmin?nwid='.$nwid;
            
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $comment=(string)$this->_getParam('comment', '');
			$comment=strip_tags(trim(substr($comment, 0, 800)));
			$comment=htmlspecialchars($comment, ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
			
			
            $comment=str_replace('\'', ' ', $comment);
			
			
            // $comment=str_replace("\n", ' ', $comment);
            // $comment=str_replace("\r", ' ', $comment);
            $params['us_id']=$uskey;
            $params['new_id']=$nwid;
            $params['com_text']=$comment;
            $params['com_ustype']=$usertype;
			
			
            if($comment)
			{
			
			    $privateofficemodel->addcomment($params);
			}
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            
            $urlredirect = '/privateoffice/newcomlistadmin?nwid='.$nwid;
            
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        // zend_debug::dump($allbool);
        // exit;
        
        $this->view->new=$privateofficemodel->getnew($nwid);
        $this->view->uskey=$uskey;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function newadminAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('full_admin');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status = (int)$_SESSION['s_status'];
        if ($usertype!='manager' && $usertype!='admin') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        
        $privateofficemodel=$this->getModel('Privateoffice');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $id=(int)$this->_getParam('id', 0);
            $annotation=(string)$this->_getParam('annotation', '');
            $important=(int)(bool)$this->_getParam('important', '');
            $text=(string)$this->_getParam('text', '');
            $annotation=htmlspecialchars(strip_tags(trim(substr($annotation, 0, 3000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            //$text=htmlspecialchars(trim(substr($text, 0, 3000)));
            $annotation=str_replace('\'', ' ', $annotation);
            $annotation=str_replace("\n", ' ', $annotation);
            $annotation=str_replace("\r", ' ', $annotation);
            $text=str_replace("\'", ' ', $text);
            $params['new_id']=$id;
            $params['new_annotation']=$annotation;
            $params['new_important']=$important;
            $params['new_text']=$text;
            if($id) $privateofficemodel->updatenew($params);
            else $privateofficemodel->addnew($params);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            $urlredirect = '/privateoffice/newslistadmin';
    ;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        $new_id=(int)$this->_getParam('id',0);
        $this->view->new=$privateofficemodel->getnew($new_id);
        $text = ($this->view->new)?$this->view->new[0]['new_text']:'';
        include_once('Editor/configOptima.php');
		$WWEditor = new WWEditor('text', stripslashes($text), 'tiny', 4, "wpro", true);
		$this->view->new[0]['new_text'] = $WWEditor->return_editor(400, 300);
		$WWEditor->fmanager();
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function commenteditadminAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('full_admin');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $privateofficemodel=$this->getModel('Privateoffice');
        if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey=$curatorinfo['cur_usid'];
            }
        }
        else 
        {
            $uslogin = $_SESSION['s_login'];
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
        $status = (int)$_SESSION['s_status'];
        if ($usertype!='manager' && $usertype!='admin') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        //if ($boss===0) $type=0;
        $nwid=(int)$this->_getParam('nwid',0);
        $comid=(int)$this->_getParam('comid', 0);
        if (!$comid || !$nwid) header('Location: /privateoffice/newslistadmin/');
        
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $com=(string)$this->_getParam('com', '');
            $com=htmlspecialchars(trim(substr($com, 0, 30000)),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $com=str_replace('\'', ' ', $com);
            $params['com_id']=$comid;
            $params['com_text']=$com;
            $privateofficemodel->updatecom($params);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            $urlredirect = '/privateoffice/newcomlistadmin?nwid='.$nwid;
    ;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        $this->view->com=$privateofficemodel->getcom($comid);
        $this->view->nwid=$nwid;
        $this->view->uskey=$uskey;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function newAction()
    {
        // $this->setCfgLayout('private');
        $this->setCfgLayout('page');
        $this->authsecure();
		$uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $uskey=(int)$this->view->userinfo['US_KEY'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        //$messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo);
        // exit;
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $new_id=(int)$this->_getParam('id',0);
        $this->view->new=$privateofficemodel->getnew($new_id);
        if (!$this->view->new) {
            return $this->error(404);                
            exit;
        }
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $comment=(string)$this->_getParam('comment', '');
            $comment=htmlspecialchars(strip_tags(trim(substr($comment, 0, 2000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $comment=str_replace('\'', ' ', $comment);
            // $comment=str_replace("\n", ' ', $comment);
            // $comment=str_replace("\r", ' ', $comment);
            $params['us_id']=$uskey;
            $params['new_id']=$new_id;
            $params['com_text']=$comment;
            if($comment)
                $privateofficemodel->addcomment($params);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            $urlredirect = '/privateoffice/new?id='.$new_id.(($usertype=='admin' || $usertype=='manager')? '&uskey='.$uskey:'');
    ;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        $this->view->alldogpriv=$alldogpriv;
        $this->view->prkey=$prkey;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function userprivAction()
    {
        //$this->setCfgLayout('private');
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        if (!$uskey || !$boss) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);

        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        
        $this->view->agentuserlist=$privateofficemodel->getagentuserlistpriv($prkey);
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->uskey=$uskey;
        $this->view->status=$status;
    }
    public function setuserprivAction()
    {
        //$this->setCfgLayout('private');
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        $uskeypriv=(int)$this->_getParam('uskeypriv',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
		
        if (!$uskey || !$boss) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $userinfo=$privateofficemodel->getuserinfo($uskey);
        $userprivinfo=$privateofficemodel->getuserinfo($uskeypriv);
        // zend_debug::dump($userinfo);
        // zend_debug::dump($userprivinfo);
        // exit;
        if (!$userinfo || !$userprivinfo || $userinfo['US_PRKEY']!=$userprivinfo['US_PRKEY']) {
            return $this->error(404);                
            exit;
        }
        $checked=$this->_getParam('checked');
		
        $privateofficemodel->switchagentuserlistpriv($uskeypriv, (int)($checked=='true'));
    }
	//
	 public function setusermsgprivAction()
    {
        //$this->setCfgLayout('private');
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        $uskeypriv=(int)$this->_getParam('uskeypriv',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
		
        if (!$uskey || !$boss) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $userinfo=$privateofficemodel->getuserinfo($uskey);
        $userprivinfo=$privateofficemodel->getuserinfo($uskeypriv);
        // zend_debug::dump($userinfo);
        // zend_debug::dump($userprivinfo);
        // exit;
        if (!$userinfo || !$userprivinfo || $userinfo['US_PRKEY']!=$userprivinfo['US_PRKEY']) {
            return $this->error(404);                
            exit;
        }
        $checked=$this->_getParam('checked');
		
        $privateofficemodel->switchagentuserlistmsgpriv($uskeypriv, (int)($checked=='true'));
    }
	
	
    public function filtersimvol($turname) {
        $charset=mb_detect_encoding($turname, "auto", true);
        // echo '$charset = '.$charset;
        if ($charset=='UTF-8') $turname1251 = $this->utf8_to_cp1251($turname);
        else $turname1251=$turname;
        $turname1251 = preg_replace('/[^'.$this->utf8_to_cp1251('ЙЦУКЕНГШЩЗХЪЭЖДЛОРПАВЫФЯЧСМИТЬБЮЁйцукенгшщзхъэждлорпавыфячсмитьбюё').', 0-9A-Za-z, &.-]/', '', $turname1251);
        $turname = $this->cp1251_to_utf8($turname1251);
        return $turname;
    }   
	public function applisttabAction()
    {
        // zend_debug::dump("!");
        // exit;
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status=(int)$_SESSION['s_status'];
        
        $dgcode = (string)$this->_getParam('code','');
        if (strlen($dgcode)>0 && !preg_match("/^[A-Z]{0,1}[0-9]{1,10}$/", $dgcode)) {
            $dgcode='';
        }
        $session_year = (isset($_SESSION['app_year']))?$_SESSION['app_year']:date('Y');
        $year = (int)$this->_getParam('year',$session_year);
        $session_crdate = (isset($_SESSION['app_crdate']))?$_SESSION['app_crdate']:(($usertype == 'manager' || $usertype == 'admin')?date('d\.m\.Y'):'');
        $crdate = (string)$this->_getParam('crdate', $session_crdate);
        $crdatefrom = '';
        $crdateto='';
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdate)) {
            $crdate = '';
        }
        if (strlen($crdate)>0) {
		    $crdate_arr = explode('.', $crdate);
            if (sizeof($crdate_arr)!=3) $crdate='';
            else {
                $day=(int)$crdate_arr[0];
                $mon=(int)$crdate_arr[1];
                $year=(int)$crdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdatefrom = '';
                else {
//2010-12-22 18:44:48                
                    $timestamp = mktime(0, 0, 0, $mon, $day, $year);
                    $crdatefrom = date('Y-m-d H:i:s', $timestamp);
                    $crdateto = date('Y-m-d H:i:s', strtotime('+1 days', strtotime($crdatefrom)));
                }
            }
        }
        $_SESSION['app_crdate']=$crdate;
        $turdate = (string)$this->_getParam('turdate', '');
        $turdatestamp = '';
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $turdate)) {
            $turdate = '';
        }
        if (strlen($turdate)>0) {
            $turdate_arr = explode('.', $turdate);
            if (sizeof($turdate_arr)!=3) $turdate='';
            else {
                $day=(int)$turdate_arr[0];
                $mon=(int)$turdate_arr[1];
                $year=(int)$turdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $turdatestamp = '';
                else {
                    $timestamp = mktime(0, 0, 0, $mon, $day, $year);
                    $turdatestamp = date('Y-m-d H:i:s', $timestamp);
                }
            }
        }          
        $turname = (string)$this->_getParam('turname', '');
        // echo '$turname = '.$turname.'<br>';
        $turname = substr($turname, 0, 255);
        $turname = $this->filtersimvol($turname);
        // echo '$turname = '.$turname.'<br>';
        
        $turistname = (string)$this->_getParam('turistname', '');
        $turistname = substr($turistname, 0, 255);
        $turistname = $this->filtersimvol($turistname);
        
        $statusok = (int)$this->_getParam('statusok', 0);
        if ($statusok != 1 && $statusok != 0) $statusok = 0;
        $statusnotpay = (int)$this->_getParam('statusnotpay', 0);
        if ($statusnotpay != 1 && $statusnotpay != 0) $statusnotpay = 0;
        $statusnull = (int)$this->_getParam('statusnull', 0);
        if ($statusnull != 1 && $statusnull != 0) $statusnull = 0;
        
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        $orderfield=(string)$this->_getParam('orderfield','');
        $ordertype=(string)$this->_getParam('ordertype','');
        if ($orderfield!='dgcode'
            && $orderfield!='fio'
            && $orderfield!='nman'
            && $orderfield!='turdate'
            && $orderfield!='nday'
            && $orderfield!='turname'
            && $orderfield!='status'
            && $orderfield!='price'
            && $orderfield!='payed'
            && $orderfield!='crdate'
            && $orderfield!='usid') $orderfield='crdate';
        if ($ordertype!='asc') $ordertype='desc';
        else $ordertype='asc';
        // echo '$orderfield = '.$orderfield.'<br>';
        // echo '$ordertype = '.$ordertype.'<br>';
        
        $kol=(int)$this->_getParam('k',30);
        if (!preg_match("/^[0-9]{1,10}$/",$kol)) $kol=30;
        if ($kol!=10 && $kol!=20 && $kol!=30 && $kol!=100 && $kol!=500) $kol=30;
        
        $page=(int)$this->_getParam('page',1);
        if (!preg_match("/^[0-9]{1,10}$/",$page)) $page=1;
        if ($page<1) $page=1;        
        // echo '$page = '.$page.'<br>';
        // echo '$kol = '.$kol.'<br>';
        
        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		
		
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        // zend_debug::dump($uskey);
        if (($usertype=='manager' || $usertype=='meneger' ||  $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        // exit;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            if($usertype == 'manager') 
            {
                $curatorsmodel = $this->getModel('Curators');
                $this->view->managerinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
			if($usertype == 'meneger') 
            {
                $curatorsmodel = $this->getModel('Managers');
                $this->view->managerinfo=$curatorsmodel->getmanagerbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
            $this->view->userinfo = $privateofficemodel->getuserinfo($uskey);
          //  $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $params=array();
        if (strlen($dgcode)>0) {
            $params['dgcode']=$dgcode;
        }
        if (strlen($year)>0) {
            $params['year']=$year;
            $_SESSION['app_year']=$year;
        }
        if (strlen($crdatefrom)>0) {
            $params['crdatebegin']=$crdatefrom;
            $params['crdateend']=$crdateto;
        }
        if (strlen($turdatestamp)>0) {
            $params['turdate']=$turdatestamp;
        }
        if (strlen($turname)>0) {
            $params['turname']=$turname;
        }
        if (strlen($turistname)>0) {
            $params['turistname']=$turistname;
        }
        if ($statusok) {
            $params['statusok']=1;
        }
        if ($statusnotpay) {
            $params['statusnotpay']=1;
        }
        if ($statusnull) {
            $params['statusnull']=1;
        }
        
        // if ($type==0) 
            // $this->view->applist=$privateofficemodel->getapplist($uskey, $type,$kol,$page,$orderfield,$ordertype,$params,$allbool);
        // else 
            // $this->view->applist=$privateofficemodel->getapplist($prkey, $type,$kol,$page,$orderfield,$ordertype,$params,$allbool);
        // if ($type==0) 
            // $this->view->applist=$privateofficemodel->getapplist($uskey, $type,$kol,$page,$orderfield,$ordertype,$params,$allbool);
        // else 
            // $this->view->applist=$privateofficemodel->getapplist($prkey, $type,$kol,$page,$orderfield,$ordertype,$params,$allbool);
          // zend_debug::dump($type);
            // exit;
        
		
		$partners_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
		$partners_arr[]=array('key' => $prkey);
		
		$partners_new_arr = array();
		
        if($year == 2014 )
		{
			for($prkeyi = 0; $i < sizeof($partners_arr); $i++)
			{
				
				$partners_new_arr[] = array('key'=>$privateofficemodel->getPrKey2014($partners_arr[$prkeyi]['key']));
			}
		$partners_arr = $partners_new_arr;	
		}
		
		
		
		
		
		$this->view->admin_view = false;
        if(count($partners_arr) || in_array($usertype, array('admin', 'manager'))) $this->view->admin_view = true;
        
        if ($type==0 && $year != 2014) 
            $this->view->applist=$privateofficemodel->getapplist(array(array('key'=>$uskey)), $type,$kol,$page,$orderfield,$ordertype,$params,$allbool);
        else 
			
            $this->view->applist=$privateofficemodel->getapplist($partners_arr, 1 ,$kol,$page,$orderfield,$ordertype,$params,$allbool);
        foreach ($this->view->applist['data'] as $key=>$row) {
            // echo '$key = '.$key.'<br>';
            $dgkey=$row['DG_Key'];
            //$turistlist=
            $turlist=$privateofficemodel->getturistlist($dgkey,$params['year']);
            // $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
            $this->view->applist['data'][$key]['turlist']=$turlist;
            // $dupuserkey=(int)$row['DG_DUPUSERKEY'];
            // if ($dupuserkey==0) {
                // $this->view->applist['data'][$key]['US_ID']='';
            // } else {
                // $userinfoapp=$privateofficemodel->getuserinfo($dupuserkey);
                // if (isset($userinfoapp['US_ID'])) {
                    // $this->view->applist['data'][$key]['US_ID']=$userinfoapp['US_ID'];
                // } else {
                    // $this->view->applist['data'][$key]['US_ID']='';
                // }
            // }
            // zend_debug::dump($turlist);
            //$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            // //zend_debug::dump($row);
            // exit;
        }
        // exit;
        $count=$this->view->applist['count'];
        $price=$this->view->applist['price'];
        $persons=$this->view->applist['persons'];
        $payed=$this->view->applist['payed'];
        // echo '$count='.$count.'<br>';
        //exit;
        // zend_debug::dump($this->view->applist);
        // exit;
        $pgkey=(int)$this->view->agentinfo['PR_PGKEY'];
    
        $this->view->uskey=$uskey;
        //echo $this->view->uskey;exit;
        $this->view->type=$type;
        $this->view->ustype=$usertype;
        $this->view->orderfield=$orderfield;
        $this->view->ordertype=$ordertype;
        $this->view->status=$status;


        if (ceil($count/$kol)<$page) $page=1; 
        
        $this->view->page=$page;
        $this->view->year=$year;
        $this->view->kol=$kol;
        $this->view->count=$count;        
        $this->view->price=$price;        
        $this->view->persons=$persons;        
        $this->view->payed=$payed;        
        $this->view->dgcode = $dgcode;
        $this->view->crdate = $crdate;
        $this->view->turdate = $turdate;
        $this->view->turname = $turname;
        $this->view->turistname = $turistname;
        $this->view->statusok = $statusok;
        $this->view->statusnotpay = $statusnotpay;
        $this->view->statusnull = $statusnull;
        
    }
    public function utf8_to_cp1251($str) {
        $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
        return $encoded_data;
    }        
    public function cp1251_to_utf8($str) {
        $encoded_data = mb_convert_encoding($str, 'UTF-8', 'Windows-1251');
        return $encoded_data;
    }        
    
	public function applistAction()
    {
        $this->setCfgLayout('full_admin');
		$this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
		if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        if($usertype == 'meneger')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^meneger_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status = (int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code', '');
        $dgcode = substr($dgcode, 0, 10);
        if (strlen($dgcode)>0 && !preg_match("/^[A-Z]{0,1}[0-9]{1,10}$/", $dgcode)) {
            $dgcode = '';
        }
        $crdate = (string)$this->_getParam('crdate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdate)) {
            $crdate = '';
        }
        if (strlen($crdate) > 0) {
            $crdate_arr = explode('.', $crdate);
            if (sizeof($crdate_arr) != 3) $crdate = '';
            else {
                $day = (int)$crdate_arr[0];
                $mon = (int)$crdate_arr[1];
                $year = (int)$crdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdate = '';
            }
        }
        $turdate = (string)$this->_getParam('turdate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $turdate)) {
            $turdate = '';
        }
        if (strlen($turdate) > 0) {
            $turdate_arr = explode('.', $turdate);
            if (sizeof($turdate_arr) != 3) $turdate = '';
            else {
                $day = (int)$turdate_arr[0];
                $mon = (int)$turdate_arr[1];
                $year = (int)$turdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $turdate = '';
            }
        }        
        $turname = (string)$this->_getParam('turname', '');
        $turname = substr($turname, 0, 255);
        $turname = $this->filtersimvol($turname);
        
        $turistname = (string)$this->_getParam('turistname', '');
        $turistname = substr($turistname, 0, 255);
        $turistname = $this->filtersimvol($turistname);

        $statusok = (int)$this->_getParam('statusok', 0);
        if ($statusok != 1 && $statusok != 0) $statusok = 0;
        
        $type = (int)$this->_getParam('type', 0);
        if ($type != 1 && $type != 0) $type = 0;
        //if ($boss===0) $type=0;
        $kol = (int)$this->_getParam('k', 30);
        if (!preg_match("/^[0-9]{1,10}$/", $kol)) $kol = 30;
        if ($kol != 10 && $kol != 20 && $kol != 30 && $kol != 100 && $kol != 500) $kol = 30;
        
        $page = (int)$this->_getParam('page', 1);
        if (!preg_match("/^[0-9]{1,10}$/", $page)) $page = 1;
        if ($page < 1) $page = 1;
        // echo '$page = '.$page.'<br>';
        // echo '$kol = '.$kol.'<br>';
        // echo '$uskey = '.$uskey.'<br>';
        // echo '$status = '.$status.'<br>';
        // exit;
        
        $privateofficemodel = $this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        // echo '$type = '.$type.'<br>';
        // echo '$boss = '.$boss.'<br>';
        // exit;
        if (($usertype=='manager' || $usertype=='meneger' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        
		
            
        if (!$allbool) {
		
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
        
			
			if($usertype == 'manager') 
            {
                $curatorsmodel = $this->getModel('Curators');
                $this->view->managerinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
			if($usertype == 'meneger') 
            {
			    $curatorsmodel = $this->getModel('Managers');
                $this->view->managerinfo=$curatorsmodel->getmanagerbylogin($uslogin);
                
				if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
			
			
            $this->view->userinfo = $privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey = (int)$this->view->userinfo['US_PRKEY'];
            $this->view->agentinfo = $privateofficemodel->getagentinfo($prkey);
            // if (!$this->view->agentinfo) {
                // return $this->error(404);                
                // exit;
            // }
			
			
			
            $this->view->anegtdoginfo = $privateofficemodel->getanegtdoginfo($prkey);
            $pgkey = (int)$this->view->agentinfo['PR_PGKEY'];
        }
		
		
		
        $page_actives=array(200 =>'200');
        Zend_Registry::set('page_actives', $page_actives);
		
        $this->view->uskey = $uskey;
        $this->view->ustype = $usertype;
        $this->view->allbool=$allbool;
        $this->view->status=$status;
        $this->view->type = $type;
        $this->view->dgcode = $dgcode;
        $this->view->crdate = $crdate;
        $this->view->turdate = $turdate;
		
        $this->view->turname = $turname;
        $this->view->turistname = $turistname;
        $this->view->statusok = $statusok;
        
		
		
		// if (ceil($count/$kol)<$page) $page=1; 
        
        // $this->view->page=$page;
        // $this->view->kol=$kol;
        // $this->view->count=$count;        
    }
    
	public function logoutAction()
    {
        $this->setCfgLayout('empty');
        $this->authsecure();
        //session_start();
        $login=$_SESSION['s_login'];
        $uskey=$_SESSION['s_uskey'];
        $privateofficemodel=$this->getModel('Privateoffice');
        if ($login!='admin') $privateofficemodel->delsessbylogin($login,$uskey);
        $this->sessiondestroy();
    }
	public function headbuttonAction()
    {
	
	  if (isset($_SESSION['s_login'])) {
            $this->view->authbool=true;
      } else $this->view->authbool=false;
	
    }
	public function adminmainAction()
    {
 //       $this->setCfgLayout('full_admin');
         
		 
		 
        $this->setCfgLayout('page');
        $this->authsecure();
        $status=$_SESSION['s_status'];
		
		
		
		
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
		//$page_actives=array(36 => '36', 3336 =>'3336', 4=>'4', 0=>'0');
		
		
		
		$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
        Zend_Registry::set('page_actives', $page_actives);

	$privateofficemodel=$this->getModel('Privateoffice');
		$this->view->news=$privateofficemodel->getnews();
        $this->view->count=$this->view->news['count'];
        $this->view->news=$this->view->news['data'];
        if($this->view->news)
            foreach ($this->view->news as $new_id => $new)
                $this->view->news[$new_id]['date_str'] = date('d', strtotime($new['date'])).' '.$this->getmontxt(date('m',strtotime($new['date']))).' '.date('Y',strtotime($new['date']));
        $this->view->posts=$privateofficemodel->getlastposts();
        
		
		
    }
    public function checkBookAction()
    {
         $this->clear();
        //$this->setCfgLayout('');
        if (!isset($_SESSION)) {
           session_start();
        }
        // if(isset($_SESSION['s_user_type']) && $_SESSION['s_user_type']=='user' && isset($_SESSION['s_login'])) { 
            // $lowlogin = strtolower($_SESSION['s_login']);
            // if(in_array( $lowlogin , array('test1', 'test2', 'malkovae', 'kudryshe', 'tamatmul', 'scorpio', 'ruskan1', 'pkirina', 'mtpolya', 'muminova', 'olennik', 'volkona', 'kovun', 'komarova')))
                echo 1;
        // }
    }
    public function managerlistAction()
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        if($_SERVER['REQUEST_METHOD']=='POST')
        {
            $usid=(string)$this->_getParam('usid');
            $login=(string)$this->_getParam('login');
            $name=(string)$this->_getParam('name');
            $pass=(string)$this->_getParam('pass');
            $isActive=(string)$this->_getParam('isActive');
            // echo '$pass='.$pass.'-<br>';
            // exit;
            if ($login=='') {
                if (!headers_sent()) {
                    header('Location: /privateoffice/managerlist/');
                }
                exit;
            }
            if($usid)
                $privateofficemodel->updatemanagerinfo($usid, $login, $name, $pass, $isActive);
            else
                $privateofficemodel->addmanager($login, $name, $pass, $isActive);
            if (!headers_sent()) {
                header('Location: /privateoffice/managerlist/');
            }
        }
        $managerslist=$privateofficemodel->getmanagerslist();
		$this->view->managerslist = $managerslist;
		$this->view->status=$status; 
    }
	public function adminmenuAction()
    {
	/*
        $lay = (string)$this->_getParam('lay','');
        if ($lay=='page') {
            $this->setCfgLayout('page');
        } else {
            $this->setCfgLayout('full_admin');
        }
	*/
	$this->setCfgLayout('full_admin');
        // echo '$lay = '.$lay.'<br>';
        // exit;
        $usertype = $this->getusertypeinsession();
        if ($usertype!='manager' && $usertype!='admin' && $usertype!='meneger') {
            session_destroy();
            return $this->error(404);                
            exit;
        };
        $status=(int)$_SESSION['s_status'];
        $uskey=$_SESSION['s_uskey'];
        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey=$curatorinfo['cur_usid'];
            }
        };
		
		if($usertype == 'meneger') {
		
            if (isset($_SESSION['s_login'])) {
			
                preg_match('/^meneger_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Managers');
                $curatorinfo=$curatorsmodel->getmanagerbylogin($uslogin);
                $uskey=$curatorinfo['manag_usid'];
				
            }
        };
		
		
		
        $this->view->messnotread = $privateofficemodel->getmessnotreadbyusidcur($uskey);
        $this->view->page = (string)$this->_getParam('page','');
        $this->authsecure();
        $usertype = $this->getusertypeinsession();
		
		
        $this->view->ustype=$usertype;
		
    }
	public function userslogAction()
    {
        $this->setCfgLayout('full_admin');
        // echo 'test ';
        // exit;
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }

        // $orderfield=(string)$this->_getParam('orderfield','');
        // $ordertype=(string)$this->_getParam('ordertype','');
        // if ($orderfield!='dgcode'
            // && $orderfield!='fio'
            // && $orderfield!='nman'
            // && $orderfield!='turdate'
            // && $orderfield!='nday'
            // && $orderfield!='turname'
            // && $orderfield!='status'
            // && $orderfield!='price'
            // && $orderfield!='payed'
            // && $orderfield!='crdate') $orderfield='crdate';
        // if ($ordertype!='asc') $ordertype='desc';
        // else $ordertype='asc';        
        // echo '$ordertype = '.$ordertype.'<br>';
        // echo '$orderfield = '.$orderfield.'<br>';
        
// Login login
// Время входа 	mintime
// Время выхода 	maxtime
// Продол-ть (мин) 	timelong
// Действий (кол-во) countgo       
        
        
        $privateofficemodel=$this->getModel('Privateoffice');
        $sesslist=$privateofficemodel->getsesslist();
        $logsauthlist=$privateofficemodel->getlogsauthlist();
        if (is_array($sesslist)) {
            foreach ($sesslist as $key=>$row) {
                $row['ip']=$this->int2ip($row['ip']);
                $sesslist[$key]=$row;
            }
        }
        if (is_array($logsauthlist)) {
            foreach ($logsauthlist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $row['ip']=$this->int2ip($row['ip']);
                $logsauthlist[$key]=$row;
            }
        }
        $this->view->sesslist=$sesslist;
        $this->view->logsauthlist=$logsauthlist;
        
    }
	public function usersstatAction()
    {
        $this->setCfgLayout('full_admin');
        // echo 'test ';
        // exit;
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
    
        $params = array();
        $startdate = (string)$this->_getParam('startdate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $startdate)) {
            $startdate = '';
        } else $params['startdate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $startdate);
        $enddate = (string)$this->_getParam('enddate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $enddate)) {
            $enddate = '';
        } else $params['enddate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $enddate);
        $grouppartners = (string)$this->_getParam('grouppartners', '');
        if ('manager' == $grouppartners) {
            $params['grouppartners'] = $grouppartners;
        } else $params['grouppartners'] = $grouppartners = 'partner';
        
        // $orderfield=(string)$this->_getParam('orderfield','');
        // $ordertype=(string)$this->_getParam('ordertype','');
        // if ($orderfield!='pr_key'
            // && $orderfield!='us_key'
            // && $orderfield!='duration'
            // && $orderfield!='count') $orderfield='duration';
        // if ($ordertype!='asc') $ordertype='desc';
        // else $ordertype='asc';
        
        // $kol = (int)$this->_getParam('k', 30);
        // if (!preg_match("/^[0-9]{1,10}$/", $kol)) $kol = 30;
        // if ($kol != 10 && $kol != 20 && $kol != 30 && $kol != 100 && $kol != 500) $kol = 30;
        
        // $page = (int)$this->_getParam('page', 1);
        // if (!preg_match("/^[0-9]{1,10}$/", $page)) $page = 1;
        // if ($page < 1) $page = 1;
        
        $privateofficemodel=$this->getModel('Privateoffice');
        $sesslist=$privateofficemodel->getsesslist();
        if (is_array($sesslist)) {
            foreach ($sesslist as $key=>$row) {
                $row['ip']=$this->int2ip($row['ip']);
                $sesslist[$key]=$row;
            }
        }
        $this->view->sesslist=$sesslist;
        $this->view->startdate=$startdate;
        $this->view->enddate=$enddate;
        $this->view->grouppartners=$grouppartners;
        
    }
	public function usersstattabAction()
    {
        $this->setCfgLayout('full_admin');
        
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
    
        $params = array();
        
		$startdate = (string)$this->_getParam('startdate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $startdate)) {
            $startdate = date('d.m.Y', time()-1209600);
        } 
		$params['startdate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $startdate);
        
		
		
		
		
		$enddate = (string)$this->_getParam('enddate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $enddate)) {
            $enddate = date('d.m.Y');
        } 
		$params['enddate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $enddate);
		
		
        $partner = (string)$this->_getParam('partner', '');
        if (!preg_match("/^[0-9]+$/", $partner)) {
            $partner = '';
        } else $params['partner'] = (int)$partner;
        $grouppartners = (string)$this->_getParam('grouppartners', '');
        if ('manager' == $grouppartners || $partner) {
            $params['grouppartners'] = 'manager';
        } else $params['grouppartners'] = $grouppartners = 'partner';
        
        $orderfield=(string)$this->_getParam('orderfield','');
        $ordertype=(string)$this->_getParam('ordertype','');
        if ($orderfield!='pr_key'
            && $orderfield!='us_key'
            && $orderfield!='duration'
            && $orderfield!='count') $orderfield='duration';
        if ($ordertype!='asc') $ordertype='desc';
        else $ordertype='asc';
        $params['ordertype'] = $ordertype;
        $params['orderfield'] = $orderfield;
        
        $kol = (int)$this->_getParam('k', 30);
        if (!preg_match("/^[0-9]{1,10}$/", $kol)) $kol = 30;
        if ($kol != 10 && $kol != 20 && $kol != 30 && $kol != 100 && $kol != 500) $kol = 30;
        $params['kol'] = $kol;
        
        $page = (int)$this->_getParam('page', 1);
        if (!preg_match("/^[0-9]{1,10}$/", $page)) $page = 1;
        if ($page < 1) $page = 1;
        $params['page'] = $page;
        
		
	    
		
        $privateofficemodel=$this->getModel('Privateoffice');
        $logsauthlist=$privateofficemodel->getstatauthlist($params);
        
        $this->view->logsauthlist=$logsauthlist['data'];
        $this->view->startdate=$startdate;
        $this->view->enddate=$enddate;
        $this->view->partner=$partner;
        $this->view->grouppartners=$grouppartners;
        $this->view->dur_all=(int)($logsauthlist['summ']['dur_all']/60);
        $this->view->count_all=$logsauthlist['summ']['count_all'];
        $this->view->orderfield=$orderfield;
        $this->view->ordertype=$ordertype;
        if (ceil($logsauthlist['count']/$kol)<$page) $page=1; 
        
        $this->view->page=$page;
        $this->view->count=$logsauthlist['count'];
        $this->view->kol=$kol;
    }
	
	
	public function usersstatsummtabAction()
    {
        $this->setCfgLayout('full_admin');
        // echo 'test ';
        // exit;
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
    
        $params = array();
        $startdate = (string)$this->_getParam('startdate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $startdate)) {
            $startdate = '';
        } else $params['startdate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $startdate);
        $enddate = (string)$this->_getParam('enddate', '');
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $enddate)) {
            $enddate = '';
        } else $params['enddate'] = preg_replace('/^([0-9]{2}).([0-9]{2}).([0-9]{4})$/', '$3-$2-$1', $enddate);
        $partner = (string)$this->_getParam('partner', '');
        if (!preg_match("/^[0-9]+$/", $partner)) {
            $partner = '';
        } else $params['partner'] = (int)$partner;
        
        $privateofficemodel=$this->getModel('Privateoffice');
        $logsauthsummlist=$privateofficemodel->getstatauthsummlist($params);
        
        $this->view->startdate=$startdate;
        $this->view->enddate=$enddate;
        $this->view->dur_all=(int)($logsauthsummlist['dur_all']/60);
        $this->view->count_all=$logsauthsummlist['count_all'];
    }
	public function userslogdetailAction()
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $login=(string)$this->_getParam('login', '');
        if (!preg_match("/^[a-zA-Z0-9]{1,20}$/", $login)) $login='';
        if ($login=='') {
            if (!headers_sent()) {
                header('Location: /privateoffice/logout');
            }
            exit;
        }
        //echo '$login = '.$login.'<br>';
        $privateofficemodel=$this->getModel('Privateoffice');
        $userinfopass=$privateofficemodel->getuserpassbylogin($login);
        if ($login!='admin') {
            $userinfo=$privateofficemodel->getuserinfobylogin($login);
        } else $userinfo=array();
        if (!$userinfopass) {
            if (!headers_sent()) {
                header('Location: /privateoffice/userslog');
            }
            exit;
        }
        $uskey=$userinfopass['uskey'];
        $logsbylogin=$privateofficemodel->getlogsdelailbylogin($uskey);
        if (is_array($logsbylogin)) {
            foreach ($logsbylogin as $key=>$row) {
                $row['ip']=$this->int2ip($row['ip']);
                $logsbylogin[$key]=$row;
            }
        }
        $this->view->logsbylogin=$logsbylogin;
        //zend_debug::dump($userinfo);
        $this->view->userinfopass=$userinfopass;
        $this->view->userinfo=$userinfo;
        $this->view->login=$login;
        // zend_debug::dump($userinfo);
        // exit;
        
    }
    public function messformAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type', 0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/messsend/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        $privateofficemodel=$this->getModel('Privateoffice');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $subject_title=(string)$this->_getParam('subject', '');
            $numb=(string)$this->_getParam('numb', '');
            $message=(string)$this->_getParam('message', '');
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$userinfo) {
                if (!headers_sent()) {
                    header("Location:".$urlredirect);
                }
                exit;
            }
            $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
            if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
            else $alldogpriv = $userinfopriv['us_all_dog_priv'];
            $errormess="";
            if( !in_array($subject_title, array("dogovorrequest", "dogovortransfer"))) $numb=0;
            if( in_array($subject_title, array("dogovorrequest", "dogovortransfer")) && !preg_match("/^[A-Za-z]\d{5}$/i", $numb))
                $errormess="Номер заявки указан не верно.";
            elseif( in_array($subject_title, array("dogovorrequest", "dogovortransfer")) && !$privateofficemodel->getdogovorinfo($numb))
                $errormess="Заявка не найдена в базе.";
            elseif( in_array($subject_title, array("dogovorrequest", "dogovortransfer"))){
                $doginfo = $privateofficemodel->getdogovorinfo($numb);
                if( !$doginfo )
                    $errormess="Заявка не найдена в базе.";
                elseif( $doginfo['DG_PARTNERKEY']!=$userinfo['US_PRKEY'] OR ($doginfo['DG_DUPUSERKEY']!=$uskey AND !$userinfopriv))
                    $errormess="Заявка не доступна.";
            }
            elseif( !in_array($subject_title, array("dogovorrequest", "dogovortransfer", "general", "complaint", "commission")))
                $errormess="Не указана тема сообщения.";
            if( !$message)
                $errormess="Опишите вашу просьбу.";
            if($errormess)
            {
                $this->view->errormess=$errormess;
                $this->view->subject=$subject_title;
                $this->view->numb=$numb;
                $this->view->message=$message;
            }
            else
            {
            $message=htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message=str_replace('\'', ' ', $message);
            if(in_array($subject_title, array("dogovorrequest", "dogovortransfer")))
                $subject = "Вопрос из личного кабинета по заявке №".$numb;
            elseif($subject_title=='general') $subject = "Общий вопрос из личного кабинета.";
            elseif($subject_title=='complaint') $subject = "Жалоба из личного кабинета.";
			elseif($subject_title=='commission') $subject = "Вопрос по договору/комиссии.";
            // zend_debug::dump($uskey);
            // exit;
            // zend_debug::dump($userinfo);
            // exit;
            
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            $params=array();
            $params['usidfrom']=$usid;
            $params['usidto']='admin';
            $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip']=$ip_int;
            $timestamp=time();
            $params['time']=$timestamp;
            $params['idmess_parent']=0;
            $params['status']=1;
            $params['subject']=$subject;
            $params['subject_eng']=$subject_title;
            $params['numb']=$numb;
            $params['message']=$message;
            $params['remark']='От агента: ';
            $params['messtype']='WWW';
            
			$privateofficemodel->addmess($params);
			
            //Формируем сообщение для отправки на емайл
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
            $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
            $ip=$_SERVER['REMOTE_ADDR'];
            
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение из личного кабинета</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($subject).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($message).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table>';
            $emailfrom='noreply@multitour.ru';
            
            $agentinfo=$privateofficemodel->getagentinfo($prkey);
            if($agentinfo['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
                foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist))
                    $emaillist[]=$cur['cur_email_group'];
            }
            if($subject_title=="complaint"){
                $emaillist[]='sharov@multitour.ru';
				$emaillist[]='kredich@multitour.ru';
				$emaillist[]='sale-1@multitour.ru';
                $emaillist[]='post@multitour.ru';
                $emaillist[]='kulagin@multitour.ru';
            }
            $emaillist[]='semenov@multitour.ru';
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
       
            if ($emaillist!=null) {
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
                }
            }
            
            
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
        }
        if ($_SERVER['REQUEST_METHOD']=='GET') {
            $subject_title=(string)$this->_getParam('subject', '');
            $numb=(string)$this->_getParam('numb', '');
            if( in_array($subject_title, array("dogovorrequest", "dogovortransfer")) && preg_match("/^[A-Za-z]\d{5}$/i", $numb))
            {
                $this->view->subject=$subject_title;
                $this->view->numb=$numb;
            }
        }
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
              
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;      
    }
    public function qualitysendAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type', 0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/qualitysend/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        $privateofficemodel=$this->getModel('Privateoffice');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $text=(string)$this->_getParam('text', '');
            
            $errormess="";
            $text=htmlspecialchars(strip_tags(trim(substr($text, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $text=str_replace('\'', ' ', $text);
            $text=str_replace("\n", ' ', $text);
            $text=str_replace("\r", ' ', $text);
            $subject = "Сообщение с сайта из раздела \"Контроль качества\"";
            // zend_debug::dump($uskey);
            // exit;
            // zend_debug::dump($userinfo);
            // exit;
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$userinfo) {
                if (!headers_sent()) {
                    header("Location:".$urlredirect);
                }
                exit;
            }
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            
            //Формируем сообщение для отправки на емайл
            $timestamp=time();
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usphone=$userinfo['US_PHONE'];
            $usfullname=$userinfo['US_FULLNAME'];
            
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение с сайта из раздела "Контроль качества"</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Телефон:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usphone.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($text).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td><b>&nbsp;&nbsp;&nbsp;Время</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>';
            $sendhtml.='</table>';
            $emailfrom=$usemail;
            
            $agentinfo=$privateofficemodel->getagentinfo($prkey);
            if($agentinfo['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
                foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist))
                    $emaillist[]=$cur['cur_email_group'];
            }
            $emaillist[]='av@multitour.ru';
            $emaillist[]='sale-1@multitour.ru';
          
		  if($this->domen == 'ua')
                $emaillist[]='zymniy@multitur.ua';
            else
            {
                $emaillist[]='sharov@multitour.ru';
                $emaillist[]='kredich@multitour.ru';
            }
            $emaillist[]='semenov@multitour.ru';
            $emaillist[]='kulagin@multitour.ru';

            // $emaillist[]='kulenkov@multitour.ru';
//            $emaillist[]='podlevskikh@multitour.ru';
            //$emaillist[]='elkin@multitour.ru';
            //$subjectmail='Сообщение из личного кабинета';
            $subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            // function utf8_to_cp12511($str) {
                // $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                // return $encoded_data;
            // }        
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            // echo 'Отправляем сообщение<br>';
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            
            // echo $sendhtml;
            
            if ($emaillist!=null) {
                 // zend_debug::dump($emaillist);
                 // exit;
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
                }
            }
            
            // exit;
            //$privateofficemodel->addmess($params);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
              
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;      
    }
    public function messsendAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $status=$_SESSION['s_status'];
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/messsend/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->ustype=$usertype; 
    }
    public function messageAction() 
    {
		
	$crdate = 	(string)$this->_getParam('crdate','');
	if($crdate)
		{
		$crdate = strtotime($crdate);
		if($crdate) 
			{
				
				$crdate = date('d.m.Y',$crdate);
			}  else $crdate = '';
		
		}
	$filter = array(
	'crdate' => $crdate,
	'subject' => (string)$this->_getParam('subject',''),
	'dgcode' => (string)$this->_getParam('dgcode',''),
	'msgtxt' => (string)$this->_getParam('msgtxt','')
	);	

		
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/message/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $id_parent=(int)$this->_getParam('id_parent', '');
            $message=(string)$this->_getParam('message', '');
            $privateofficemodel=$this->getModel('Privateoffice');
            
            $errormess="";
			
            if( !$message)
			{
                $this->view->errormess="Опишите вашу просьбу.";
				
			}	
            else
            {
            $message=htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message=str_replace('\'', ' ', $message);
			
            $subject = "";
            
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$userinfo) {
                if (!headers_sent()) {
                    header("Location:".$urlredirect);
                }
                exit;
            }
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            $params=array();
            $params['usidfrom']=$usid;
            $params['usidto']='admin';
            $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip']=$ip_int;
            $timestamp=time();
            $params['time']=$timestamp;
            $params['idmess_parent']=$id_parent;
            $params['status']=1;
            $params['subject']=$subject;
            $params['message']=$message;
            $params['remark']='От агента: ';
            $params['messtype']='WWW';
            
            //Формируем сообщение для отправки на емайл
			$parentmess = $privateofficemodel->getmessagebyid($id_parent);
			$subject = $parentmess['subject'];
			
			
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
            $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
            $ip=$_SERVER['REMOTE_ADDR'];
            
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение из личного кабинета</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($subject).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($message).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table>';
            $emailfrom='noreply@multitour.ru';
            
            $agentinfo=$privateofficemodel->getagentinfo($prkey);
            if($agentinfo['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
                foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist))
                    $emaillist[]=$cur['cur_email_group'];
            }
            // $emaillist[]='elkin@multitour.ru';
            // $emaillist[]='noreply@multitour.ru';
            $emaillist[]='semenov@multitour.ru';
//            $emaillist[]='podlevskikh@multitour.ru';
            //$subjectmail='Сообщение из личного кабинета';
            $subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            // function utf8_to_cp12511($str) {
                // $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                // return $encoded_data;
            // }        
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            // echo 'Отправляем сообщение<br>';
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            
            // echo $sendhtml;
            
            if ($emaillist!=null) {
                 // zend_debug::dump($emaillist);
                 // exit;
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                   if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
                }
			
            }
            
            
			$privateofficemodel->addmess($params);
			 if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
        }
		
		
		$type  = 1;
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        
		$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_msg_priv']===null)  $allmsgpriv = 1;
        else $allmsgpriv = $userinfopriv['us_all_msg_priv'];
        if($allmsgpriv==0) $type=0;
        
		$prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];        
		
		
        
		$this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('k', 10);
        $messlist= $privateofficemodel->getmesslistbyusid_filtered($usid, 'usidto', (($type == 1)?$prkey:0), 'p0',$filter, $this->view->page, $this->view->kol);
	
        
		$this->view->messlist = $messlist['mess'];
		$this->view->messcount = $messlist['count'];
		
		
		$this->view->filter = $filter;	
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
        
    }
    public function setmessbyidreadAction() 
    {
        $this->clear();
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $id=(int)$this->_getParam('id',0);
        $login=(string)$this->_getParam('login',0);
        $privateofficemodel=$this->getModel('Privateoffice');
        if(!$uskey) {
            if (!$id) { exit; }
            if($usertype=='manager' || $usertype=='admin')
            {
                $privateofficemodel->setmessreadbyid($id, $login, "usidfrom");
            }
        }
        $userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$userinfo) {
            exit;
        }
        $usid=$userinfo['US_ID'];        
        // echo '$usid = '.$usid.'<br>';
        // exit;
        //$privateofficemodel->setmessreadbyid($id, $usid, 'usidto');
		$privateofficemodel->setmessreadbyparent($id, 'usidto');
		$this->view->messnotread = $privateofficemodel->getmessnotreadbyusidcur($uskey);
    }
    public function miniforumnewpostAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type', 0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/miniforum/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        $privateofficemodel=$this->getModel('Privateoffice');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $title=(string)$this->_getParam('title', '');
            $post=(string)$this->_getParam('post', '');
            $privateofficemodel=$this->getModel('Privateoffice');
            
            $errormess="";
            if( !$post || !$post)
                $this->view->errormess="Опишите вашу просьбу.";
            else
            {
            $post=htmlspecialchars(strip_tags(trim(substr($post, 0, 5000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $post=str_replace('\'', ' ', $post);
            // $post=str_replace("\n", ' ', $post);
            // $post=str_replace("\r", ' ', $post);
            $title=htmlspecialchars(strip_tags(trim(substr($title, 0, 250))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $title=str_replace('\'', ' ', $title);
            $title=str_replace("\n", ' ', $title);
            $title=str_replace("\r", ' ', $title);
            // zend_debug::dump($uskey);
            // exit;
            // zend_debug::dump($userinfo);
            // exit;
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$userinfo) {
                if (!headers_sent()) {
                    header("Location:".$urlredirect);
                }
                exit;
            }
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            $params=array();
            $params['id_us']=$uskey;
            $params['us_type']=$usertype;
            $params['id_parent']=0;
            $params['new']=1;
            $params['title']=$title;
            $params['post']=$post;
            // exit;
            $privateofficemodel->addpost($params);
            //$privateofficemodel->setmesslistbyusidparentviewed($usid, $id_parent);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
        }
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
              
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;      
    }
    public function adminminiforumnewpostAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $urlredirect='/privateoffice/adminminiforum/';
        if ($usertype!='manager' && $usertype!='admin') {
            return $this->error(404);
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey = $curatorinfo['cur_usid'];
            }
        }
        else
        {
            $privateofficemodel=$this->getModel('Privateoffice');
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $title=(string)$this->_getParam('title', '');
            $post=(string)$this->_getParam('post', '');
            $privateofficemodel=$this->getModel('Privateoffice');
            
            $errormess="";
            if( !$post || !$post)
                $this->view->errormess="Опишите вашу просьбу.";
            else
            {
            $post=htmlspecialchars(strip_tags(trim(substr($post, 0, 5000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $post=str_replace('\'', ' ', $post);
            // $post=str_replace("\n", ' ', $post);
            // $post=str_replace("\r", ' ', $post);
            $title=htmlspecialchars(strip_tags(trim(substr($title, 0, 250))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $title=str_replace('\'', ' ', $title);
            $title=str_replace("\n", ' ', $title);
            $title=str_replace("\r", ' ', $title);
            // zend_debug::dump($uskey);
            // exit;
            // zend_debug::dump($userinfo);
            // exit;
            $params=array();
            $params['id_us']=$uskey;
            $params['us_type']=$usertype;
            $params['id_parent']=0;
            $params['new']=1;
            $params['title']=$title;
            $params['post']=$post;
            // exit;
            $privateofficemodel->addpost($params);
            //$privateofficemodel->setmesslistbyusidparentviewed($usid, $id_parent);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
        }
        $this->view->uskey=$uskey;
        $this->view->ustype=$usertype;      
    }
    public function miniforumAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/miniforum/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $id_parent=(int)$this->_getParam('id_parent', '');
            $post=(string)$this->_getParam('post', '');
            $privateofficemodel=$this->getModel('Privateoffice');
            
            $errormess="";
            if( !$post || !$id_parent)
                $this->view->errormess="Опишите вашу просьбу.";
            else
            {
            $post=htmlspecialchars(strip_tags(trim(substr($post, 0, 5000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $post=str_replace('\'', ' ', $post);
            // $post=str_replace("\n", ' ', $post);
            // $post=str_replace("\r", ' ', $post);
            $title = "";
            // zend_debug::dump($uskey);
            // exit;
            // zend_debug::dump($userinfo);
            // exit;
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$userinfo) {
                if (!headers_sent()) {
                    header("Location:".$urlredirect);
                }
                exit;
            }
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            $params=array();
            $params['id_us']=$uskey;
            $params['us_type']=$usertype;
            $params['id_parent']=$id_parent;
            $params['new']=1;
            $params['title']=$title;
            $params['post']=$post;
            // exit;
            $privateofficemodel->addpost($params);
            //$privateofficemodel->setmesslistbyusidparentviewed($usid, $id_parent);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        // $uspost=$this->view->userinfo['US_POST'];
        
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        // zend_debug::dump($this->view->agentinfo['PR_CREATOR']);
        // zend_debug::dump($type);
        // exit;
        $this->view->userbonus=$privateofficemodel->getuserbonusbyus($uskey);
        $usid=$this->view->userinfo['US_ID'];        
        // echo '$usid = '.$usid.'<br>';
        // exit;
        // $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        // $messnotreadadm=$privateofficemodel->getmessnotreadbyusidadm($usid);
        
        $postlist=$privateofficemodel->getminiforumposts($uskey);
        $privateofficemodel->readminiforum($uskey);
        // $privateofficemodel->setmesslistbyusidread($usid);
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
        $this->view->postlist=$postlist;
    }
    public function adminminiforumAction() 
    {
       
	$sadmin = false;
	   $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $urlredirect='/privateoffice/adminminiforum/';
        if ($usertype!='manager' && $usertype!='admin') {
            return $this->error(404);
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey = $curatorinfo['cur_usid'];
            }
        }
        else
        {
            $privateofficemodel=$this->getModel('Privateoffice');
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
	
	if($usertype == 'manager') 
	{
		$admins =  array(323,446); // Кураторы имеющие возможность редактировать минифорум
		if(in_array($uskey , $admins)) $sadmin =  true;
	} else
	{
		$admins =  $admins =  array(1,3,4,15,17);// Администраторы имеющие возможность редактировать минифорум
		if(in_array($uskey , $admins)) $sadmin =  true;
	}
		
		
        if ($_SERVER['REQUEST_METHOD']=='POST') {
			$postaction = (string)$this->_getParam('postaction', '');
            $id_parent=(int)$this->_getParam('id_parent', '');
            $post=(string)$this->_getParam('post', '');
			$ptitle=(string)$this->_getParam('ptitle', '');
            $privateofficemodel=$this->getModel('Privateoffice');
            
			
			if($postaction == 'del' && $sadmin)
			{
			if($id_parent)
				{
				$privateofficemodel->deletepost($id_parent);
				if (!headers_sent()) {
                header('Location: ' . $urlredirect);
				}
				exit;
				}
			} 
			
			if($postaction == 'save' && $sadmin)
			{
			if($id_parent)
				{
				$privateofficemodel->savepost($id_parent,$post,$ptitle);
				if (!headers_sent()) {
                header('Location: ' . $urlredirect);
				}
				exit;
				}
			} 
			
			if($postaction == 'add')
			{
            $errormess="";
            if( !$post || !$id_parent)
                $this->view->errormess="Опишите вашу просьбу.";
            else
            {
            $post=htmlspecialchars(strip_tags(trim(substr($post, 0, 5000))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $post=str_replace('\'', ' ', $post);
            $title = "";
            $prkey=0;
            $params=array();
            $params['id_us']=$uskey;
            $params['us_type']=$usertype;
            $params['id_parent']=$id_parent;
            $params['new']=1;
            $params['title']=$title;
            $params['post']=$post;
            //print_r($params);
			 //exit;
			
            $privateofficemodel->addpost($params);
              if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
            }
			} 
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->type=$type;
        $this->view->uskey=$uskey;
		// $uspost=$this->view->userinfo['US_POST'];
        
        $postlist=$privateofficemodel->getminiforumposts($uskey);
        $privateofficemodel->readminiforum($uskey);
        // $privateofficemodel->setmesslistbyusidread($usid);
        //zend_debug::dump($messlist);
        //exit;
        $this->view->ustype=$usertype;
        $this->view->postlist=$postlist;
		//
		$this->view->sadmin = $sadmin; // Супер админ.
    }
    public function paysystemAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/paysystem/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
		$this->view->paysystem=$privateofficemodel->getpaysystem();
        $this->view->usps=$privateofficemodel->getpaysystembyuser($uskey);
        $this->view->psresult=$privateofficemodel->getpaysystemresult();
        if ($_SERVER['REQUEST_METHOD']=='POST' && !$this->view->usps) {
            $paysystem=$this->_getParam('paysystem', '');
            $payother=(string)$this->_getParam('payother', '');
            $payother=htmlspecialchars(strip_tags(trim(substr($payother, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $payother=str_replace('\'', ' ', $payother);
            $payother=str_replace("\n", ' ', $payother);
            $payother=str_replace("\r", ' ', $payother);
            // zend_debug::dump($paysystem);
            // exit;
            if($payother) $privateofficemodel->setpaysystem($uskey, 0, $payother);
            foreach($paysystem as $ps) $privateofficemodel->setpaysystem($uskey, $ps, '');
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
        }
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        
        // $privateofficemodel->setmesslistbyusidread($usid);
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function catalogrequestAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/catalogrequest/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$userinfo) {
            return $this->error(404);                
            exit;
        }
        $prkey=(int)$userinfo['US_PRKEY'];
        $usid=$userinfo['US_ID'];
        $agentinfo = $privateofficemodel->getagentinfo($prkey);
		$this->view->catalog=$privateofficemodel->getcataloglist();
        $this->view->prct=$privateofficemodel->getcataloglistbypr($prkey);
        $send=(string)$this->_getParam('send','');
        if ($_SERVER['REQUEST_METHOD']=='POST' && $send!='t') {
            $cat=$this->_getParam('cat', '');
            $this->view->cat=$cat;
            $address=(string)$this->_getParam('catalog-addres', '');
            $address=htmlspecialchars(strip_tags(trim(substr($address, 0, 200))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $address=str_replace('\'', ' ', $address);
            $address=str_replace("\n", ' ', $address);
            $address=str_replace("\r", ' ', $address);
            // zend_debug::dump($paysystem);
            // exit;
            $i = 0;
            $timestamp=time();
            $request_id = $timestamp.$uskey;
            $this->view->error = '';
            if($address) 
                foreach($cat as $cat_id => $cat_count) { 
                    if($cat_count)$privateofficemodel->setcatalogrequest($request_id, $uskey, $prkey, $cat_id, $cat_count, $address); $i += $cat_count;}
            else $this->view->error = 'Введите адрес для доставки. ';
            if( $address && !$i ) $this->view->error .= 'Не выбраны каталоги.';
            
            //Формируем сообщение для отправки на емайл
            if (!$this->view->error) { 
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
            $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
            $ip=$_SERVER['REMOTE_ADDR'];
            $uscatalog='';
            $uscatalogpast='';
            $rq_id='';
            foreach ($this->view->catalog as $catalog)
                $uscatalog.='&nbsp;&nbsp;&nbsp;'.$catalog['CT_NAME'].' - '.$cat[$catalog['CT_ID']].'<br>';
            foreach ($this->view->prct as $catalog)
                if($rq_id==$catalog['RQ_ID']) $uscatalogpast.='&nbsp;&nbsp;&nbsp;'.$catalog['CT_NAME'].' - '.$catalog['count'].'<br>';
                else {
                    $rq_id=$catalog['RQ_ID'];
                    $uscatalogpast.='<br>Заказ от '.$catalog['date'].', '.$catalog['US_FULLNAME'].':<br>';
                    $uscatalogpast.='&nbsp;&nbsp;&nbsp;'.$catalog['CT_NAME'].' - '.$catalog['count'].'<br>';
                }
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Заказ каталогов</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td> '.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td> '.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td> '.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr> '."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td> '.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr> '."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Дата заказа:</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr> '."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Заказ каталогов:</b></td> '.
                   '<td>'.$uscatalog.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Адрес доставки:</b></td> '.
                   '<td>&nbsp;&nbsp;&nbsp;'.$address.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Ранее заказанные каталоги:</b></td> '.
                   '<td>'.$uscatalogpast.'</td></tr> '."\r\n";
            $sendhtml.='</table>';
            $emailfrom='noreply@multitour.ru';
            
            $agentinfo=$privateofficemodel->getagentinfo($prkey);
            if($this->domen == 'ua')
			{
			$emaillist[] = 'info@multitur.ua';
			} else 
			{
            if($agentinfo['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
                foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist))
                    $emaillist[]=$cur['cur_email_group'];
            }




			//$emaillist[]='kulenkov@multitour.ru';
            $emaillist[]='semenov@multitour.ru';
//            $emaillist[]='podlevskikh@multitour.ru';



			}
            $subjectmail='Заказ каталогов';
            //$subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            // function utf8_to_cp12511($str) {
                // $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                // return $encoded_data;
            // }        
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            // echo 'Отправляем сообщение<br>';
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            
            // echo $sendhtml;
            
            if ($emaillist!=null) {
                 // zend_debug::dump($emaillist);
                 // exit;
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    // $se=true;
                    // echo $sendhtml;exit;
                    if (!$se) {
                            $this->view->error .= "При отправке сообщения возникла ошибка";
                            exit;
                    } else {
                            $this->view->ok = 'Сообщение на E-mail успешно отправлено '.'<br>';
                    }
                }
            }
            // if (!headers_sent() && !$this->view->error) {
                // header('Location: ' . $urlredirect.'&send=t');
            // }
            }
        }
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        
        // $privateofficemodel->setmesslistbyusidread($usid);
        
        //zend_debug::dump($messlist);
        //exit;
        $this->view->send=$send;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
    }
    public function agentinfoAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type', 0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $edit=(int)$this->_getParam('edit', 0);
        if ($edit!=1 && $edit!=0) $edit=0;
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
        $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        $this->view->anegtuserlist=$privateofficemodel->getanegtuserlist($prkey);
        $this->view->ustype=$usertype;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
        $this->view->edit=$edit;
    }
    function sum1cAction() 
    {
        $this->clear();
        $sumpriceall=(float)$this->_getParam('sumpriceall', '');
        $summnew=(string)$sumpriceall;
        if (strpos($summnew, '.')!==false) {
            $drobbool=true;
            $summnew_len=strlen($summnew);
            $summnew_drob=substr($summnew, strpos($summnew, '.'), $summnew_len);
            $summnew=substr($summnew, 0, strpos($summnew, '.'));
        } else {
            $drobbool=false;
            $summnew_drob='';
        }
        // zend_debug::dump($summnew_drob);
        // exit;
        $summnew_len=strlen($summnew);
        $summnew_ost=$summnew_len%3;
        $i3=-1;
        $summnew1='';
        for ($i=0; $i<$summnew_len; $i++) {
            $i2=$i+1;
            if ($i3>-1) {
                $i3++;
            }
            $summnew1.=$summnew[$i];
            if ($summnew_ost==$i2 && $summnew_ost>0 && strlen($summnew)>3) {
                $i3=0;
                $summnew1.=' ';
            }
            if ($summnew_ost==0 && $i==0) {
                $i3=1;
            }
            if ($i3>0 && $i+1<$summnew_len) {
                if (($i3%3)==0) $summnew1.=' ';
            }
        }
        if ($drobbool) {
            if ($summnew_drob[0]=='.') $summnew_drob[0]=',';
            for ($i=0; $i<3; $i++) {
                if (isset($summnew_drob[$i])) {
                    $summnew1.=$summnew_drob[$i];
                } else {
                    $summnew1.='0';
                }
            }
        } 
        echo $summnew1;
        //return false;
    }
    function rusvariationAction() 
    {
        $this->clear();
        $variation=array(
            'day'=>array('день', 'дня', 'дней'),
            'night'=>array('ночь', 'ночи', 'ночей')
        );
        $num=(int)$this->_getParam('num', 0);
        $word=(string)$this->_getParam('word', '');
        if (isset($variation[$word])) {
            $num=strrev(''.$num);
			// echo strlen($num).' num[strlen($num)-1]='.$num[strlen($num)-1].' num[strlen($num)-1]='.$num[strlen($num)-2];
			// echo ' num[1]='.$num[1].' num[0]='.$num[0];
			
			if(strlen($num)>=2 && $num[1]=='1')
			    echo $variation[$word][2];
            else
            {
            
                switch($num[0])
                {
                    case '1':
                        echo $variation[$word][0];
                        break;
                    case '2':
                    case '3':
                    case '4':
                        echo $variation[$word][1];
                        break;
                    case '5':
                    case '6':
                    case '7':
                    case '8':
                    case '9':
                    case '0':
                        echo $variation[$word][2];
                        break;
                    default:
                        echo '';
                        break;
                }
            }
        } else {
            echo '';
        }
    }    
    function sum1ckopAction() 
    {
        $this->clear();
        $sumpriceall=(float)$this->_getParam('sumpriceall', '');
        $summnew=(string)$sumpriceall;
        if (strpos($summnew, '.')!==false) {
            $drobbool=true;
            $summnew_len=strlen($summnew);
            $summnew_drob=substr($summnew, strpos($summnew, '.'), $summnew_len);
            $summnew=substr($summnew, 0, strpos($summnew, '.'));
        } else {
            $drobbool=false;
            $summnew_drob='';
        }
        // zend_debug::dump($summnew_drob);
        // exit;
        // echo '<br>$summnew='.$summnew.'<br>';
        // exit;
        $summnew_len=strlen($summnew);
        $summnew_ost=$summnew_len%3;
        // echo '$summnew_len = '.$summnew_len.'<br>';
        // echo '$summnew_ost = '.$summnew_ost.'<br>';
        // zend_debug::dump($summnew);
        $i3=-1;
        $summnew1='';
        for ($i=0; $i<$summnew_len; $i++) {
            $i2=$i+1;
            if ($i3>-1) {
                $i3++;
            }
            $summnew1.=$summnew[$i];
            // echo '$summnew_ost='.$summnew_ost.'<br>';
            // echo '$i2='.$i2.'<br>';
            // echo '$summnew_ost='.$summnew_ost.'<br>';
            if ($summnew_ost==$i2 && $summnew_ost>0 && strlen($summnew)>3) {
                $i3=0;
                $summnew1.=' ';
            }
            if ($summnew_ost==0 && $i==0) {
                $i3=1;
            }
            if ($i3>0 && $i+1<$summnew_len) {
                if (($i3%3)==0) $summnew1.=' ';
            }
        }
        // exit;
        if ($drobbool) {
            if ($summnew_drob[0]=='.') $summnew_drob[0]=',';
            for ($i=0; $i<3; $i++) {
                if (isset($summnew_drob[$i])) {
                    $summnew1.=$summnew_drob[$i];
                } else {
                    $summnew1.='0';
                }
            }
        } else {
            $summnew1.=',00';
        }
        echo $summnew1;
        
        //return false;
    }    
    public function suminwordsactAction() {
        $this->clear();
        $sum=(int)$this->_getParam('sum', '');
        $param=(int)$this->_getParam('param', 0);
        //1 сумма прописью
        //2 рублей
        if ($param!=1 && $param!=2) $param=1;
        $suminword='';        
        $suminword=$this->suminwords($sum,$param);
		
        echo $suminword;
		
    }
    public function suminwordsactkopAction() {
        $this->clear();
        $sum=(float)$this->_getParam('sum', '');
        $sum=(string)$sum;
        
        if (strpos($sum, '.')!==false) {
            $drobbool=true;
            $sum_len=strlen($sum);
            $sum_drob=substr($sum, strpos($sum, '.')+1, $sum_len);
        } else {
            $sum_drob='';
        }
        $sum_drobnew='';
        for ($i=0; $i<2; $i++) {
            if (!isset($sum_drob[$i])) {
                $sum_drobnew.='0';
            } else {
                $sum_drobnew.=$sum_drob[$i];
            }
        }
        $suminword=$sum_drobnew;
        // echo '<br>$sum_drobnew='.$sum_drobnew.'=<br>';
        // echo '<br>$sum_drob='.$sum_drob.'=<br>';
        // echo '<br>$sum = '.$sum.'<br>';
        // exit;
        // $suminword='';        
        echo $suminword;
    }
    
    function suminwords($summa,$param) {
        
		
		$summa=(string)$summa;
        $summa_len=strlen($summa);
        $sum_add='';
        for ($i=0; $i<(9-$summa_len); $i++) {
            $sum_add.='0';
        }

		
        $summa=$sum_add.$summa;
        $hundreds3=(int)$summa[0];
        $tens3=(int)$summa[1];
        $units3=(int)$summa[2];
        
        $hundreds2=(int)$summa[3];
        $tens2=(int)$summa[4];
        $units2=(int)$summa[5];
        
        $hundreds=(int)$summa[6];
        $tens=(int)$summa[7];
        $units=(int)$summa[8];
        
		
        $hundredstxt3=$this->gethundreds($hundreds3);
        $tenstxt3=$this->gettens($tens3);
        $unitstxt3=$this->getunits($units3,0);
        if ($hundreds3>0 || $tens3>0 || $units3>0) {
            $millionstxt=$this->getmillions($tens3,$units3);
        } else {
            $millionstxt='';
        }
        $hundredstxt2=$this->gethundreds($hundreds2);
        $tenstxt2=$this->gettens($tens2);
        $unitstxt2=$this->getunits($units2,1);
        if ($hundreds2>0 || $tens2>0 || $units2>0) {
            $thousandstxt=$this->getthousands($tens2,$units2);
        } else {
            $thousandstxt='';
        }
        
        $hundredstxt=$this->gethundreds($hundreds);
		$tenstxt=$this->gettens($tens);
		$unitstxt=$this->getunits($units,0);
		
        $rubleytxt=$this->getrubley($tens,$units);
        
        if ($tens3==1 && $units3>0) {
            $tenstxt3='';
            $unitstxt3='';
            $unitstxt3=$this->getunitsten($units3); //Для 11..19
        }
        if ($tens2==1 && $units2>0) {
            $tenstxt2='';
            $unitstxt2='';
            $unitstxt2=$this->getunitsten($units2); //Для 11..19
        }
        if ($tens==1 && $units>0) {
            $tenstxt='';
            $unitstxt='';
            $unitstxt=$this->getunitsten($units); //Для 11..19
        }
        if ($hundreds==0 && $tens==0 && $units==0
            && $hundreds2==0 && $tens2==0 && $units2==0
            && $hundreds3==0 && $tens3==0 && $units3==0
        ) {
            $unitstxt='ноль ';
        }
		
        if ($param==1) {
            $summatxt=$hundredstxt3;
            if (strlen($summatxt)>0 && strlen($tenstxt3)>0) $summatxt.=' ';
            $summatxt.=$tenstxt3;
            if (strlen($summatxt)>0 && strlen($unitstxt3)>0) $summatxt.=' ';
            $summatxt.=$unitstxt3;
            if (strlen($summatxt)>0) $summatxt.=' ';
            $summatxt.=$millionstxt;

            if (strlen($summatxt)>0 && strlen($hundredstxt2)>0) $summatxt.=' ';
            $summatxt.=$hundredstxt2;
            if (strlen($summatxt)>0 && strlen($tenstxt2)>0) $summatxt.=' ';
            $summatxt.=$tenstxt2;
            if (strlen($summatxt)>0 && strlen($unitstxt2)>0) $summatxt.=' ';
            $summatxt.=$unitstxt2;
            if (strlen($summatxt)>0) $summatxt.=' ';
            $summatxt.=$thousandstxt;
            
            if (strlen($summatxt)>0 && strlen($hundredstxt)>0) $summatxt.=' ';
            $summatxt.=$hundredstxt;
            if (strlen($summatxt)>0 && strlen($tenstxt)>0) $summatxt.=' ';
            $summatxt.=$tenstxt;
            if (strlen($summatxt)>0 && strlen($unitstxt)>0) $summatxt.=' ';
            $summatxt.=$unitstxt;
        } else {
            $summatxt=$rubleytxt;
        }
        return $summatxt;
    }
    function gethundreds($sum) {
        $sumtxt='';
        $hundreds=array(
            0 => '',
            1 => 'сто',
            2 => 'двести',
            3 => 'триста',
            4 => 'четыреста',
            5 => 'пятьсот',
            6 => 'шестьсот',
            7 => 'семьсот',
            8 => 'восемьсот',
            9 => 'девятьсот',
        );
        if (isset($hundreds[$sum])) $sumtxt=$hundreds[$sum];
        return $sumtxt;
    }
    function gettens($sum) {
        $sumtxt='';
        $tens=array(
            0 => '',
            1 => 'десять',
            2 => 'двадцать',
            3 => 'тридцать',
            4 => 'сорок',
            5 => 'пятьдесят',
            6 => 'шестьдесят',
            7 => 'семьдесят',
            8 => 'восемьдесят',
            9 => 'девяносто',
        );
        if (isset($tens[$sum])) $sumtxt=$tens[$sum];
        return $sumtxt;
    }
    function getunits($sum,$padej) {
        $sumtxt='';
        $units=array(
            0 => '',
            1 => 'один',
            2 => 'два',
            3 => 'три',
            4 => 'четыре',
            5 => 'пять',
            6 => 'шесть',
            7 => 'семь',
            8 => 'восемь',
            9 => 'девять',
        );
        if ($padej==1) {
            $units[1]='одна';
            $units[2]='две';
        }
        if (isset($units[$sum])) $sumtxt=$units[$sum];
        return $sumtxt;
    }
    function getunitsten($sum) {
        $sumtxt='';
        $units=array(
            0 => '',
            1 => 'одиннадцать',
            2 => 'двенадцать',
            3 => 'тринадцать',
            4 => 'четырнадцать',
            5 => 'пятнадцать',
            6 => 'шестнадцать',
            7 => 'семнадцать',
            8 => 'восемнадцать',
            9 => 'девятнадцать',
        );
        if (isset($units[$sum])) $sumtxt=$units[$sum];
        return $sumtxt;
    }
    function getrubley($tens,$units) {
	
	
	if($this->domen == 'ua')
	{
		$sumtxt='';
        if ($tens==0 && $units==0) {
            $sumtxt='гривен';
        } elseif ($tens==0 && $units==1) {
            $sumtxt='гривна';
        } elseif ($tens==0 && $units>=2 && $units<=4) {
            $sumtxt='гривны';
        } elseif ($tens==0 && $units>=5 && $units<=9) {
            $sumtxt='гривен';
        } elseif ($tens==1 && $units>=0 && $units<=9) {
            $sumtxt='гривен';
        } elseif ($tens>=2 && $units==0) {
            $sumtxt='гривен';
        } elseif ($tens>=2 && $units==1) {
            $sumtxt='гривна';
        } elseif ($tens>=2 && $units>=2 && $units<=4) {
            $sumtxt='гривны';
        } elseif ($tens>=2 && $units>=5 && $units<=9) {
            $sumtxt='гривен';
        }
	
	return $sumtxt;
	}
		$sumtxt='';
        if ($tens==0 && $units==0) {
            $sumtxt='рублей';
        } elseif ($tens==0 && $units==1) {
            $sumtxt='рубль';
        } elseif ($tens==0 && $units>=2 && $units<=4) {
            $sumtxt='рубля';
        } elseif ($tens==0 && $units>=5 && $units<=9) {
            $sumtxt='рублей';
        } elseif ($tens==1 && $units>=0 && $units<=9) {
            $sumtxt='рублей';
        } elseif ($tens>=2 && $units==0) {
            $sumtxt='рублей';
        } elseif ($tens>=2 && $units==1) {
            $sumtxt='рубль';
        } elseif ($tens>=2 && $units>=2 && $units<=4) {
            $sumtxt='рубля';
        } elseif ($tens>=2 && $units>=5 && $units<=9) {
            $sumtxt='рублей';
        }
        return $sumtxt;
    }
    function getthousands($tens,$units) {
        $sumtxt='';
        if ($tens==0 && $units==0) {
            $sumtxt='тысячи';
        } elseif ($tens==0 && $units==1) {
            $sumtxt='тысяча';
        } elseif ($tens==0 && $units>=2 && $units<=4) {
            $sumtxt='тысячи';
        } elseif ($tens==0 && $units>=5 && $units<=9) {
            $sumtxt='тысяч';
        } elseif ($tens==1 && $units>=0 && $units<=9) {
            $sumtxt='тысяч';
        } elseif ($tens>=2 && $units==0) {
            $sumtxt='тысяч';
        } elseif ($tens>=2 && $units==1) {
            $sumtxt='тысяча';
        } elseif ($tens>=2 && $units>=2 && $units<=4) {
            $sumtxt='тысячи';
        } elseif ($tens>=2 && $units>=5 && $units<=9) {
            $sumtxt='тысяч';
        }
        return $sumtxt;
    }
    function getmillions($tens,$units) {
        $sumtxt='';
        if ($tens==0 && $units==0) {
            $sumtxt='миллионов';
        } elseif ($tens==0 && $units==1) {
            $sumtxt='миллион';
        } elseif ($tens==0 && $units>=2 && $units<=4) {
            $sumtxt='миллиона';
        } elseif ($tens==0 && $units>=5 && $units<=9) {
            $sumtxt='миллионов';
        } elseif ($tens==1 && $units>=0 && $units<=9) {
            $sumtxt='миллионов';
        } elseif ($tens>=2 && $units==0) {
            $sumtxt='миллионов';
        } elseif ($tens>=2 && $units==1) {
            $sumtxt='миллион';
        } elseif ($tens>=2 && $units>=2 && $units<=4) {
            $sumtxt='миллиона';
        } elseif ($tens>=2 && $units>=5 && $units<=9) {
            $sumtxt='миллионов';
        }
        return $sumtxt;
    }    
    
	public function adminmessAction()
    {
        if (!function_exists('getmicrotime')) {
            function getmicrotime() {
               list($usec, $sec)=explode(" ", microtime()); 
               return ((float)$usec + (float)$sec); 
            } 
        }
        $time_start=getmicrotime();
	$privateofficemodel=$this->getModel('Privateoffice');
	$page =  (int) $this->_getParam('page', 1);
	$kol = (int) $this->_getParam('kol', 30);
	$gcur_id = (int) $this->_getParam('cur_id', -1);
	
	$agent = '';
	
	
	$vtypes =  array('new','old','all');
	$vtype = $this->_getParam('vtype', 'new');
	if(!in_array($vtype, $vtypes)) $vtype = 'new';
	
	
	
	$prkey =  (int) $this->_getParam('prkey', 0);
	if($prkey)
	{
		$ag = $privateofficemodel->getagentinfo($prkey);
		if($ag) $agent = $ag['PR_NAME'];
		else $prkey = 0;
	}

	
	$manager =  '';
	$usid =  (int) $this->_getParam('usid', 0);
	if($usid)
	{
		$us = $privateofficemodel->getuserinfo($usid);
		if($us) $manager = $us['US_FULLNAME'];
		else $usid = 0;
	}
	
	
	$crdate = (string)$this->_getParam('crdate', '');
	$crdated = 0;
	
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdate)) {
            $crdate = '';
        }
        if (strlen($crdate) > 0) {
            $crdate_arr = explode('.', $crdate);
            if (sizeof($crdate_arr) != 3) $crdate = '';
            else {
                $day = (int)$crdate_arr[0];
                $mon = (int)$crdate_arr[1];
                $year = (int)$crdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdate = '';
				if(strlen($crdate)>0)
				{
				$crdated =  mktime(0,0,0,$mon,$day,$year);
				}
            }
        }
	
	
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        $uskey=$_SESSION['s_uskey'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager' && $usertype!='meneger') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
		if($usertype == 'meneger') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^meneger_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $managermodel = $this->getModel('Managers');
                $managerinfo=$managermodel->getmanagerbylogin($uslogin);
                $men_id=$managerinfo['manag_usid'];
				if($gcur_id == -1) $gcur_id = $cur_id;
            }
        } elseif($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $cur_id=$curatorinfo['cur_usid'];
				if($gcur_id == -1) $gcur_id = $cur_id;
            }
        } elseif($usertype=='admin'  && $gcur_id != -1 ) $cur_id=$gcur_id; elseif
		($usertype=='admin'  && $gcur_id == -1 )  $gcur_id = 0;
        else $gcur_id=$uskey;
        
		
	
        // $messnotread=$privateofficemodel->getmessnotreadbyusid('admin');
        // $messnotreaduser=$privateofficemodel->getmessnotreadbyusiduser('admin');
        $curatorsmodel = $this->getModel('Curators');
        $curatorlist = $curatorsmodel->getcuratorlist();
		
		
		
        if($vtype == 'new')
		{
			$groupmesslist=$privateofficemodel->getgroupmessadmnew($gcur_id, $kol, $page, $prkey, $usid, $crdated,'p0');
		} else if($vtype == 'old')
		{
			$groupmesslist=$privateofficemodel->getgroupmessadmold($gcur_id, $kol, $page, $prkey, $usid, $crdated,'p0');
		} else if($vtype == 'all')
		{
			$groupmesslist=$privateofficemodel->getgroupmessadm($gcur_id, $kol, $page, $prkey, $usid, $crdated,'p0');
		} 
		$curator = array();
		if($gcur_id){
			$curator=$curatorsmodel->getcurator($gcur_id);
		}
		$this->view->curator=$curator;
		$this->view->count = $groupmesslist['count'];
        $this->view->cur_id=$gcur_id;
        $this->view->groupmesslist=$groupmesslist['data'];
		$this->view->page = $page;
        $this->view->kol = $kol;
        $this->view->curatorlist=$curatorlist;
		
		
	$this->view->vtype = $vtype;
	$this->view->agent = $agent;
	$this->view->prkey = $prkey;
	$this->view->manager = $manager;
	$this->view->usid = $usid;
	$this->view->crdate = $crdate;
	$time_end=getmicrotime();
	//zend_debug::dump($time_end-$time_start);
    }      
                
                
    public function adminmesssendAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        } else {
            $uslogin = 'admin';
        }
        if ($usertype=='admin' && $usertype!='manager') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $login = (string)$this->_getParam('login','');
        if (!preg_match("/^[a-zA-Z0-9]{1,20}$/", $login)) {
            $login='';
        }
        if ($login=='') {
            if (!headers_sent()) {
                echo "!";//header('Location: /privateoffice/logout/');
            }
            exit;
        }
		$privateofficemodel = $this->getModel('Privateoffice');
        $userinfo = $privateofficemodel->getuserinfobylogin($login);
        if (!$userinfo) {
            if (!headers_sent()) {
                header('Location: /privateoffice/adminmess/');
            }
            exit;
        }
        
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $subject = (string)$this->_getParam('subject', '');
            $message = (string)$this->_getParam('message', '');
            $subject = htmlspecialchars(strip_tags(trim(substr($subject, 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message = htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $message = str_replace('\'', '', $message);
            $message = str_replace("\n", '', $message);
            $message = str_replace("\r", '', $message);
            $subject = str_replace('\'', '', $subject);
            $subject = str_replace("\n", '', $subject);
            $subject = str_replace("\r", '', $subject);
  
            $usid = $userinfo['US_ID'];
            $params = array();
            $params['usidfrom'] = $uslogin; //'admin';
            $params['usidto'] = $usid;
            $ip_int = $this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip'] = $ip_int;
            $timestamp = time();
            $params['time'] = $timestamp;
            $params['idmess_parent'] = 0;
            $params['status'] = 1;
            $params['subject'] = $subject;
            $params['message'] = $message;
            $params['remark']='';
            $privateofficemodel->addmess($params);
            $privateofficemodel->setmesslistbyusidviewedadm($login);
            if (!headers_sent()) {
            // zend_debug::dump($message);
            // exit;
                header('Location: /privateoffice/adminmessdetail/?login=' . $login);
            }
		    exit;
        }
    }
    
	
	
	
	
	
	
	
	public function adminmailerlistAction()
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($status!=1 && $usertype!='manager') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
            }
        }
        
        //сделать просмотренными
        $privateofficemodel = $this->getModel('Privateoffice');
        /*if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $id_parent=(int)$this->_getParam('id_parent', '');
            $subject = (string)$this->_getParam('subject', '');
            $message = (string)$this->_getParam('message', '');
            $subject = htmlspecialchars(strip_tags(trim(substr($subject, 0, 1024))));
            $message = htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))));
            $message = str_replace('\'', '', $message);
            $message = str_replace("\n", '', $message);
            $message = str_replace("\r", '', $message);
            $subject = str_replace('\'', '', $subject);
            $subject = str_replace("\n", '', $subject);
            $subject = str_replace("\r", '', $subject);
  
            $usid = $userinfo['US_ID'];
            $params = array();
            $params['usidfrom'] = $uslogin; //'admin';
            $params['usidto'] = $usid;
            $ip_int = $this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip'] = $ip_int;
            $timestamp = time();
            $params['time'] = $timestamp;
            $params['idmess_parent'] = $id_parent;
            $params['status'] = 1;
            $params['subject'] = $subject;
            $params['message'] = $message;
            $privateofficemodel->addmess($params);
            $privateofficemodel->setmesslistbyusidviewedadmbyparentid($login,$id_parent);
            if (!headers_sent()) {
            // zend_debug::dump($message);
            // exit;
                header('Location: /privateoffice/adminmessdetail/?login=' . $login);
            }
		    exit;
        }*/
        $this->view->mailerlist = $privateofficemodel->getmailerlist();
    }
    public function adminmailerAction()
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
            }
        }
        $maid=(int)$this->_getParam('maid', 0);
            
        //сделать просмотренными
        $privateofficemodel = $this->getModel('Privateoffice');
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $mailer = $this->_getParam('mailer', '');
            //zend_debug::dump($mailer);
            $mailer['name'] = htmlspecialchars(strip_tags(trim(substr($mailer['name'], 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $mailer['name'] = str_replace('\'', '', $mailer['name']);
            $mailer['name'] = str_replace("\n", '', $mailer['name']);
            $mailer['name'] = str_replace("\r", '', $mailer['name']);
            $mailer['type'] = (int)$mailer['type'];
            $mailer['head'] = '';
            $mailer['foot'] = '';
            if(!$maid) $maid = $privateofficemodel->setnewmailer($mailer);
            else $privateofficemodel->updatemailer($maid, $mailer);
            
            foreach($mailer['dir'] as $dir)
            {
                $dir['name'] = htmlspecialchars(strip_tags(trim(substr($dir['name'], 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                $dir['name'] = str_replace('\'', '', $dir['name']);
                $dir['name'] = str_replace("\n", '', $dir['name']);
                $dir['name'] = str_replace("\r", '', $dir['name']);
                $dir['place'] = (int) $dir['place'];
                $dir['id'] = (int) $dir['id'];
                $dir['maid'] = (int) $maid;
                if(!$dir['id']) $dir['id'] = $privateofficemodel->setnewmailerdir($dir);
                else $privateofficemodel->updatemailerdir($dir['id'], $dir);
                foreach($dir['block'] as $block)
                {
                    $block['name'] = htmlspecialchars(strip_tags(trim(substr($block['name'], 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                    $block['name'] = str_replace('\'', '', $block['name']);
                    $block['name'] = str_replace("\n", '', $block['name']);
                    $block['name'] = str_replace("\r", '', $block['name']);
                    $block['annotation'] = htmlspecialchars(strip_tags(trim(substr($block['annotation'], 0, 3024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                    $block['annotation'] = str_replace('\'', '', $block['annotation']);
                    $block['annotation'] = str_replace("\n", '', $block['annotation']);
                    $block['annotation'] = str_replace("\r", '', $block['annotation']);
                    $block['place'] = (int) $block['place'];
                    $block['id'] = (int) $block['id'];
                    $block['maid'] = $maid;
                    $block['mdid'] = $dir['id'];
                    if(!$block['id']) $block['id'] = $privateofficemodel->setnewmailerblock($block);
                    else $privateofficemodel->updatemailerblock($block['id'], $block);
                    foreach($block['title'] as $title)
                    {
                        $title['name'] = htmlspecialchars(strip_tags(trim(substr($title['name'], 0, 1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                        $title['name'] = str_replace('\'', '', $title['name']);
                        $title['name'] = str_replace("\n", '', $title['name']);
                        $title['name'] = str_replace("\r", '', $title['name']);
                        $title['url'] = htmlspecialchars(strip_tags(trim(substr($title['url'], 0, 3024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                        $title['url'] = str_replace('\'', '', $title['url']);
                        $title['url'] = str_replace("\n", '', $title['url']);
                        $title['url'] = str_replace("\r", '', $title['url']);
                        $title['place'] = (int) $title['place'];
                        $title['id'] = (int) $title['id'];
                        $title['maid'] = $maid;
                        $title['mdid'] = $dir['id'];
                        $title['mbid'] = $block['id'];
                        if(!$title['id']) $title['id'] = $privateofficemodel->setnewmailerblocktitle($title);
                        else $privateofficemodel->updatemailerblock($title['id'], $title);
                    }
                }
            }
            
            if (!headers_sent()) {
            // zend_debug::dump($message);
            // exit;
                header('Location: /privateoffice/adminmailer?maid=' . $maid);
            }
		    exit;
        }
        //if($maid) {
            $this->view->mailertypelist = $privateofficemodel->getmailertypelist();
            $this->view->mailerinfo = $privateofficemodel->getmailerbyid($maid);
            $this->view->mailerdir = $privateofficemodel->getdirlistbymaid($maid);
            $this->view->mailerblock = $privateofficemodel->getblocklistbymaid($maid);
            $this->view->mailerblocktitle = $privateofficemodel->getblocktitlelistbymaid($maid);
        //}
        $this->view->maid = $maid;
    }
    public function adminmailerprevAction()
    {
        $this->setCfgLayout('empty');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        if($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
            }
        }
        $maid=(int)$this->_getParam('maid', 0);
        if(!$maid){
            header('Location: /privateoffice/adminmailerlist');
            
        }
        //сделать просмотренными
        $privateofficemodel = $this->getModel('Privateoffice');
        //if($maid) {
            $this->view->mailertypelist = $privateofficemodel->getmailertypelist();
            $this->view->mailerinfo = $privateofficemodel->getmailerbyid($maid);
            $this->view->mailerdir = $privateofficemodel->getdirlistbymaid($maid);
            $this->view->mailerblock = $privateofficemodel->getblocklistbymaid($maid);
            $this->view->mailerblocktitle = $privateofficemodel->getblocktitlelistbymaid($maid);
        //}
        $this->view->maid = $maid;
    }
    public function paginatorAction() 
    {
        $this->clear();
        $lr = 1;
        $cr = 5;
        $rr = 1;
        $page = (int)$this->_getParam('page', 1);
        $count = (int)$this->_getParam('count');
        $countPP = (int)$this->_getParam('kol', 30);
		$cur_id = (int)$this->_getParam('cur_id', 0);
		
		$dop = $this->_getParam('dop', '');
		$dops = array();
		if($dop)
		{
		$tmpa =  explode("|",$dop);
		
		for($i=0; $i<sizeof($tmpa); $i++)
			{
				$dops[$tmpa[$i]] =  $tmpa[$i+1];
				$i++;
			}
		}
		
		$orderField = $this->_getParam('orderField');
		$orderType = $this->_getParam('orderType');
//        echo '$count = '.$count.'<br>';
//        echo '$page = '.$page.'<br>';
//        exit;
        $pages = ceil($count/$countPP);
        
        $res = '';
        $delim = false;
        if ($pages>1) {
            for ($i = 1; $i <= $pages; $i++) {
                $dif = abs($i - $page);
                if ($dif < $cr || $i<=$lr || $i>$pages - $rr || ($dif == $cr && ($i == $lr+1 || $i == $pages-$rr))) {
                    $Barr = Array('page'=>$i,'k'=>$countPP);
					if($cur_id != 0 ) $Barr['cur_id'] = $cur_id;
					foreach($dops as $k=>$v)
					{
					$Barr[$k] = $v;
					}
					
					$link = array_merge($_GET, $Barr);
//                    $link = '/holidays/new-year?'.http_build_query($link);
                    $link = '?'.http_build_query($link);
        //				if (!strstr('order',$link)) {
        //					if (isset($orderField)) $link.='&orderField='.$orderField;
        //					if (isset($orderType)) $link.='&orderType='.$orderType;
        //				}
                    //if ($i == $page) $class = ' class="active_page"';
                    //else $class = '';
                    if ($delim) $res .= '  ';
//                    if ($i == $page) $res .= '<span>'.$i.'</span>';
                    if ($i == $page) $res .= ' <span style="color:#292929;font:bold 14px tahoma;"> '.$i.' </span> ';
                    else $res .= '<a style="color:#4ca8f5;font:14px tahoma;" rel="'.$i.'" href="'.$link.'">'.$i.'</a>';
                    $delim = true;
                } else if ($dif == $cr) {
                    $delim = false;
                    $res .= ' <span style="color:#292929;font:bold 14px tahoma;">...</span> ';
                }
                else $delim = false;
            }
        }
        if($res) echo 'Страницы: '.$res;
//        exit;
    }    
	
	
    
    
    function getmontxt($mon) {
        $montxt='';
        switch ($mon) {
            case 1:$montxt='января';break;
            case 2:$montxt='февраля';break;
            case 3:$montxt='марта';break;
            case 4:$montxt='апреля';break;
            case 5:$montxt='мая';break;
            case 6:$montxt='июня';break;
            case 7:$montxt='июля';break;
            case 8:$montxt='августа';break;
            case 9:$montxt='сентября';break;
            case 10:$montxt='октября';break;
            case 11:$montxt='ноября';break;
            case 12:$montxt='декабря';break;
        };  
        return $montxt;
    }
    public function printpolisAction()
    {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            if ($usertype!='admin' && $usertype != 'manager') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        } else {
            return $this->error(404);                
            exit;
        }
        
        
        $polises = $privateofficemodel->getdogovorpolis($dgcode);
        
        $this->view->uskey=$uskey;
        $this->view->ustype=$usertype;
        $this->view->dgcode=$dgcode;
        $this->view->polises=$polises;
        $this->view->upload_path=$this->upload_path;
        
    }
	public function showcapchaAction()
    {
        $this->setCfgLayout('docxempty');
    }
	

	 

	////
public function printrequestmtkurortAction() 
{
$dgcode = (string)$this->_getParam('code','');
$type=(int)$this->_getParam('type',0);


        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        
		
		
		
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }

        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		
		
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		
		
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
		if($usertype == 'meneger'){
                preg_match('/^meneger_(.*)$/', $logintxt, $matches);
                // zend_debug::dump($matches);
                // exit;
				$logintxt = $matches[1];
            }
		$creator = $privateofficemodel->getmenegerbylogin($logintxt);
		if ($creator){
			$logintxt = $creator[0]['cur_fio'];
		}
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            
		
			//Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
			
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


		
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }


			
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        
			$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            
            }
            
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }

            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
		
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
           
            
            
            
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
          
// Партнёры поставщики услуг

$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

$pri = 0;
$partnersview = array();

foreach($dlpartners as $prkey=> $prrow)
{            
$patnerline = array();
		$dlpartner = $prrow['DL_PARTNERKEY'];
			
			$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
			
            $patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
            $patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
            $patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
            $patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
            $patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
			$patnerline['pr_key']=$dlpartner;

			//Таблица с проживаниями
			//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
			$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
			
			
			
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
			$turists =  array();
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
						
						// Туристы по услуге 
						
						$dlkey=$row['DL_KEY'];
                        $turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
						
						$turlistview=array();
            foreach ($turlist as $key=>$row) {
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                
            }
						
						
						$hotellistview[$i]['turists']= $turlistview;
						
                    }
					
					
                }
            }       
    $patnerline['hotelistview'] = $hotellistview;
	
$partnersview[$pri] = $patnerline;
$pri++;	

} /// Конец списка партнеров поставщиков			
    


	
            //Расчетный час
            $rastcode=0;
            $rasttxt='';
			
			$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }

            if (strlen($rasttxt)==0) $rasttxt='Нет';
 ///////////////////////
 //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';
		
            
			
			
     }       
        $this->view->dgcode=$dgcode;
        //$this->view->crdate=$crdate;
		$this->view->crdate=date('d.m.Y');;
       
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        
		
		$this->view->partnersview = $partnersview;
		
        
       
        
		
        $this->view->rasttxt=$rasttxt;
		$this->view->logintxt=$logintxt;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        
		$this->view->doptxt = $doptxt;
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'request' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }


}
//
public function printrequestmtmoskvaAction() 
{
$dgcode = (string)$this->_getParam('code','');
$type=(int)$this->_getParam('type',0);


        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        
		
		
		
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }

        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		
		
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		
		
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
		if($usertype == 'meneger'){
                preg_match('/^meneger_(.*)$/', $logintxt, $matches);
                // zend_debug::dump($matches);
                // exit;
				$logintxt = $matches[1];
            }
		$creator = $privateofficemodel->getmenegerbylogin($logintxt);
		$logintxt = $creator[0]['cur_fio'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            
		
			//Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
			
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


		
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }


			
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        
			$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            
            }
            
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }

            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
		
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
           
            
            
            
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
          
// Партнёры поставщики услуг

$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

$pri = 0;
$partnersview = array();

foreach($dlpartners as $prkey=> $prrow)
{            
$patnerline = array();
		$dlpartner = $prrow['DL_PARTNERKEY'];
			
			$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
			
            $patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
            $patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
            $patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
            $patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
            $patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
			$patnerline['pr_key']=$dlpartner;

			//Таблица с проживаниями
			//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
			$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
			
			
			
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
			$turists =  array();
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
						
						// Туристы по услуге 
						
						$dlkey=$row['DL_KEY'];
                        $turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
						
						$turlistview=array();
            foreach ($turlist as $key=>$row) {
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                
            }
						
						
						$hotellistview[$i]['turists']= $turlistview;
						
                    }
					
					
                }
            }       
    $patnerline['hotelistview'] = $hotellistview;
	
$partnersview[$pri] = $patnerline;
$pri++;	

} /// Конец списка партнеров поставщиков			
    


	
            //Расчетный час
            $rastcode=0;
            $rasttxt='';
			
			$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }

            if (strlen($rasttxt)==0) $rasttxt='Нет';
 ///////////////////////
 //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';
		
            
			
			
     }       
        $this->view->dgcode=$dgcode;
        //$this->view->crdate=$crdate;
		$this->view->crdate=date('d.m.Y');;
       
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        
		
		$this->view->partnersview = $partnersview;
		
        
       
        
		
        $this->view->rasttxt=$rasttxt;
		$this->view->logintxt=$logintxt;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        
		$this->view->doptxt = $doptxt;
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'request' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }


}


public function printrequestmtalyansAction() 
{
$dgcode = (string)$this->_getParam('code','');
$type=(int)$this->_getParam('type',0);


        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        
		
		
		
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }

        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		
		
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		
		
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
		if($usertype == 'meneger'){
                preg_match('/^meneger_(.*)$/', $logintxt, $matches);
                // zend_debug::dump($matches);
                // exit;
				$logintxt = $matches[1];
            }
		$creator = $privateofficemodel->getmenegerbylogin($logintxt);
		$logintxt = $creator[0]['cur_fio'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            
		
			//Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
			
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


		
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }


			
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        
			$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            
            }
            
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }

            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
		
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
           
            
            
            
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
          
// Партнёры поставщики услуг

$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

$pri = 0;
$partnersview = array();

foreach($dlpartners as $prkey=> $prrow)
{            
$patnerline = array();
		$dlpartner = $prrow['DL_PARTNERKEY'];
			
			$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
			
            $patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
            $patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
            $patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
            $patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
            $patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
			$patnerline['pr_key']=$dlpartner;

			//Таблица с проживаниями
			//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
			$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
			
			
			
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
			$turists =  array();
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
						
						// Туристы по услуге 
						
						$dlkey=$row['DL_KEY'];
                        $turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
						
						$turlistview=array();
            foreach ($turlist as $key=>$row) {
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                
            }
						
						
						$hotellistview[$i]['turists']= $turlistview;
						
                    }
					
					
                }
            }       
    $patnerline['hotelistview'] = $hotellistview;
	
$partnersview[$pri] = $patnerline;
$pri++;	

} /// Конец списка партнеров поставщиков			
    


	
            //Расчетный час
            $rastcode=0;
            $rasttxt='';
			
			$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }

            if (strlen($rasttxt)==0) $rasttxt='Нет';
 ///////////////////////
 //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';
		
            
			
			
     }       
        $this->view->dgcode=$dgcode;
        //$this->view->crdate=$crdate;
		$this->view->crdate=date('d.m.Y');;
       
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        
		
		$this->view->partnersview = $partnersview;
		
        
       
        
		
        $this->view->rasttxt=$rasttxt;
		$this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
		$this->view->doptxt = $doptxt;
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'request' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }


}
//
public function printrequestmtukrainaAction() 
{
$dgcode = (string)$this->_getParam('code','');
$type=(int)$this->_getParam('type',0);


        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        
		
		
		
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }

        $privateofficemodel=$this->getModel('Privateoffice');
        
		
		
		
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		
		
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
		if($usertype == 'meneger'){
                preg_match('/^meneger_(.*)$/', $logintxt, $matches);
                // zend_debug::dump($matches);
                // exit;
				$logintxt = $matches[1];
            }
		$creator = $privateofficemodel->getmenegerbylogin($logintxt);
		
		if ($creator){
			$logintxt = $creator[0]['cur_fio'];
		}
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            
		
			//Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
			
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


		
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }


			
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        
			$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            
            }
            
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }

            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
		
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
           
            
            
            
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
          
// Партнёры поставщики услуг

$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

$pri = 0;
$partnersview = array();

foreach($dlpartners as $prkey=> $prrow)
{            
$patnerline = array();
		$dlpartner = $prrow['DL_PARTNERKEY'];
			
			$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
			
            $patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
            $patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
            $patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
            $patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
            $patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
			$patnerline['pr_key']=$dlpartner;

			//Таблица с проживаниями
			//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
			$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
			
			
			
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
			$turists =  array();
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
						
						// Туристы по услуге 
						
						$dlkey=$row['DL_KEY'];
                        $turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
						
						$turlistview=array();
            foreach ($turlist as $key=>$row) {
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                
            }
						
						
						$hotellistview[$i]['turists']= $turlistview;
						
                    }
					
					
                }
            }       
    $patnerline['hotelistview'] = $hotellistview;
	
$partnersview[$pri] = $patnerline;
$pri++;	

} /// Конец списка партнеров поставщиков			
    


	
            //Расчетный час
            $rastcode=0;
            $rasttxt='';
			
			$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }

            if (strlen($rasttxt)==0) $rasttxt='Нет';
 ///////////////////////
 //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';
		
            
			
			
     }       
        $this->view->dgcode=$dgcode;
        //$this->view->crdate=$crdate;
		$this->view->crdate=date('d.m.Y');;
       
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        
		
		$this->view->partnersview = $partnersview;
		
        
       
        
		
        $this->view->rasttxt=$rasttxt;
		$this->view->logintxt=$logintxt;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        
		$this->view->doptxt = $doptxt;
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'request' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }


}	
	
	////
	
	public function printagreementhtmlAction() 
    {
        
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];    
        
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            // zend_debug::dump($dogovorinfo);
            // exit;
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
  
            
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }  
            
            $turistmainview=array();
            //Фио главного туриста
            $turistmainfio=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_FNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_FNAMERUS'];
            }
            if (strlen($dogovorinfo['TU_SNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_SNAMERUS'];
            }
            $turistmainview['fio']=$turistmainfio;

            //Фио сокращенное главного туриста
            $turistmainfioshort=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_SHORTNAME'])>0) {
                $turistmainfioshort.=' '.$dogovorinfo['TU_SHORTNAME'];
            }
            $turistmainview['fioshort']=$turistmainfioshort;
            
            //Паспортные данные главного туриста
            $turistmainpasport=$dogovorinfo['TU_PASPORTTYPE'];
            if (strlen($turistmainpasport)>0 && strlen($dogovorinfo['TU_PASPORTTYPE'])>0) $turistmainpasport.=' ';
            $turistmainpasport.=$dogovorinfo['TU_PASPORTNUM'];
            $turistmainview['pasport']=$turistmainpasport;
                
            // echo '$turistmainfio = '.$turistmainfio.'<br>';
            // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
            // echo '$turistmainpasport = '.$turistmainfioshort.'<br>';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $crdate=$dogovorinfo['DG_CRDATE'];
            $daycrdate=date('d',strtotime($crdate));
            $moncrdate=date('m',strtotime($crdate));
            $yearcrdate=date('Y',strtotime($crdate));
            $moncrdatetxt=$this->getmontxt(date('n',strtotime($crdate)));
            $crdate=date('d.m.Y', strtotime($crdate));

            $tecdate=time();
            $daytecdate=date('d',$tecdate);
            $montecdate=date('m',$tecdate);
            $yeartecdate=date('Y',$tecdate);
            $montecdatetxt=$this->getmontxt(date('n',$tecdate));
            $tecdate=date('d.m.Y',$tecdate);
            
            //Список туристов
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dgcode);
            // zend_debug::dump($turist);
            
            $turistview=array();
            
            $straxcodearr=array();
            $straxcode=0;
            $straxtxt='';
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            
            foreach ($turist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turistview[$key]['fio']=$fio;
                $fioshort=$row['TU_NAMERUS'];
                if (strlen($fioshort)>0 && strlen($row['TU_SHORTNAME'])>0) $fioshort.=' ';
                $fioshort.=$row['TU_SHORTNAME'];
                $turistview[$key]['fioshort']=$fioshort;
                $citizen=$row['TU_CITIZEN'];
                $turistview[$key]['citizen']=$citizen;
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turistview[$key]['birthday']=$birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey, $dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $straxcode=$dl_subcode1;
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                if ($straxcode>0) {
                    if (!isset($straxcodearr[$straxcode])) {
                        $straxcodearr[$straxcode]=1;
                        $straxtxt.=$strax.'; ';
                    }
                }
                // echo $birthday;
            }            
            if (strlen($straxtxt)==0) $straxtxt='Нет';                
            // echo '$straxtxt = '.$straxtxt;
            // exit;
            // zend_debug::dump($turistview);
            
            // exit;
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$agentinfo = $privateofficemodel->getagentinfo($dogovorinfo['DG_PARTNERKEY']);
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			$dogovor_change = TRUE;
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate)){
				$this->view->legal_id=0;
				$dogovor_change = FALSE;
			}
			$this->view->dogovor_change = $dogovor_change;
            
            // zend_debug::dump($countryname);
            // zend_debug::dump($cityname);
            // exit;
            //Оплатить до
            $paymentdate=$dogovorinfo['DG_PAYMENTDATE'];
            if (strlen($paymentdate)>0) {
                $paymentdate=date('d.m.Y', strtotime($paymentdate));
            } else {
                $paymentdate='';
            }
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);




            //Таблица с проживаниями
            // $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $hotellistarr=array();
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $roomsarr=array();
            $pansiontxt='';
            $pansionarr=array();
            $numberofrooms=0;
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $numberofrooms++;
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        // $hotellistview[$i]['num']=$i;
                        //Город 
                        // $cityid=$row['DL_CTKEY'];
                        // $city=$citiesmodel->getcitybyid($cityid);
                        // $cityname='';
                        // if (is_array($city)) {
                            // if (isset($city['Name'])) {
                                // $cityname=$city['Name'];
                            // }
                        // }
                        // $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        if (!isset($hotellistarr[$hotelkey])) {
                            $hotellistarr[$hotelkey]=1;
                            $hotelname='';
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                            // zend_debug::dump($hoteldictionary);
                            // exit;
                            if (is_array($hoteldictionary)) {
                                if (isset($hoteldictionary['HD_NAME'])) {
                                    $hotelname=$hoteldictionary['HD_NAME'];
                                }
                                if (isset($hoteldictionary['HD_STARS'])) {
                                    if (strlen($hoteldictionary['HD_STARS'])>0) {
                                        $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                    }
                                }
                            }
                            if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                            $hotelstxt.=$hotelname;
                        }
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        if (!isset($roomsarr[$subcode1])) {
                            $roomname='';
                            if ($subcode1>0) {
                                $room=$privateofficemodel->getroom($subcode1);
                                if (is_array($room)) {
                                    $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                    $accmdkey=(int)$room['AccmdMenTypeKey'];
                                    $accmd=$privateofficemodel->getaccmd($accmdkey);
                                    if (is_array($accmd)) {
                                        $roomname.=', '.trim($accmd['Code']);
                                    }
                                }
                            }
                            if (strlen($roomstxt)>0) $roomstxt.='; ';
                            $roomstxt.=$roomname;
                            $roomsarr[$subcode1]=$roomname;
                        }

                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        if (!isset($pansionarr[$subcode2])) {
                            $pansionname='';
                            if ($subcode2>0) {
                                $pansion=$privateofficemodel->getpansion($subcode2);
                                if (is_array($pansion)) {
                                    $pansionname=$pansion['Code'].' '.$pansion['Name'];
                                }
                            }
                            if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                            $pansiontxt.=$pansionname;
                            $pansionarr[$subcode2]=$pansionname;
                        }



                        // if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        // $hotellistview[$i]['hotelname']=$hotelname;
                        // $hotellistview[$i]['roomname']=$roomname;
                        // $hotellistview[$i]['pansionname']=$pansionname;
                        
                        // $hotellistview[$i]['dateend']=$dateend;
                        // //Кол-во ночей
                        // $ndays=(int)$row['DL_NDAYS'];
                        // $ndaystxt=$ndays.'/'.($ndays+1);
                        // $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
                // zend_debug::dump($roomsarr);
                asort($roomsarr);
                // zend_debug::dump($roomsarr);
                // exit;
            }
            if (strlen($pansiontxt)==0) $pansiontxt='Нет';
            
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            $airtxt='';
            foreach ($dogovorlist as $key=>$row)  {
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        if (strlen($airtxt)>0) $airtxt.='; ';
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airtxt.=$airview[$key]['num'].',';
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        $airtxt.=$airview[$key]['route'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
            }            
            if (strlen($airtxt)==0) $airtxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }     
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            
            
            // //////////////Страховка start
            // $straxcode=0;
            // $straxbool=false;            
            // $straxtxt='';
            // if (is_array($dogovorlist)) {
                // foreach ($dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='6') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }                    
                        // $straxbool=true;
                        // $straxcode=(int)$row['DL_CODE'];
                        // if ($straxbool) {
                            // if (strlen($straxtxt)>0) $straxtxt.=' ';
                            // $strax=$privateofficemodel->getservicelist(6,$straxcode);
                            // if (is_array($strax)) {
                                // zend_debug::dump($strax);
                                // $straxtxt.=$strax['SL_NAME'];
                            // }
                            // // $straxtxt.='('.$turistlist_size.')';
                            // $straxtxt.='; ';
                        // }
                    // }                    
                // }
            // }   
            // // exit;
            // if (strlen($straxtxt)==0) $straxtxt='Нет';              
            
            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $dgcode);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
			if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
            
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            
            // zend_debug::dump($agentinfo);
            // exit;
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress='';
            if (strlen(trim($agentinfo['PR_POSTINDEX']))>0) {
                $agentadress.=trim($agentinfo['PR_POSTINDEX']);
            }
            if (strlen(trim($agentinfo['PR_CITY']))>0) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agentadress.='Москва';
				} else {
					$agentadress.=trim($agentinfo['PR_CITY']);
				}

            }
            if (strlen(trim($agentinfo['PR_ADRESS']))>0) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
                $agentadress.=trim($agentinfo['PR_ADRESS']);
            }
            
            $agenturadress='';
            if (strlen(trim($agentinfo['PR_LEGALPOSTINDEX']))>0) {
                $agenturadress.=trim($agentinfo['PR_LEGALPOSTINDEX']);
            }
            if (strlen(trim($agentinfo['PR_CITY']))>0) {
                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agenturadress.='Москва';
				} else {
					$agenturadress.=trim($agentinfo['PR_CITY']);
				}
            }
            if (strlen(trim($agentinfo['PR_LEGALADDRESS']))>0) {
                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
                $agenturadress.=trim($agentinfo['PR_LEGALADDRESS']);
            }
            
  // ["PR_POSTINDEX"] => string(6) "602267"
  // ["PR_LEGALPOSTINDEX"] => string(6) "602264"            
  // ["PR_LEGALADDRESS"] => string(44) "ул. Энергетиков, д. 3, кв. 4"  
            // echo '$agentadress = '.$agentadress.'<br>';
            // echo '$agenturadress = '.$agenturadress.'<br>';
            
            // //$agenturadress
            // exit;
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];            
            $pr_homepage=$agentinfo['PR_HOMEPAGE'];
            $pr_inn=$agentinfo['PR_INN'];
            $pr_kpp=$agentinfo['PR_KPP'];
            $pa_account=$agentinfo['PA_Account'];
            $bn_name=$agentinfo['BN_Name'];
            $bn_coracc=$agentinfo['BN_CorAccount'];
            $bn_bik=$agentinfo['BN_BIK'];
            $pr_codeokpo=$agentinfo['PR_CODEOKPO'];
            
            // echo '$pr_homepage = '.$pr_homepage.'<br>';
            // exit;
            // $pr_kpp=$agentinfo['PR_KPP'];
            // echo '$vsttxt = '.$vsttxt.'<br>';
            // exit;
            
            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;            
            // echo '$transfertxt = '.$transfertxt.'<br>';
            // zend_debug::dump($tranferlistview);
            // exit;
            // echo '$airtxt = '.$airtxt.'<br>';
            // zend_debug::dump($airview);
            // exit;
            // echo '$roomstxt = '.$roomstxt;
            // exit;
            // echo '$pansiontxt = '.$pansiontxt.'<br>';
            // exit;
            //Кол-во дней и ночей
            $nday=(int)$dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // exit;
            // echo $hotelstxt.'<br>';
            // // zend_debug::dump($hotellistview);
            // exit;
            // echo '$turname = '.$turname.'<br>';
            // exit;
            
            $rasttxt='';
			
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                        break;
                    }
                }
            }  
            $rasttxt1='';
            $rasttxt2='';
            $slname=$rasttxt;
            $slname=preg_replace('/расчетный.*час/ui','',$slname);
            $slname=trim($slname);
            $slname=preg_replace('/^:/ui','',$slname);
            $slname=trim($slname);
            $slname_arr=explode(',',$slname);
            if (count($slname_arr)==2) {
                $rasttxt1=trim($slname_arr[0]);
                $rasttxt2=trim($slname_arr[1]);
            } else {
                $rasttxt1=$slname;
                $rasttxt2=$slname;
            }
            if (!preg_match('/заезд/ui',$rasttxt1) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt1)) {
                $rasttxt1='заезд с '.$rasttxt1;
            }
            if (!preg_match('/выезд/ui',$rasttxt2) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt2)) {
                $rasttxt2='выезд до '.$rasttxt2;
            }
            if (strlen($rasttxt1)>0) $rasttxt1=', '.$rasttxt1;
            if (strlen($rasttxt2)>0) $rasttxt2=', '.$rasttxt2;
            // echo '$rasttxt = '.$rasttxt.'<br>';
            // echo '$rasttxt1 = '.$rasttxt1.'<br>';
            // echo '$rasttxt2 = '.$rasttxt2.'<br>';
            // exit;
                // $rasttxt='';
            // if ($rastcode>0) {
                // $rast=$privateofficemodel->getservicelist(1112,$rastcode);
                // if (is_array($rast)) {
                    // if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                // }
            // }
            // $vsttxt='';
            // if ($vstcode>0) {
                // $vst=$privateofficemodel->getservicelist(1119,$vstcode);
                // if (is_array($vst)) {
                    // if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                // }
            // }
            // $rastvsttxt='';
            // if (is_array($this->view->dogovorlist)) {
                // foreach ($this->view->dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='1112') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }
                        // if (strlen($rasttxt)>0) {
                            // if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            // $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        // }
                    // }



                    
        } else {
            return $this->error(404);                
            exit;
        }        
        
        $filename = 'agreement' .$dgcode. '.doc';
        $this->view->filename=$filename;
		
		if($this->domen=='ru'){
			if ($dogovorinfo['DG_PARTNERKEY'] == 16280){
				$dgcode = $dgcode.'-АВТ';
			}
			if ($dogovorinfo['DG_PARTNERKEY'] == 26060){
				$dgcode = $dgcode.'-ВЕТ';
			}
		}

		
        $this->view->dgcode=$dgcode;
        $this->view->daycrdate=$daycrdate;
        $this->view->moncrdate=$moncrdate;
        $this->view->yearcrdate=$yearcrdate;
        $this->view->crdate=$crdate;
        $this->view->moncrdatetxt=$moncrdatetxt;
        $this->view->daytecdate=$daytecdate;
        $this->view->montecdate=$montecdate;
        $this->view->yeartecdate=$yeartecdate;
        $this->view->tecdate=$tecdate;
        $this->view->montecdatetxt=$montecdatetxt;
        $this->view->turistview=$turistview;
        $this->view->turistmainview=$turistmainview;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->paymentdate=$paymentdate;
        $this->view->turname=$turname;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->roomsarr=$roomsarr;
        $this->view->numberofrooms=$numberofrooms;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->airtxt=$airtxt;
        $this->view->transfertxt=$transfertxt;
        // $this->view->straxbool=$straxbool;
        $this->view->vsttxt=$vsttxt;
        
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->agenturadress=$agenturadress;
        
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->pr_homepage=$pr_homepage;
        $this->view->pr_inn=$pr_inn;
        $this->view->pr_kpp=$pr_kpp;
        $this->view->bn_coracc=$bn_coracc;
        $this->view->bn_name=$bn_name;
        $this->view->pa_account=$pa_account;
        $this->view->bn_bik=$bn_bik;
        $this->view->pr_codeokpo=$pr_codeokpo;
        $this->view->straxtxt=$straxtxt;
        $this->view->rasttxt1=$rasttxt1;
        $this->view->rasttxt2=$rasttxt2;
		$this->view->dg_prkey = $dg_prkey;
		
		$this->view->summ = $dogovorinfo['DG_PRICE'] + $dogovorinfo['DG_DISCOUNTSUM'];
		
		if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
			$this->view->summ = $dogovorinfo['DG_PRICE'];
			$this->setView('printagreementhtml2');
		}
        // echo 'test';
        // exit;
        // echo '$turistmainfio = '.$turistmainfio.'<br>';
        // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
        // echo 'test';
        // exit;
      /*  if (!headers_sent()) {
            header("Content-Type: application/msword");
			            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
        */
        
    }
	// End of Agreement HTML
    public function printagreementAction() 
    {
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];    
        
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            // zend_debug::dump($dogovorinfo);
            // exit;
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
  
            
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }  
            
            $turistmainview=array();
            //Фио главного туриста
            $turistmainfio=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_FNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_FNAMERUS'];
            }
            if (strlen($dogovorinfo['TU_SNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_SNAMERUS'];
            }
            $turistmainview['fio']=$turistmainfio;

            //Фио сокращенное главного туриста
            $turistmainfioshort=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_SHORTNAME'])>0) {
                $turistmainfioshort.=' '.$dogovorinfo['TU_SHORTNAME'];
            }
            $turistmainview['fioshort']=$turistmainfioshort;
            
            //Паспортные данные главного туриста
            $turistmainpasport=$dogovorinfo['TU_PASPORTTYPE'];
            if (strlen($turistmainpasport)>0 && strlen($dogovorinfo['TU_PASPORTTYPE'])>0) $turistmainpasport.=' ';
            $turistmainpasport.=$dogovorinfo['TU_PASPORTNUM'];
            $turistmainview['pasport']=$turistmainpasport;
                
            // echo '$turistmainfio = '.$turistmainfio.'<br>';
            // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
            // echo '$turistmainpasport = '.$turistmainfioshort.'<br>';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $crdate=$dogovorinfo['DG_CRDATE'];
            $daycrdate=date('d',strtotime($crdate));
            $moncrdate=date('m',strtotime($crdate));
            $yearcrdate=date('Y',strtotime($crdate));
            $moncrdatetxt=$this->getmontxt(date('n',strtotime($crdate)));
            $crdate=date('d.m.Y', strtotime($crdate));

            $tecdate=time();
            $daytecdate=date('d',$tecdate);
            $montecdate=date('m',$tecdate);
            $yeartecdate=date('Y',$tecdate);
            $montecdatetxt=$this->getmontxt(date('n',$tecdate));
            $tecdate=date('d.m.Y',$tecdate);
            
            //Список туристов
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dgcode);
            // zend_debug::dump($turist);
            
            $turistview=array();
            
            $straxcodearr=array();
            $straxcode=0;
            $straxtxt='';
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            
            foreach ($turist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turistview[$key]['fio']=$fio;
                $fioshort=$row['TU_NAMERUS'];
                if (strlen($fioshort)>0 && strlen($row['TU_SHORTNAME'])>0) $fioshort.=' ';
                $fioshort.=$row['TU_SHORTNAME'];
                $turistview[$key]['fioshort']=$fioshort;
                $citizen=$row['TU_CITIZEN'];
                $turistview[$key]['citizen']=$citizen;
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turistview[$key]['birthday']=$birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey, $dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $straxcode=$dl_subcode1;
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                if ($straxcode>0) {
                    if (!isset($straxcodearr[$straxcode])) {
                        $straxcodearr[$straxcode]=1;
                        $straxtxt.=$strax.'; ';
                    }
                }
                // echo $birthday;
            }            
            if (strlen($straxtxt)==0) $straxtxt='Нет';                
            // echo '$straxtxt = '.$straxtxt;
            // exit;
            // zend_debug::dump($turistview);
            
            // exit;
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			
			if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			$dogovor_change = TRUE;
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate)){
				$this->view->legal_id=0;
				$dogovor_change = FALSE;
			}
			$this->view->dogovor_change = $dogovor_change;
            
            // zend_debug::dump($countryname);
            // zend_debug::dump($cityname);
            // exit;
            //Оплатить до
            $paymentdate=$dogovorinfo['DG_PAYMENTDATE'];
            if (strlen($paymentdate)>0) {
                $paymentdate=date('d.m.Y', strtotime($paymentdate));
            } else {
                $paymentdate='';
            }
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);




            //Таблица с проживаниями
            // $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $hotellistarr=array();
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $roomsarr=array();
            $pansiontxt='';
            $pansionarr=array();
            $numberofrooms=0;
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $numberofrooms++;
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        // $hotellistview[$i]['num']=$i;
                        //Город 
                        // $cityid=$row['DL_CTKEY'];
                        // $city=$citiesmodel->getcitybyid($cityid);
                        // $cityname='';
                        // if (is_array($city)) {
                            // if (isset($city['Name'])) {
                                // $cityname=$city['Name'];
                            // }
                        // }
                        // $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        if (!isset($hotellistarr[$hotelkey])) {
                            $hotellistarr[$hotelkey]=1;
                            $hotelname='';
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                            // zend_debug::dump($hoteldictionary);
                            // exit;
                            if (is_array($hoteldictionary)) {
                                if (isset($hoteldictionary['HD_NAME'])) {
                                    $hotelname=$hoteldictionary['HD_NAME'];
                                }
                                if (isset($hoteldictionary['HD_STARS'])) {
                                    if (strlen($hoteldictionary['HD_STARS'])>0) {
                                        $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                    }
                                }
                            }
                            if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                            $hotelstxt.=$hotelname;
                        }
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        if (!isset($roomsarr[$subcode1])) {
                            $roomname='';
                            if ($subcode1>0) {
                                $room=$privateofficemodel->getroom($subcode1);
                                if (is_array($room)) {
                                    $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                    $accmdkey=(int)$room['AccmdMenTypeKey'];
                                    $accmd=$privateofficemodel->getaccmd($accmdkey);
                                    if (is_array($accmd)) {
                                        $roomname.=', '.trim($accmd['Code']);
                                    }
                                }
                            }
                            if (strlen($roomstxt)>0) $roomstxt.='; ';
                            $roomstxt.=$roomname;
                            $roomsarr[$subcode1]=$roomname;
                        }

                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        if (!isset($pansionarr[$subcode2])) {
                            $pansionname='';
                            if ($subcode2>0) {
                                $pansion=$privateofficemodel->getpansion($subcode2);
                                if (is_array($pansion)) {
                                    $pansionname=$pansion['Code'].' '.$pansion['Name'];
                                }
                            }
                            if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                            $pansiontxt.=$pansionname;
                            $pansionarr[$subcode2]=$pansionname;
                        }



                        // if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        // $hotellistview[$i]['hotelname']=$hotelname;
                        // $hotellistview[$i]['roomname']=$roomname;
                        // $hotellistview[$i]['pansionname']=$pansionname;
                        
                        // $hotellistview[$i]['dateend']=$dateend;
                        // //Кол-во ночей
                        // $ndays=(int)$row['DL_NDAYS'];
                        // $ndaystxt=$ndays.'/'.($ndays+1);
                        // $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
                // zend_debug::dump($roomsarr);
                asort($roomsarr);
                // zend_debug::dump($roomsarr);
                // exit;
            }
            if (strlen($pansiontxt)==0) $pansiontxt='Нет';
            
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            $airtxt='';
            foreach ($dogovorlist as $key=>$row)  {
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        if (strlen($airtxt)>0) $airtxt.='; ';
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airtxt.=$airview[$key]['num'].',';
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        $airtxt.=$airview[$key]['route'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
            }            
            if (strlen($airtxt)==0) $airtxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }     
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            
            
            // //////////////Страховка start
            // $straxcode=0;
            // $straxbool=false;            
            // $straxtxt='';
            // if (is_array($dogovorlist)) {
                // foreach ($dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='6') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }                    
                        // $straxbool=true;
                        // $straxcode=(int)$row['DL_CODE'];
                        // if ($straxbool) {
                            // if (strlen($straxtxt)>0) $straxtxt.=' ';
                            // $strax=$privateofficemodel->getservicelist(6,$straxcode);
                            // if (is_array($strax)) {
                                // zend_debug::dump($strax);
                                // $straxtxt.=$strax['SL_NAME'];
                            // }
                            // // $straxtxt.='('.$turistlist_size.')';
                            // $straxtxt.='; ';
                        // }
                    // }                    
                // }
            // }   
            // // exit;
            // if (strlen($straxtxt)==0) $straxtxt='Нет';              
            
            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $dgcode);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            $agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            
            // zend_debug::dump($agentinfo);
            // exit;
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress='';
            if (strlen(trim($agentinfo['PR_POSTINDEX']))>0) {
                $agentadress.=trim($agentinfo['PR_POSTINDEX']);
            }
            if (strlen(trim($agentinfo['PR_CITY']))>0 && $this->view->legal_id != $this->legal_riteil) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agentadress.='Москва';
				} else {
					$agentadress.=trim($agentinfo['PR_CITY']);
				}

            }
            if (strlen(trim($agentinfo['PR_ADRESS']))>0) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
                $agentadress.=trim($agentinfo['PR_ADRESS']);
            }
            
            $agenturadress='';
            if (strlen(trim($agentinfo['PR_LEGALPOSTINDEX']))>0) {
                $agenturadress.=trim($agentinfo['PR_LEGALPOSTINDEX']);
            }

            if (strlen(trim($agentinfo['PR_CITY']))>0 && $this->view->legal_id != $this->legal_riteil) {

                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agenturadress.='Москва';
				} else {
					$agenturadress.=trim($agentinfo['PR_CITY']);
				}
            }
            if (strlen(trim($agentinfo['PR_LEGALADDRESS']))>0) {
                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
                $agenturadress.=trim($agentinfo['PR_LEGALADDRESS']);
            }

  // ["PR_POSTINDEX"] => string(6) "602267"
  // ["PR_LEGALPOSTINDEX"] => string(6) "602264"            
  // ["PR_LEGALADDRESS"] => string(44) "ул. Энергетиков, д. 3, кв. 4"  
            // echo '$agentadress = '.$agentadress.'<br>';
            // echo '$agenturadress = '.$agenturadress.'<br>';
            
            // //$agenturadress
            // exit;
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];            
            $pr_homepage=$agentinfo['PR_HOMEPAGE'];
            $pr_inn=$agentinfo['PR_INN'];
            $pr_kpp=$agentinfo['PR_KPP'];
            $pa_account=$agentinfo['PA_Account'];
            $bn_name=$agentinfo['BN_Name'];
            $bn_coracc=$agentinfo['BN_CorAccount'];
            $bn_bik=$agentinfo['BN_BIK'];
            $pr_codeokpo=$agentinfo['PR_CODEOKPO'];
            
            // echo '$pr_homepage = '.$pr_homepage.'<br>';
            // exit;
            // $pr_kpp=$agentinfo['PR_KPP'];
            // echo '$vsttxt = '.$vsttxt.'<br>';
            // exit;
            
            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;            
            // echo '$transfertxt = '.$transfertxt.'<br>';
            // zend_debug::dump($tranferlistview);
            // exit;
            // echo '$airtxt = '.$airtxt.'<br>';
            // zend_debug::dump($airview);
            // exit;
            // echo '$roomstxt = '.$roomstxt;
            // exit;
            // echo '$pansiontxt = '.$pansiontxt.'<br>';
            // exit;
            //Кол-во дней и ночей
            $nday=(int)$dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // exit;
            // echo $hotelstxt.'<br>';
            // // zend_debug::dump($hotellistview);
            // exit;
            // echo '$turname = '.$turname.'<br>';
            // exit;
            
            $rasttxt='';
			
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                        break;
                    }
                }
            }  
            $rasttxt1='';
            $rasttxt2='';
            $slname=$rasttxt;
            $slname=preg_replace('/расчетный.*час/ui','',$slname);
            $slname=trim($slname);
            $slname=preg_replace('/^:/ui','',$slname);
            $slname=trim($slname);
            $slname_arr=explode(',',$slname);
            if (count($slname_arr)==2) {
                $rasttxt1=trim($slname_arr[0]);
                $rasttxt2=trim($slname_arr[1]);
            } else {
                $rasttxt1=$slname;
                $rasttxt2=$slname;
            }
            if (!preg_match('/заезд/ui',$rasttxt1) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt1)) {
                $rasttxt1='заезд с '.$rasttxt1;
            }
            if (!preg_match('/выезд/ui',$rasttxt2) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt2)) {
                $rasttxt2='выезд до '.$rasttxt2;
            }
            if (strlen($rasttxt1)>0) $rasttxt1=', '.$rasttxt1;
            if (strlen($rasttxt2)>0) $rasttxt2=', '.$rasttxt2;
            // echo '$rasttxt = '.$rasttxt.'<br>';
            // echo '$rasttxt1 = '.$rasttxt1.'<br>';
            // echo '$rasttxt2 = '.$rasttxt2.'<br>';
            // exit;
                // $rasttxt='';
            // if ($rastcode>0) {
                // $rast=$privateofficemodel->getservicelist(1112,$rastcode);
                // if (is_array($rast)) {
                    // if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                // }
            // }
            // $vsttxt='';
            // if ($vstcode>0) {
                // $vst=$privateofficemodel->getservicelist(1119,$vstcode);
                // if (is_array($vst)) {
                    // if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                // }
            // }
            // $rastvsttxt='';
            // if (is_array($this->view->dogovorlist)) {
                // foreach ($this->view->dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='1112') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }
                        // if (strlen($rasttxt)>0) {
                            // if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            // $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        // }
                    // }



                    
        } else {
            return $this->error(404);                
            exit;
        }        
        
        $filename = 'agreement' .$dgcode. '.doc';
        $this->view->filename=$filename;
		
		if($this->domen=='ru'){
			if ($dogovorinfo['DG_PARTNERKEY'] == 16280){
				$dgcode = $dgcode.'-АВТ';
			}
			if ($dogovorinfo['DG_PARTNERKEY'] == 26060){
				$dgcode = $dgcode.'-ВЕТ';
			}
		}

		
        $this->view->dgcode=$dgcode;
        $this->view->daycrdate=$daycrdate;
        $this->view->moncrdate=$moncrdate;
        $this->view->yearcrdate=$yearcrdate;
        $this->view->crdate=$crdate;
        $this->view->moncrdatetxt=$moncrdatetxt;
        $this->view->daytecdate=$daytecdate;
        $this->view->montecdate=$montecdate;
        $this->view->yeartecdate=$yeartecdate;
        $this->view->tecdate=$tecdate;
        $this->view->montecdatetxt=$montecdatetxt;
        $this->view->turistview=$turistview;
        $this->view->turistmainview=$turistmainview;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->paymentdate=$paymentdate;
        $this->view->turname=$turname;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->roomsarr=$roomsarr;
        $this->view->numberofrooms=$numberofrooms;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->airtxt=$airtxt;
        $this->view->transfertxt=$transfertxt;
        // $this->view->straxbool=$straxbool;
        $this->view->vsttxt=$vsttxt;
        
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->agenturadress=$agenturadress;
        
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->pr_homepage=$pr_homepage;
        $this->view->pr_inn=$pr_inn;
        $this->view->pr_kpp=$pr_kpp;
        $this->view->bn_coracc=$bn_coracc;
        $this->view->bn_name=$bn_name;
        $this->view->pa_account=$pa_account;
        $this->view->bn_bik=$bn_bik;
        $this->view->pr_codeokpo=$pr_codeokpo;
        $this->view->straxtxt=$straxtxt;
        $this->view->rasttxt1=$rasttxt1;
        $this->view->rasttxt2=$rasttxt2;
		$this->view->dg_prkey = $dg_prkey;
		
		$this->view->summ = $dogovorinfo['DG_PRICE'] + $dogovorinfo['DG_DISCOUNTSUM'];

		if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc) || $this->view->legal_id == $this->legal_riteil  || $this->view->legal_id == 7){
			$this->view->summ = $dogovorinfo['DG_PRICE'];
			$this->setView('printagreement2');
		}

		if($this->view->legal_id == 1 || $this->view->legal_id ==2 || $this->view->legal_id ==3 ){
			$this->setView('printagreement3');
		}
        // echo 'test';
        // exit;
        // echo '$turistmainfio = '.$turistmainfio.'<br>';
        // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
        // echo 'test';
        // exit;
      /*  if (!headers_sent()) {
            header("Content-Type: application/msword");
			            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
        */

        if (!headers_sent()) {
            header("Content-Type: application/msword");
			            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
        
    }
    
    public function printagreementpdfAction() 
    {
        
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];    
        
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            // zend_debug::dump($dogovorinfo);
            // exit;
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
  
            
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }  
            
            $turistmainview=array();
            //Фио главного туриста
            $turistmainfio=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_FNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_FNAMERUS'];
            }
            if (strlen($dogovorinfo['TU_SNAMERUS'])>0) {
                $turistmainfio.=' '.$dogovorinfo['TU_SNAMERUS'];
            }
            $turistmainview['fio']=$turistmainfio;

            //Фио сокращенное главного туриста
            $turistmainfioshort=$dogovorinfo['TU_NAMERUS'];
            if (strlen($dogovorinfo['TU_SHORTNAME'])>0) {
                $turistmainfioshort.=' '.$dogovorinfo['TU_SHORTNAME'];
            }
            $turistmainview['fioshort']=$turistmainfioshort;
            
            //Паспортные данные главного туриста
            $turistmainpasport=$dogovorinfo['TU_PASPORTTYPE'];
            if (strlen($turistmainpasport)>0 && strlen($dogovorinfo['TU_PASPORTTYPE'])>0) $turistmainpasport.=' ';
            $turistmainpasport.=$dogovorinfo['TU_PASPORTNUM'];
            $turistmainview['pasport']=$turistmainpasport;
                
            // echo '$turistmainfio = '.$turistmainfio.'<br>';
            // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
            // echo '$turistmainpasport = '.$turistmainfioshort.'<br>';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $crdate=$dogovorinfo['DG_CRDATE'];
            $daycrdate=date('d',strtotime($crdate));
            $moncrdate=date('m',strtotime($crdate));
            $yearcrdate=date('Y',strtotime($crdate));
            $moncrdatetxt=$this->getmontxt(date('n',strtotime($crdate)));
            $crdate=date('d.m.Y', strtotime($crdate));

            $tecdate=time();
            $daytecdate=date('d',$tecdate);
            $montecdate=date('m',$tecdate);
            $yeartecdate=date('Y',$tecdate);
            $montecdatetxt=$this->getmontxt(date('n',$tecdate));
            $tecdate=date('d.m.Y',$tecdate);
            
            //Список туристов
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dgcode);
            // zend_debug::dump($turist);
            
            $turistview=array();
            
            $straxcodearr=array();
            $straxcode=0;
            $straxtxt='';
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            
            foreach ($turist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turistview[$key]['fio']=$fio;
                $fioshort=$row['TU_NAMERUS'];
                if (strlen($fioshort)>0 && strlen($row['TU_SHORTNAME'])>0) $fioshort.=' ';
                $fioshort.=$row['TU_SHORTNAME'];
                $turistview[$key]['fioshort']=$fioshort;
                $citizen=$row['TU_CITIZEN'];
                $turistview[$key]['citizen']=$citizen;
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turistview[$key]['birthday']=$birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey, $dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $straxcode=$dl_subcode1;
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                if ($straxcode>0) {
                    if (!isset($straxcodearr[$straxcode])) {
                        $straxcodearr[$straxcode]=1;
                        $straxtxt.=$strax.'; ';
                    }
                }
                // echo $birthday;
            }            
            if (strlen($straxtxt)==0) $straxtxt='Нет';                
            // echo '$straxtxt = '.$straxtxt;
            // exit;
            // zend_debug::dump($turistview);
            
            // exit;
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			
			if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			$dogovor_change = TRUE;
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate)){
				$this->view->legal_id=0;
				$dogovor_change = FALSE;
			}
			$this->view->dogovor_change = $dogovor_change;
            
            // zend_debug::dump($countryname);
            // zend_debug::dump($cityname);
            // exit;
            //Оплатить до
            $paymentdate=$dogovorinfo['DG_PAYMENTDATE'];
            if (strlen($paymentdate)>0) {
                $paymentdate=date('d.m.Y', strtotime($paymentdate));
            } else {
                $paymentdate='';
            }
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);




            //Таблица с проживаниями
            // $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $hotellistarr=array();
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $roomsarr=array();
            $pansiontxt='';
            $pansionarr=array();
            $numberofrooms=0;
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $numberofrooms++;
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        // $hotellistview[$i]['num']=$i;
                        //Город 
                        // $cityid=$row['DL_CTKEY'];
                        // $city=$citiesmodel->getcitybyid($cityid);
                        // $cityname='';
                        // if (is_array($city)) {
                            // if (isset($city['Name'])) {
                                // $cityname=$city['Name'];
                            // }
                        // }
                        // $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        if (!isset($hotellistarr[$hotelkey])) {
                            $hotellistarr[$hotelkey]=1;
                            $hotelname='';
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                            // zend_debug::dump($hoteldictionary);
                            // exit;
                            if (is_array($hoteldictionary)) {
                                if (isset($hoteldictionary['HD_NAME'])) {
                                    $hotelname=$hoteldictionary['HD_NAME'];
                                }
                                if (isset($hoteldictionary['HD_STARS'])) {
                                    if (strlen($hoteldictionary['HD_STARS'])>0) {
                                        $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                    }
                                }
                            }
                            if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                            $hotelstxt.=$hotelname;
                        }
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        if (!isset($roomsarr[$subcode1])) {
                            $roomname='';
                            if ($subcode1>0) {
                                $room=$privateofficemodel->getroom($subcode1);
                                if (is_array($room)) {
                                    $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                    $accmdkey=(int)$room['AccmdMenTypeKey'];
                                    $accmd=$privateofficemodel->getaccmd($accmdkey);
                                    if (is_array($accmd)) {
                                        $roomname.=', '.trim($accmd['Code']);
                                    }
                                }
                            }
                            if (strlen($roomstxt)>0) $roomstxt.='; ';
                            $roomstxt.=$roomname;
                            $roomsarr[$subcode1]=$roomname;
                        }

                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        if (!isset($pansionarr[$subcode2])) {
                            $pansionname='';
                            if ($subcode2>0) {
                                $pansion=$privateofficemodel->getpansion($subcode2);
                                if (is_array($pansion)) {
                                    $pansionname=$pansion['Code'].' '.$pansion['Name'];
                                }
                            }
                            if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                            $pansiontxt.=$pansionname;
                            $pansionarr[$subcode2]=$pansionname;
                        }



                        // if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        // $hotellistview[$i]['hotelname']=$hotelname;
                        // $hotellistview[$i]['roomname']=$roomname;
                        // $hotellistview[$i]['pansionname']=$pansionname;
                        
                        // $hotellistview[$i]['dateend']=$dateend;
                        // //Кол-во ночей
                        // $ndays=(int)$row['DL_NDAYS'];
                        // $ndaystxt=$ndays.'/'.($ndays+1);
                        // $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
                // zend_debug::dump($roomsarr);
                asort($roomsarr);
                // zend_debug::dump($roomsarr);
                // exit;
            }
            if (strlen($pansiontxt)==0) $pansiontxt='Нет';
            
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            $airtxt='';
            foreach ($dogovorlist as $key=>$row)  {
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        if (strlen($airtxt)>0) $airtxt.='; ';
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airtxt.=$airview[$key]['num'].',';
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        $airtxt.=$airview[$key]['route'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
            }            
            if (strlen($airtxt)==0) $airtxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }     
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            
            
            // //////////////Страховка start
            // $straxcode=0;
            // $straxbool=false;            
            // $straxtxt='';
            // if (is_array($dogovorlist)) {
                // foreach ($dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='6') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }                    
                        // $straxbool=true;
                        // $straxcode=(int)$row['DL_CODE'];
                        // if ($straxbool) {
                            // if (strlen($straxtxt)>0) $straxtxt.=' ';
                            // $strax=$privateofficemodel->getservicelist(6,$straxcode);
                            // if (is_array($strax)) {
                                // zend_debug::dump($strax);
                                // $straxtxt.=$strax['SL_NAME'];
                            // }
                            // // $straxtxt.='('.$turistlist_size.')';
                            // $straxtxt.='; ';
                        // }
                    // }                    
                // }
            // }   
            // // exit;
            // if (strlen($straxtxt)==0) $straxtxt='Нет';              
            
            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $dgcode);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager') {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            $agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($dogovorinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            
            // zend_debug::dump($agentinfo);
            // exit;
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress='';
            if (strlen(trim($agentinfo['PR_POSTINDEX']))>0) {
                $agentadress.=trim($agentinfo['PR_POSTINDEX']);
            }
            if (strlen(trim($agentinfo['PR_CITY']))>0) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agentadress.='Москва';
				} else {
					$agentadress.=trim($agentinfo['PR_CITY']);
				}

            }
            if (strlen(trim($agentinfo['PR_ADRESS']))>0) {
                if (strlen($agentadress)>0) {
                    $agentadress.=', ';
                }
                $agentadress.=trim($agentinfo['PR_ADRESS']);
            }
            
            $agenturadress='';
            if (strlen(trim($agentinfo['PR_LEGALPOSTINDEX']))>0) {
                $agenturadress.=trim($agentinfo['PR_LEGALPOSTINDEX']);
            }
            if (strlen(trim($agentinfo['PR_CITY']))>0) {
                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
				if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
					$agenturadress.='Москва';
				} else {
					$agenturadress.=trim($agentinfo['PR_CITY']);
				}
            }
            if (strlen(trim($agentinfo['PR_LEGALADDRESS']))>0) {
                if (strlen($agenturadress)>0) {
                    $agenturadress.=', ';
                }
                $agenturadress.=trim($agentinfo['PR_LEGALADDRESS']);
            }
            
  // ["PR_POSTINDEX"] => string(6) "602267"
  // ["PR_LEGALPOSTINDEX"] => string(6) "602264"            
  // ["PR_LEGALADDRESS"] => string(44) "ул. Энергетиков, д. 3, кв. 4"  
            // echo '$agentadress = '.$agentadress.'<br>';
            // echo '$agenturadress = '.$agenturadress.'<br>';
            
            // //$agenturadress
            // exit;
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];            
            $pr_homepage=$agentinfo['PR_HOMEPAGE'];
            $pr_inn=$agentinfo['PR_INN'];
            $pr_kpp=$agentinfo['PR_KPP'];
            $pa_account=$agentinfo['PA_Account'];
            $bn_name=$agentinfo['BN_Name'];
            $bn_coracc=$agentinfo['BN_CorAccount'];
            $bn_bik=$agentinfo['BN_BIK'];
            $pr_codeokpo=$agentinfo['PR_CODEOKPO'];
            
            // echo '$pr_homepage = '.$pr_homepage.'<br>';
            // exit;
            // $pr_kpp=$agentinfo['PR_KPP'];
            // echo '$vsttxt = '.$vsttxt.'<br>';
            // exit;
            
            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;            
            // echo '$transfertxt = '.$transfertxt.'<br>';
            // zend_debug::dump($tranferlistview);
            // exit;
            // echo '$airtxt = '.$airtxt.'<br>';
            // zend_debug::dump($airview);
            // exit;
            // echo '$roomstxt = '.$roomstxt;
            // exit;
            // echo '$pansiontxt = '.$pansiontxt.'<br>';
            // exit;
            //Кол-во дней и ночей
            $nday=(int)$dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // exit;
            // echo $hotelstxt.'<br>';
            // // zend_debug::dump($hotellistview);
            // exit;
            // echo '$turname = '.$turname.'<br>';
            // exit;
            
            $rasttxt='';
			
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $dgcode);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                        break;
                    }
                }
            }  
            $rasttxt1='';
            $rasttxt2='';
            $slname=$rasttxt;
            $slname=preg_replace('/расчетный.*час/ui','',$slname);
            $slname=trim($slname);
            $slname=preg_replace('/^:/ui','',$slname);
            $slname=trim($slname);
            $slname_arr=explode(',',$slname);
            if (count($slname_arr)==2) {
                $rasttxt1=trim($slname_arr[0]);
                $rasttxt2=trim($slname_arr[1]);
            } else {
                $rasttxt1=$slname;
                $rasttxt2=$slname;
            }
            if (!preg_match('/заезд/ui',$rasttxt1) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt1)) {
                $rasttxt1='заезд с '.$rasttxt1;
            }
            if (!preg_match('/выезд/ui',$rasttxt2) && preg_match('/^[0-9]{2}:[0-9]{2}/',$rasttxt2)) {
                $rasttxt2='выезд до '.$rasttxt2;
            }
            if (strlen($rasttxt1)>0) $rasttxt1=', '.$rasttxt1;
            if (strlen($rasttxt2)>0) $rasttxt2=', '.$rasttxt2;
            // echo '$rasttxt = '.$rasttxt.'<br>';
            // echo '$rasttxt1 = '.$rasttxt1.'<br>';
            // echo '$rasttxt2 = '.$rasttxt2.'<br>';
            // exit;
                // $rasttxt='';
            // if ($rastcode>0) {
                // $rast=$privateofficemodel->getservicelist(1112,$rastcode);
                // if (is_array($rast)) {
                    // if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                // }
            // }
            // $vsttxt='';
            // if ($vstcode>0) {
                // $vst=$privateofficemodel->getservicelist(1119,$vstcode);
                // if (is_array($vst)) {
                    // if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                // }
            // }
            // $rastvsttxt='';
            // if (is_array($this->view->dogovorlist)) {
                // foreach ($this->view->dogovorlist as $row) {
                    // if ($row['DL_SVKEY']=='1112') {
                        // $dlkey=$row['DL_KEY'];
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        // if (is_array($turistlist)) {
                            // $turistlist_size=count($turistlist);
                        // } else {
                            // $turistlist_size=0;
                        // }
                        // if (strlen($rasttxt)>0) {
                            // if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            // $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        // }
                    // }



                    
        } else {
            return $this->error(404);                
            exit;
        }        
        
        $filename = 'agreement' .$dgcode. '.doc';
        $this->view->filename=$filename;
		
		if($this->domen=='ru'){
			if ($dogovorinfo['DG_PARTNERKEY'] == 16280){
				$dgcode = $dgcode.'-АВТ';
			}
			if ($dogovorinfo['DG_PARTNERKEY'] == 26060){
				$dgcode = $dgcode.'-ВЕТ';
			}
		}

		
        $this->view->dgcode=$dgcode;
        $this->view->daycrdate=$daycrdate;
        $this->view->moncrdate=$moncrdate;
        $this->view->yearcrdate=$yearcrdate;
        $this->view->crdate=$crdate;
        $this->view->moncrdatetxt=$moncrdatetxt;
        $this->view->daytecdate=$daytecdate;
        $this->view->montecdate=$montecdate;
        $this->view->yeartecdate=$yeartecdate;
        $this->view->tecdate=$tecdate;
        $this->view->montecdatetxt=$montecdatetxt;
        $this->view->turistview=$turistview;
        $this->view->turistmainview=$turistmainview;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->paymentdate=$paymentdate;
        $this->view->turname=$turname;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->roomsarr=$roomsarr;
        $this->view->numberofrooms=$numberofrooms;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->airtxt=$airtxt;
        $this->view->transfertxt=$transfertxt;
        // $this->view->straxbool=$straxbool;
        $this->view->vsttxt=$vsttxt;
        
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->agenturadress=$agenturadress;
        
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->pr_homepage=$pr_homepage;
        $this->view->pr_inn=$pr_inn;
        $this->view->pr_kpp=$pr_kpp;
        $this->view->bn_coracc=$bn_coracc;
        $this->view->bn_name=$bn_name;
        $this->view->pa_account=$pa_account;
        $this->view->bn_bik=$bn_bik;
        $this->view->pr_codeokpo=$pr_codeokpo;
        $this->view->straxtxt=$straxtxt;
        $this->view->rasttxt1=$rasttxt1;
        $this->view->rasttxt2=$rasttxt2;
		$this->view->dg_prkey = $dg_prkey;
		
		$this->view->summ = $dogovorinfo['DG_PRICE'] + $dogovorinfo['DG_DISCOUNTSUM'];
		
		if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
			$this->view->summ = $dogovorinfo['DG_PRICE'];
			$this->setView('printagreementpdf2');
		}
        // echo 'test';
        // exit;
        // echo '$turistmainfio = '.$turistmainfio.'<br>';
        // echo '$turistmainfioshort = '.$turistmainfioshort.'<br>';
        // echo 'test';
        // exit;
      /*  if (!headers_sent()) {
            header("Content-Type: application/msword");
			            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
        */
        if (!headers_sent()) {
            header("Content-Type: application/msword");
			            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
        
    }
    
    public function   headstatusAction() 
    {
        set_time_limit(10);
        $this->authsecure(0);
        $this->setCfgLayout('empty');
   
        // if (!isset($_SESSION)) {
            // session_start();
        // }
		$usertype = '';
        $s_login='';
        if (isset($_SESSION['s_login'])) {
            $this->view->authbool=true;
            $s_login=$_SESSION['s_login'];
			$uskey=$_SESSION['s_uskey'];
			
			$uskey=$_SESSION['s_uskey'];
        $privateofficemodel=$this->getModel('Privateoffice');
		$usertype = $this->getusertypeinsession();
		$this->view->messnotread =0;
                
//                @openlog('headstatus', LOG_ODELAY | LOG_PID, LOG_LOCAL0);
//                @syslog(LOG_ERR, 'usertype: '.$usertype."\n");
//                @closelog();
                
        /*if($usertype == 'manager') {
            if (isset($_SESSION['s_login']) && false) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey=$curatorinfo['cur_usid'];
			$this->view->messnotread = $privateofficemodel->getmessnotreadbyusidcur($uskey);
			}
			
			} else 	$this->view->messnotread = $privateofficemodel->getmessnotreadbyusid($s_login);*/
        } else $this->view->authbool=false;
	
		$this->view->iframe = isset($_REQUEST['iframe']);	
        $this->view->s_login=$s_login;    
		$this->view->usertype = $usertype;
    }

    public function agentinfosendAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/agentinfosend/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        // zend_debug::dump($_SESSION);
        // echo '$urlredirect = '.$urlredirect.'<br>';
        // exit;
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            // zend_debug::dump($_POST);
            // exit;
            $phone=(string)$this->_getParam('phone', '');
            $fax=(string)$this->_getParam('fax', '');
            $email=(string)$this->_getParam('email', '');
            $phone=htmlspecialchars(strip_tags(trim(substr($phone, 0, 255))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $fax=htmlspecialchars(strip_tags(trim(substr($fax, 0, 255))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $email=htmlspecialchars(strip_tags(trim(substr($email, 0, 255))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
            $phone=str_replace('\'', ' ', $phone);
            $phone=str_replace("\n", ' ', $phone);
            $phone=str_replace("\r", ' ', $phone);
            $fax=str_replace('\'', ' ', $fax);
            $fax=str_replace("\n", ' ', $fax);
            $fax=str_replace("\r", ' ', $fax);
            $email=str_replace('\'', ' ', $email);
            $email=str_replace("\n", ' ', $email);
            $email=str_replace("\r", ' ', $email);
            
            // echo 'phone = '.$phone.'<br>';
            // echo 'fax = '.$fax.'<br>';
            // echo 'email = '.$email.'<br>';
            // exit;
            // $subject=(string)$this->_getParam('subject', '');
            // $message=(string)$this->_getParam('message', '');
  // ["phone"] => string(15) "(495) 745-54-70"
  // ["fax"] => string(15) "(495) 745-54-70"
  // ["email"] => string(22) "vysokanova@1classom.ru"
  
            $privateofficemodel=$this->getModel('Privateoffice');
            // zend_debug::dump($uskey);
            // exit;
            $userinfo=$privateofficemodel->getuserinfo($uskey);
            // zend_debug::dump($userinfo);
            // exit;
            if (!$userinfo) {
                if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            }
            $subject='Запрос на изменение профиля турагентства';
            $message='Новый телефон - '.$phone.'<br>'.'Новый факс - '.$fax.'<br>'.'Новый e-mail - '.$email;
            // echo 'test2';
            // exit;
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            $params=array();
            $params['usidfrom']=$usid;
            $params['usidto']='admin';
            $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip']=$ip_int;
            $timestamp=time();
            $params['time']=$timestamp;
            $params['idmess_parent']=0;
            $params['status']=1;
            $params['subject']=$subject;
            $params['message']=$message;
            
            //Формируем сообщение для отправки на емайл
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
            $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
            $ip=$_SERVER['REMOTE_ADDR'];
            
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Запрос на изменение профиля турагентства</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($subject).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Новый телефон:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($phone).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Новый факс:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fax).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Новый e-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($email).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table>';
            $emailfrom='noreply@multitour.ru';
            
            $emaillist[]='elkin@multitour.ru';
            // $emaillist[]='noreply@multitour.ru';
            $emaillist[]='semenov@multitour.ru';
            $emaillist[]='huseinov@multitour.ru';
            $subjectmail='Запрос на изменение профиля турагентства';
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            
            // function utf8_to_cp12511($str) {
                // $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                // return $encoded_data;
            // }        
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            // echo 'Отправляем сообщение<br>';
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            
            // echo $sendhtml;
            
            if ($emaillist!=null) {
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Запрос на изменение профиля турагенства')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                    } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
                }
            }
            
            // exit;
            $privateofficemodel->addmess($params);
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            // echo 'Зашло сюда отправляем сообщение';
            // exit;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }
        // zend_debug::dump($_SERVER);
        // exit;
        $this->view->uskey=$uskey;
        $this->view->type=$type;
    }
    public function searchagentAction() 
    {
        $this->clear();
        $q=(string)$this->_getParam('q',0);
        // $q=iconv("WINDOWS-1251","utf-8",$q);
        // $q=mb_strtolower($q,"UTF-8");    
        $q = (string)$this->_getParam('q', '');
        $q = substr($q, 0, 255);
        $q = $this->filtersimvol($q);        
        // echo '$q = '.$q.'<br>';
        
        $this->setCfgLayout('empty');
        $hotelsmodel=$this->getModel('Hotels');
        $privateofficemodel=$this->getModel('Privateoffice');
        $anegtlist=$privateofficemodel->searchagent($q);
      // $hotels=$hotelsmodel->gethotelslist();
        // echo $q.'<br>';
        // exit;
        // //zend_debug::dump($hotels);

        if ($q!='') {
            foreach ($anegtlist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $name=$row['PR_FULLNAME'].' ('.$row['PR_NAME'].')';
                $url='/privateoffice/agentlist/?prkey='.$row['PR_KEY'];
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($row['PR_KEY']);
				
				if(isset($anegtdoginfo['PD_Key'])){
					$pd_key = $anegtdoginfo['PD_Key'];
				} else {
					$pd_key = 0;
				}
				
                echo $name.'|'.$url.'|'.$row['PR_KEY'].'|'.$pd_key."\n";
            }
        }

    }
	//
	public function searchmanagerAction() 
    {
	
        $this->clear();
		$prkey = (string)$this->_getParam('prkey',0);
        $q=(string)$this->_getParam('q',0);
        // $q=iconv("WINDOWS-1251","utf-8",$q);
        // $q=mb_strtolower($q,"UTF-8");    
        $q = (string)$this->_getParam('q', '');
        $q = substr($q, 0, 255);
        $q = $this->filtersimvol($q);        
        // echo '$q = '.$q.'<br>';
        
        $this->setCfgLayout('empty');
        $hotelsmodel=$this->getModel('Hotels');
        $privateofficemodel=$this->getModel('Privateoffice');
        $anegtlist=$privateofficemodel->searchmanager($q,$prkey);
      // $hotels=$hotelsmodel->gethotelslist();
        // echo $q.'<br>';
        // exit;
        // //zend_debug::dump($hotels);
        if ($q!='') {
            foreach ($anegtlist as $key=>$row) {
                // zend_debug::dump($row);
                // exit;
                $name=$row['US_FULLNAME'];
                $url='/privateoffice/agentlist/?prkey='.$row['US_KEY'];
                echo $name.'|'.$url.'|'.$row['US_KEY']."\n";
            }
        }

    }
    public function admincheckAction() 
    {
        $this->clear();
        $this->authsecure(0);
        $this->setCfgLayout('empty');
        $s_login='';
        if (isset($_SESSION['s_login'])) {
            if ($_SESSION['s_login']=='admin') echo '1';
            else echo '0';
        } else echo '0';
        
    }

    public function anketaform() {
        $numvopros=1;
        $vopros[$numvopros]='Пользуетесь ли Вы «Подбором туров» на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Постоянно';
            $voprosvar[$numvopros][2]='Редко, но пользуюсь';
            $voprosvar[$numvopros][3]='Пользуюсь ценовыми таблицами';
            $voprosvar[$numvopros][4]='Не пользуюсь, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=2;
        $vopros[$numvopros]='Пользуетесь ли Вы дополнительными параметрами при поиске необходимого тура в «Каталоге отелей» или «Подборе туров»?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
            $voprosvar[$numvopros][3]='Не знали, что есть подбор по дополнительным параметрам';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
        
        $numvopros=3;
        $vopros[$numvopros]='Какими вариантами подбора санаторно-курортного лечения  Вы пользуетесь?';
            $voprosvar[$numvopros][1]='Дополнительными параметрами в подборе туров или в каталоге туров';
            $voprosvar[$numvopros][2]='Страница Санаторно-курортное лечение';
            $voprosvar[$numvopros][3]='Никакими';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                
        $numvopros=4;
        $vopros[$numvopros]='Какими разделами сайта компании «МУЛЬТИТУР» Вы пользуетесь  для поиска туров чаще всего?';
            $voprosvar[$numvopros][1]='Подбор туров';
            $voprosvar[$numvopros][2]='Каталог отелей';
            $voprosvar[$numvopros][3]='Он-лайн бронирование';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
        $numvopros=5;
        $vopros[$numvopros]='Пользуетесь ли Вы выбором размещения (1-но, 2-х, 3-х местное, все размещения) в ценовых таблицах на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Постоянно';
            $voprosvar[$numvopros][2]='Редко, но пользуюсь';
            $voprosvar[$numvopros][3]='Не пользуемся, потому что %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=6;
        $vopros[$numvopros]='Насколько удобен и понятен для Вас новый формат спецпредложений  на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Неудобен';
            $voprosvar[$numvopros][3]='Есть значительные недоработки (укажите какие) %%inputother%%';
            $voprosvar[$numvopros][4]='Не заметили разницы';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
        $numvopros=7;
        $vopros[$numvopros]='Пользуетесь ли Вы услугами наших авиа и ж/д касс?';
            $voprosvar[$numvopros][1]='Только авиа';
            $voprosvar[$numvopros][2]='Только ж/д';
            $voprosvar[$numvopros][3]='Да, и авиа и ж/д';
            $voprosvar[$numvopros][4]='Не пользуемся, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=8;
        $vopros[$numvopros]='Какой вид транспорта был выбран Вашими туристами при бронировании летних туров в Крым в 2011 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт';
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)';
            $voprosvar[$numvopros][3]='Поезд';
            $voprosvar[$numvopros][4]='Личный автомобиль';
            $voprosvar[$numvopros][5]='Автобус компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][6]='Автобусы других компаний';
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                
        $numvopros=9;
        $vopros[$numvopros]='Какой вид транспорта был выбран Вашими туристами при бронировании летних туров в Краснодарский край в 2011 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт'; 
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)'; 
            $voprosvar[$numvopros][3]='Поезд'; 
            $voprosvar[$numvopros][4]='Личный автомобиль'; 
            $voprosvar[$numvopros][5]='Автобус компании «МУЛЬТИТУР»'; 
            $voprosvar[$numvopros][6]='Автобусы других компаний'; 
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                
        $numvopros=10;
        $vopros[$numvopros]='Интересно ли Вам бронирование полных турпакетов (отель+ проезд+ трансфер)?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=11;
        $vopros[$numvopros]='Бронировали ли Вы туры по новым направлениям компании «МУЛЬТИТУР» - Прибалтика (Латвия, Литва, Эстония), Армения?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Не бронировали, не знали о новых направлениях';
            $voprosvar[$numvopros][3]='Нет, потому что %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=12;
        $vopros[$numvopros]='В каком офисе компании «МУЛЬТИТУР» Вы бронируете туры? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='в Москве';
            $voprosvar[$numvopros][2]='в Нижнем Новгороде';
            $voprosvar[$numvopros][3]='в Ростове-на-Дону';
            $voprosvar[$numvopros][4]='в Анапе';
            $voprosvar[$numvopros][5]='в Киеве';
            $voprosvar[$numvopros][6]='в Симферополе';
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=13;
        $vopros[$numvopros]='Присутствовали ли Вы на вебинарах, проведенных компанией «МУЛЬТИТУР» ?';
            $voprosvar[$numvopros][1]='Да, присутствовали в режиме он-лайн (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][2]='Смотрели в архиве (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][3]='Не знали, что их проводили';
                $voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=14;
        $vopros[$numvopros]='Вебинары по каким направлениям вы бы хотели  прослушать в 2012 году ?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

                    
        $numvopros=15;
        $vopros[$numvopros]='Какой вариант «Договора реализации туристского продукта» Вы заключаете с Заказчиком туристского продукта (туристом)?';
            $voprosvar[$numvopros][1]='Вариант договора, рекомендованный компанией  «МУЛЬТИТУР» и размещённый на сайте компании';
            $voprosvar[$numvopros][2]='Вариант договора, рекомендованный иным (и) туроператором (и)  (укажите каким) %%inputother%%';
            $voprosvar[$numvopros][3]='Вариант договора, разработанный самостоятельно';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=16;
        $vopros[$numvopros]='Насколько компетентными Вам показались ответы менеджеров на телефонные звонки?';
                $voprosvar[$numvopros][1]='Достаточно компетентны';
                $voprosvar[$numvopros][2]='Компетентны, но хотелось бы подробнее';
                $voprosvar[$numvopros][3]='Абсолютно не компетентны';
                $voprosvar[$numvopros][4]='Не звонили, достаточно информации на сайте';
                $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
        $numvopros=17;
        $vopros[$numvopros]='Как долго приходилось ждать соединения с сотрудником «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Недолго';
            $voprosvar[$numvopros][2]='Приходилось ждать несколько минут';
            $voprosvar[$numvopros][3]='Очень долго, приходилось перезванивать по несколько раз';
            $voprosvar[$numvopros][4]='Ждали недолго, но часто неправильно соединяли';
            $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=18;
        $vopros[$numvopros]='Как Вы оцениваете ответы операторов компании «МУЛЬТИТУР» по icq, skype, чат-вопрос?';
            $voprosvar[$numvopros][1]='Ни разу не прибегали к их помощи';
            $voprosvar[$numvopros][2]='Быстрые и оперативные ответы';
            $voprosvar[$numvopros][3]='Не получали ответов на поставленные вопросы';
            $voprosvar[$numvopros][4]='Другое %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=19;
        $vopros[$numvopros]='Как Вам наиболее удобно получать консультации менеджеров компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='По телефону';
            $voprosvar[$numvopros][2]='Консультируемся по icq';
            $voprosvar[$numvopros][3]='Используем в работе Skype';
            $voprosvar[$numvopros][4]='Общаемся только по электронной почте';
            $voprosvar[$numvopros][5]='Всю информацию видим на сайте';
            $voprosvar[$numvopros][6]='On-line переписка (чат)';
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=20;
        $vopros[$numvopros]='Что по Вашему мнению наиболее стимулирует работу Вашего агентства? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Повышение агентского вознаграждения';
            $voprosvar[$numvopros][2]='Личные призы менеджеру';
            $voprosvar[$numvopros][3]='Бонусные предложения';
            $voprosvar[$numvopros][4]='Надежность и четкость работы компании';
            $voprosvar[$numvopros][5]='Четкий документооборот';
            $voprosvar[$numvopros][6]='Удобный сайт';
            $voprosvar[$numvopros][7]='Удобная система on-line бронирования';
            $voprosvar[$numvopros][8]='Широкий ассортимент туров';
            $voprosvar[$numvopros][9]='Другое %%inputother%%';
                $voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=9; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=21;
        $vopros[$numvopros]='Какие новые направления или объекты размещения Вы хотели бы увидеть в наших предложениях?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

        $numvopros=22;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с положительной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=23;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с отрицательной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=24;
        $vopros[$numvopros]='В каком формате вы хотели бы получать рассылку от компании «МУЛЬТИТУР» в сезоне 2012 г.?';
            $voprosvar[$numvopros][1]='Устраивает рассылка';
            $voprosvar[$numvopros][2]='Мы не получаем рассылку от компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][3]='Один информационный бюллетень по всем направлениям';
            $voprosvar[$numvopros][4]='Читать сообщения в twitter';
            $voprosvar[$numvopros][5]='Ваши пожелания %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=25;
        $vopros[$numvopros]='Как в целом Вы оцениваете работу компании «МУЛЬТИТУР» в сезоне 2011 г.?';
            $voprosvar[$numvopros][1]='Отлично';
            $voprosvar[$numvopros][2]='Хорошо';
            $voprosvar[$numvopros][3]='Удовлетворительно (укажите почему) %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=26;
        $vopros[$numvopros]='С какими еще операторами Вы работаете по направлениям внутреннего туризма? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Дельфин';
            $voprosvar[$numvopros][2]='РВБ-Алеан';
            $voprosvar[$numvopros][3]='Ориент';
            $voprosvar[$numvopros][4]='Астравел';
            $voprosvar[$numvopros][5]='Роза ветров';
            $voprosvar[$numvopros][6]='Криптон';
            $voprosvar[$numvopros][7]='Орфей';
            $voprosvar[$numvopros][8]='Солвекс';
            $voprosvar[$numvopros][9]='СНП';
            $voprosvar[$numvopros][10]='Звездный путь';
            $voprosvar[$numvopros][11]='Другие %%inputother%%';
                $voprosvarother[$numvopros][11]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=11; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                    
        $numvopros=27;
        $vopros[$numvopros]='Если у Вас есть какие-то пожелания, вопросы или замечания укажите их: ';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'textarea','value'=>'','size'=>'70');
            
        $res=array();
        $res['vopros']=$vopros;
        $res['voprosvar']=$voprosvar;
        $res['voprosvarother']=$voprosvarother;
        $res['voprosvartype']=$voprosvartype;
        return $res;
    }
    
    public function anketaform2010() {
        $numvopros=1;
        $vopros[$numvopros]='Насколько удобен и понятен Вам новый сайт компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Есть значительные недоработки (если есть, то укажите какие %%inputother%%)';
            $voprosvar[$numvopros][3]='Совершенно неудобен';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=2;
        $vopros[$numvopros]='Насколько удобен и понятен Вам новый «Каталог отелей» на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Есть значительные недоработки (если есть, то укажите какие %%inputother%% )';
            $voprosvar[$numvopros][3]='Совершенно неудобен';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
        
        $numvopros=3;
        $vopros[$numvopros]='Насколько удобен и понятен был для Вас «Подбор туров» на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Не пользовались';
            $voprosvar[$numvopros][2]='Вполне удобен';
            $voprosvar[$numvopros][3]='Есть значительные недоработки (если есть, то укажите какие %%inputother%% )';
            $voprosvar[$numvopros][4]='Совершенно неудобен';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=4;
        $vopros[$numvopros]='Пользуетесь ли Вы дополнительными параметрами при поиске необходимого тура в «Каталоге отелей» или «Подборе туров»?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
            $voprosvar[$numvopros][3]='Не знали, что есть подбор по дополнительным параметрам';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=5;
        $vopros[$numvopros]='Пользуетесь ли Вы при поиске санатория подбором по профилям лечения (в доп. параметрах)?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
            $voprosvar[$numvopros][3]='Не знали, что есть подбор по профилям лечения';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=6;
        $vopros[$numvopros]='Насколько удобны и понятны новые ценовые таблицы на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Вполне удобны';
            $voprosvar[$numvopros][2]='Есть значительные недоработки (если есть, то укажите какие %%inputother%% )';
            $voprosvar[$numvopros][3]='Совершенно неудобны';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
        $numvopros=7;
        $vopros[$numvopros]='Какова наиболее оптимальная, по Вашему мнению, продолжительность заездов для туров по южным направлениям?';
            $voprosvar[$numvopros][1]='7 дней';
            $voprosvar[$numvopros][2]='10 дней';
            $voprosvar[$numvopros][3]='12 дней';
            $voprosvar[$numvopros][4]='14 дней';
            $voprosvar[$numvopros][5]='свободные заезды';
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=8;
        $vopros[$numvopros]='Какой вариант публикации цен по отдыху и лечению для Вас предпочтительнее?';
            $voprosvar[$numvopros][1]='Цена за номер';
            $voprosvar[$numvopros][2]='Цена за человека';
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=9;
        $vopros[$numvopros]='Какой вариант цветного каталога для Вас удобнее?';
            $voprosvar[$numvopros][1]='Один каталог по всем предложениям';
            $voprosvar[$numvopros][2]='Отдельные каталоги по каждому из направлений';
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=10;
        $vopros[$numvopros]='Насколько компетентными Вам показались ответы менеджеров на телефонные звонки?';
            $voprosvar[$numvopros][1]='Достаточно компетентны';
            $voprosvar[$numvopros][2]='Компетентны, но хотелось бы подробнее';
            $voprosvar[$numvopros][3]='Абсолютно не компетентны';
            $voprosvar[$numvopros][4]='Не звонили, достаточно информации на сайте';
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=11;
        $vopros[$numvopros]='Как долго приходилось ждать соединения с сотрудником «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Недолго';
            $voprosvar[$numvopros][2]='Приходилось ждать несколько минут';
            $voprosvar[$numvopros][3]='Очень долго, приходилось перезванивать по несколько раз';
            $voprosvar[$numvopros][4]='Ждали не долго, но часто неправильно соединяли';
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
        $numvopros=12;
        $vopros[$numvopros]='Как Вы оцениваете ответы операторов компании «МУЛЬТИТУР» по icq, skype?';
            $voprosvar[$numvopros][1]='Ни разу не прибегали к их помощи';
            $voprosvar[$numvopros][2]='Быстрые и оперативные ответы';
            $voprosvar[$numvopros][3]='Не получали ответов на поставленные вопросы';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=13;
        $vopros[$numvopros]='Как Вам наиболее удобно получать консультации менеджеров компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='По телефону';
            $voprosvar[$numvopros][2]='Консультируемся по icq';
            $voprosvar[$numvopros][3]='Используем в работе Skype';
            $voprosvar[$numvopros][4]='Общаемся только по электронной почте';
            $voprosvar[$numvopros][5]='Всю информацию видим на сайте';
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=14;
        $vopros[$numvopros]='Что по Вашему мнению наиболее стимулирует работу Вашего агентства? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Повышение агентского вознаграждения';
            $voprosvar[$numvopros][2]='Личные призы менеджеру';
            $voprosvar[$numvopros][3]='Бонусные предложения';
            $voprosvar[$numvopros][4]='Надежность и четкость работы компании';
            $voprosvar[$numvopros][5]='Четкий документооборот';
            $voprosvar[$numvopros][6]='Удобный сайт';
            $voprosvar[$numvopros][7]='Удобная система on-line бронирования';
            $voprosvar[$numvopros][8]='Широкий ассортимент туров';
            $voprosvar[$numvopros][9]='Другое %%inputother%%';
                $voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=9; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=15;
        $vopros[$numvopros]='По внутреннему туризму Вы предпочитаете работать:';
            $voprosvar[$numvopros][1]='С одним туроператором';
            $voprosvar[$numvopros][2]='С двумя-тремя туроператорами';
            $voprosvar[$numvopros][3]='Более чем с тремя туроператорами';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=16;
        $vopros[$numvopros]='С какими еще операторами Вы работаете по направлениям внутреннего туризма? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Дельфин';
            $voprosvar[$numvopros][2]='РВБ-Алеан';
            $voprosvar[$numvopros][3]='Ориент';
            $voprosvar[$numvopros][4]='Астравел';
            $voprosvar[$numvopros][5]='Роза ветров';
            $voprosvar[$numvopros][6]='Криптон';
            $voprosvar[$numvopros][7]='Орфей';
            $voprosvar[$numvopros][8]='Солвекс';
            $voprosvar[$numvopros][9]='СНП';
            $voprosvar[$numvopros][10]='Звездный путь';
            $voprosvar[$numvopros][11]='Другие %%inputother%%';
                $voprosvarother[$numvopros][11]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=11; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=17;
        $vopros[$numvopros]='По какому из направлений Вы предпочитаете работать с другими операторами (укажите с какими) и почему?';
            $voprosvar[$numvopros][1]='Абхазия %%inputother%%';
            $voprosvar[$numvopros][2]='Беларусь %%inputother%%';
            $voprosvar[$numvopros][3]='Краснодарский край %%inputother%%';
            $voprosvar[$numvopros][4]='Крым %%inputother%%';
            $voprosvar[$numvopros][5]='Регионы Украины %%inputother%%';
            $voprosvar[$numvopros][6]='Регионы России %%inputother%%';
            $voprosvar[$numvopros][7]='Подмосковье %%inputother%%';
            $voprosvar[$numvopros][8]='Экскурсионные туры %%inputother%%';
                for ($i=1; $i<=8; $i++) 
                    $voprosvarother[$numvopros][$i]=array('size'=>'30','type'=>'text','value'=>'');
                for ($i=1; $i<=8; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                
        $numvopros=18;
        $vopros[$numvopros]='Пользуетесь ли Вы услугами наших авиа и ж/д касс?';
            $voprosvar[$numvopros][1]='Только авиа';
            $voprosvar[$numvopros][2]='Только ж/д';
            $voprosvar[$numvopros][3]='Да, и авиа и ж/д';
            $voprosvar[$numvopros][4]='Не пользуемся. Потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=19;
        $vopros[$numvopros]='Какой вид транспорта был выбран Вашими туристами при бронировании летних туров в Крым в 2010 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт';
            $voprosvar[$numvopros][2]='Поезд';
            $voprosvar[$numvopros][3]='Личный автомобиль';
            $voprosvar[$numvopros][4]='Автобус компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][5]='Автобусы других компаний';
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=20;
        $vopros[$numvopros]='Какой вид транспорта был выбран Вашими туристами при бронировании летних туров в Краснодарский край в 2010 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт';
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)';
            $voprosvar[$numvopros][3]='Поезд';
            $voprosvar[$numvopros][4]='Личный автомобиль';
            $voprosvar[$numvopros][5]='Автобус компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][6]='Автобусы других компаний';
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

        $numvopros=21;
        $vopros[$numvopros]='Является ли  страховка для туристов, включенная в стоимость туров компании «МУЛЬТИТУР» на Украину дополнительным преимуществом при выборе туроператора?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

        $numvopros=22;
        $vopros[$numvopros]='Бронировали ли Вы туры по новому направлению компании «МУЛЬТИТУР» - Абхазии?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Не бронировали, не знали о новом направлении';
            $voprosvar[$numvopros][3]='Нет, по другим причинам (укажите каким) %%inputother%%'; 
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=23;
        $vopros[$numvopros]='Достаточен ли, по Вашему мнению, ассортимент экскурсионных туров, расширенный в этом году?';
            $voprosvar[$numvopros][1]='Да, достаточен';
            $voprosvar[$numvopros][2]='Нет, хотелось бы больше предложений (напишите каких направлений не хватает)  %%inputother%%';
            $voprosvar[$numvopros][3]='Предложений слишком много, разобраться тяжело ';
            $voprosvar[$numvopros][4]='Мы не продаем экскурсионные туры';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=24;
        $vopros[$numvopros]='В каком офисе компании «МУЛЬТИТУР» Вы бронируете туры? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='в Москве';
            $voprosvar[$numvopros][2]='в Нижнем Новгороде';
            $voprosvar[$numvopros][3]='в Ростове-на-Дону';
            $voprosvar[$numvopros][4]='в Сочи';
            $voprosvar[$numvopros][4]='в Киеве';
            $voprosvar[$numvopros][5]='в Симферополе';
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=25;
        $vopros[$numvopros]='Какой рекламный тур и в какой период Вам был бы наиболее интересен в следующем году?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=26;
        $vopros[$numvopros]='Какие новые направления или объекты размещения Вы хотели бы увидеть в наших предложениях?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=27;
        $vopros[$numvopros]='Какой вариант «Договора реализации туристского продукта» Вы заключаете с Заказчиком туристского продукта (туристами)?';
            $voprosvar[$numvopros][1]='Вариант договора рекомендованный компанией  «МУЛЬТИТУР» и размещённый на сайте компании';
            $voprosvar[$numvopros][2]='Вариант договора рекомендованный иными туроператорами';
            $voprosvar[$numvopros][3]='Вариант договора разработанный самостоятельно';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=28;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с положительной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=29;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с отрицательной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
        $numvopros=30;
        $vopros[$numvopros]='Как в целом Вы оцениваете работу компании «МУЛЬТИТУР» в сезоне 2010 г.?';
            $voprosvar[$numvopros][1]='Отлично';
            $voprosvar[$numvopros][2]='Хорошо';
            $voprosvar[$numvopros][3]='Удовлетворительно';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
        $numvopros=31;
        $vopros[$numvopros]='Если у Вас есть какие пожелания, вопросы или замечания укажите их: ';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'textarea','value'=>'','size'=>'70');
            
        $res=array();
        $res['vopros']=$vopros;
        $res['voprosvar']=$voprosvar;
        $res['voprosvarother']=$voprosvarother;
        $res['voprosvartype']=$voprosvartype;
        return $res;
    }    
    public function anketaAction() {
        session_start();
        $this->setCfgLayout('base');
        $res=$this->anketaform();
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
        else $posttemp=array();
        $this->view->posttemp=$posttemp;
        $this->view->data=array();
    }
    public function anketasendAction() {
        $this->setCfgLayout('base');
        $res=$this->anketaform();
        $vopros=$res['vopros'];
        $voprosvar=$res['voprosvar'];
        $voprosvarother=$res['voprosvarother'];
        $voprosvartype=$res['voprosvartype'];
        
        session_start();
        if ($_SERVER['REQUEST_METHOD']=='POST' && false) {
            $_SESSION['posttemp']['error']=array();
            $_SESSION['posttemp']['errorex']=array();
            $valid=true;
            if (isset($_POST['company'])) {
                $company=htmlspecialchars(strip_tags(trim(substr($_POST['company'],0,1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                if (strlen($company)>0)
                    $_SESSION['posttemp']['company']=$company;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['company']=$company;
                    $_SESSION['posttemp']['errorex']['company']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['company']=1;
            }
            if (isset($_POST['cityname'])) {
                $cityname=htmlspecialchars(strip_tags(trim(substr($_POST['cityname'],0,1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                
                if (strlen($cityname)>0)
                    $_SESSION['posttemp']['cityname']=$cityname;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['cityname']=$cityname;
                    $_SESSION['posttemp']['errorex']['cityname']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['cityname']=1;
            }
            if (isset($_POST['fio'])) {
                $fio=htmlspecialchars(strip_tags(trim(substr($_POST['fio'],0,1024))),ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8');
                if (strlen($fio)>0)
                    $_SESSION['posttemp']['fio']=$fio;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['fio']=$fio;
                    $_SESSION['posttemp']['errorex']['fio']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['fio']=1;
            }
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,1024))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='radio') {
                                if (isset($_POST['vopros_'.$numvopros])) {
                                    $value=(int)$_POST['vopros_'.$numvopros];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,4048))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $checkbox1=array();  //Существующие chekbox
            $checkbox2=array();  //Заполненные checkbox
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } 
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            }                         
                        }
                    }
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (!isset($checkbox1[$numvopros])) $checkbox1[$numvopros]=1;
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    if (!isset($checkbox2[$numvopros][$numvar])) $checkbox2[$numvopros][$numvar]=1;
                                    
                                }
                            }
                        }
                    }
                }
            }
            foreach ($checkbox1 as $numvopros=>$row) {
                if (!isset($checkbox2[$numvopros])) {
                    if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                        $_SESSION['posttemp']['error'][$numvopros]=1;
                }
            }
//            zend_debug::dump($_GET);
//            zend_debug::dump($_POST);
            //if (isset($_POST['step2'])) {
            
                $galkavalid=false;
                $kolvoerr=0;
                if (isset($_SESSION['posttemp']['error'])) {
                    //echo 'count($_SESSION[ ='.$_SESSION['posttemp']['error'];
                    //exit;
                    if (count($_SESSION['posttemp']['error'])<26) $galkavalid=true;
                } else $galkavalid=true;
                if (isset($_SESSION['posttemp']['errorex']) ) {
                    if (count($_SESSION['posttemp']['errorex'])>0) $galkavalid=false;
                }
                if ($galkavalid && isset($_SESSION['posttemp']['error'])) {
                    $valid=true;
//                    echo 'Второй шаг = '.count($_SESSION['posttemp']['error']);
                }
            //}
            if (!$valid) {
                if (!headers_sent()) {
                    header('Location: /anketa/');
                    exit;
                }
            } else {
                $ip=$_SERVER['REMOTE_ADDR'];
                //$fieldvalue=$_POST;
                $fieldvalue=array();
                foreach ($_POST as $key=>$row) {
                    $fieldvalue[$key]=htmlspecialchars(strip_tags(trim(substr($row,0,4096))));
                }
                $senddb=serialize($fieldvalue);
                $senddb=addslashes($senddb);
                $timestamp=time();
//                echo 'Отправляем письмо';
                
                $datasend=date("d.m.Y, H:i:s");
                $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
                $send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                    <tr><th colspan="2">Анкета для агентств 2011</th></tr>
                ';         
                if (isset($fieldvalue['company']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Название вашей компании:</b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['company']).'</td></tr>';
                if (isset($fieldvalue['cityname']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Город: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['cityname']).'</td></tr>';
                if (isset($fieldvalue['fio']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Контактное лицо: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['fio']).'</td></tr>';
                        
                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Количество отвеченных вопросов: </b></td>'.
                    '<td>&nbsp;&nbsp;&nbsp;'.(26-count($_SESSION['posttemp']['error'])).'</td></tr>';
////////////////////////////////                        
//                zend_debug::dump($fieldvalue);
                        
                foreach ($vopros as $numvopros=>$textvopros) {
                    $send.='<tr><td width="49%">
                        <b>'.$numvopros.'. '.$textvopros.'</b></td><td>';
                    if (isset($voprosvar[$numvopros])) {
                        foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                            if (isset($voprosvartype[$numvopros][$numvar])) {
                                if (strpos($textvar,'%%inputother%%')!==false) {
                                    if (isset($voprosvarother[$numvopros][$numvar])) {
                                        $inputother='';
            //                            $inputother='<input name="vopros_'.$numvopros.'_'.$numvar.'_other" value="';
                                        
                                        if (isset($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                            if ($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']=='')
                                                $inputother='<u>не указано</u>';
                                            else 
                                                $inputother='<u>'.stripslashes($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']).'</u>';
                                        } 
                                        
                                        
                                        // if (isset($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']))
                                            // $inputother.=stripslashes($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']);
                                        // else 
                                            // $inputother.=$voprosvarother[$numvopros][$numvar]['value'];
                                            
                                        
                                        // $inputother.='" type="'.
                                            // $voprosvarother[$numvopros][$numvar]['type'].'" size="'.$voprosvarother[$numvopros][$numvar]['size'].'">';
                                        $textvar=str_replace('%%inputother%%',$inputother,$textvar);
                                    }
                                }
                                if ($voprosvartype[$numvopros][$numvar]['type']=='radio') $fieldname='vopros_'.$numvopros;
                                else $fieldname='vopros_'.$numvopros.'_'.$numvar;
                                
                                if ($voprosvartype[$numvopros][$numvar]['type']=='text') $size=' size="'.$voprosvartype[$numvopros][$numvar]['size'].'"';
                                else $size='';
                                $prefixid='';
                                $validate='';
                                if ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                    if (isset($fieldvalue[$fieldname]))
                                        if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                        else $send.='<u>не указано</u>';
                                    // $send.='<textarea name="'.$fieldname.'" style="width: 500px; height: 200px;">';
                                    // if (isset($this->posttemp[$fieldname])) $send.=stripslashes($this->posttemp[$fieldname]);
                                    // else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                    // $send.='</textarea><br/>'."\r\n";
                                }
                                else {
                                    if ($voprosvartype[$numvopros][$numvar]['type']!='text') {
                                        $send.='<input '.$validate.'name="'.$fieldname.'" value="';
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                $send.=stripslashes($fieldvalue[$fieldname]);
                //                                $send.=stripslashes($this->posttemp[$fieldname]);
                                            }
                                        } else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                        $send.='" type="'.$voprosvartype[$numvopros][$numvar]['type'].'"'.$size.$prefixid;
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='radio' 
                                            || $voprosvartype[$numvopros][$numvar]['type']=='checkbox') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                if ($fieldvalue[$fieldname]==$numvar) {
                                                    $send.=' checked="checked"';
                                                } else {
                                                    $send.=' disabled';
                                                }
                                            } else {
                                                $send.=' disabled';
                                            }
                                        }
                                        $send.='> '.$textvar.'<br/>'."\r\n";
                                    } else {
              //                          echo '$fieldname = '.$fieldname.'<br>';
                                        if (isset($fieldvalue[$fieldname])) {
                                            $fieldvalue[$fieldname]=trim($fieldvalue[$fieldname]);
            //                                echo 'strlen($fieldvalue[$fieldname]) = '.strlen($fieldvalue[$fieldname]).'<br>';
                                            if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                            else $send.='<i>Не заполнено</i>&nbsp;';
                                        } else $send.='<i>Не заполнено</i>&nbsp;';
                                    }
                                }
                            }
                        }
                    }
                    $send.=' </td></tr>';
                }                        
                        
                        
/////////////////////////////                        
                        
//                <tr><th>Тип</th><th>Поле</th></tr>
                
//                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>'.$fieldtype[$key1].'</b></td>';
//                $send.='<td>&nbsp;&nbsp;&nbsp;'.$val.'</td><td>&nbsp;&nbsp;&nbsp;'.$post[$key2].'</td></tr>';

                
                $send.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>';
                
                $send.='</table>';
                
//                echo $send;
//                exit;
                
                function utf8_to_cp12511($str) {
                    $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                    return $encoded_data;
                }        
                $send=utf8_to_cp12511($send);
        
                // $emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='agent@multitour.ru';
                $emaillist[]='semenov@multitour.ru';
                $emailfrom='noreply@multitour.ru';
                $subject=utf8_to_cp12511('Анкета для агентств');
                
                
      // $mail = new Zend_Mail();
      // $mail->setBodyText('This is the text of the mail.');
      // $mail->setFrom('noreply@multitour.ru', 'Some Sender');
      // $mail->addTo('elkin@multitour.ru', 'Some Recipient');
      // $mail->setSubject($subject);
      // $mail->send();                
//        echo 'Сообщение отправлено ';
                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        $headers="From: \"".utf8_to_cp12511('Анкета для агентств')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                        $headers.="Content-Type: text/html; charset=windows-1251\n";
                        $headers.="Content-Transfer-Encoding: 8bit";
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subject,$send,$headers);
                        if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                        } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        }
                    }
                }
                
                $othermodel=$this->getModel('Other');
                $othermodel->sendanketa($senddb,$timestamp,$ip);
                session_destroy();
          
                if (!headers_sent()) {
                    header('Location: /anketasend/');
                    exit;
                }
            }
            exit;
        } else {
            session_destroy();
        }
    }
    public function anketaresultAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
//        session_start();
//        $this->setCfgLayout('base');
        $res=$this->anketaform();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketares();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
        
//        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
//        else $posttemp=array();
//        $this->view->posttemp=$posttemp;
//        $this->view->data=array();
    }
    public function anketaresult2010Action() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
//        session_start();
//        $this->setCfgLayout('base');
        $res=$this->anketaform2010();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketares2010();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
        
//        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
//        else $posttemp=array();
//        $this->view->posttemp=$posttemp;
//        $this->view->data=array();
    }    
    public function anketaformwebinar() {
        $numvopros=1;
        $vopros[$numvopros]='На какие темы Вам было бы интересно прослушать вебинары осенью и зимой 2011-2012?';
            $voprosvar[$numvopros][1]='Новогодние туры: <br>
- Подмосковье и Средняя полоса; <br>
- Экскурсионные туры; <br>
- Беларусь. ';
            $voprosvar[$numvopros][2]='Прибалтика, в т.ч. туры на Новый год.';
            $voprosvar[$numvopros][3]='Беларусь.';
            $voprosvar[$numvopros][4]='Подмосковье и Средняя полоса России.';
            $voprosvar[$numvopros][5]='Экскурсионные туры по России (Карелия, Золотое кольцо, Санкт-Петербург, Москва и др.)';
            $voprosvar[$numvopros][6]='Кавказские Минеральные Воды.';
            $voprosvar[$numvopros][7]='Лечение на Украине.';
            $voprosvar[$numvopros][8]='Экскурсионные туры Киев.';
            $voprosvar[$numvopros][9]='Другие направления (укажите какие) %%inputother%% ';
            
                $voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=9; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

            
        $res=array();
        $res['vopros']=$vopros;
        $res['voprosvar']=$voprosvar;
        $res['voprosvarother']=$voprosvarother;
        $res['voprosvartype']=$voprosvartype;
        return $res;
    }
   
    public function anketawebinarAction() {
        session_start();
        $this->setCfgLayout('base');
        $res=$this->anketaformwebinar();
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
        else $posttemp=array();
        $this->view->posttemp=$posttemp;
        $this->view->data=array();
    }
    public function anketasendwebinarAction() {
        $this->setCfgLayout('base');
        $res=$this->anketaformwebinar();
        $vopros=$res['vopros'];
        $voprosvar=$res['voprosvar'];
        $voprosvarother=$res['voprosvarother'];
        $voprosvartype=$res['voprosvartype'];
        
        session_start();
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $_SESSION['posttemp']['error']=array();
            $_SESSION['posttemp']['errorex']=array();
            $valid=true;
            if (isset($_POST['company'])) {
                $company=htmlspecialchars(strip_tags(trim(substr($_POST['company'],0,1024))));
                if (strlen($company)>0)
                    $_SESSION['posttemp']['company']=$company;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['company']=$company;
                    $_SESSION['posttemp']['errorex']['company']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['company']=1;
            }
            if (isset($_POST['cityname'])) {
                $cityname=htmlspecialchars(strip_tags(trim(substr($_POST['cityname'],0,1024))));
                
                if (strlen($cityname)>0)
                    $_SESSION['posttemp']['cityname']=$cityname;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['cityname']=$cityname;
                    $_SESSION['posttemp']['errorex']['cityname']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['cityname']=1;
            }
            if (isset($_POST['fio'])) {
                $fio=htmlspecialchars(strip_tags(trim(substr($_POST['fio'],0,1024))));
                if (strlen($fio)>0)
                    $_SESSION['posttemp']['fio']=$fio;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['fio']=$fio;
                    $_SESSION['posttemp']['errorex']['fio']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['fio']=1;
            }
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,1024))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='radio') {
                                if (isset($_POST['vopros_'.$numvopros])) {
                                    $value=(int)$_POST['vopros_'.$numvopros];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,4048))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $checkbox1=array();  //Существующие chekbox
            $checkbox2=array();  //Заполненные checkbox
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } 
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            }                         
                        }
                    }
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (!isset($checkbox1[$numvopros])) $checkbox1[$numvopros]=1;
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    if (!isset($checkbox2[$numvopros][$numvar])) $checkbox2[$numvopros][$numvar]=1;
                                    
                                }
                            }
                        }
                    }
                }
            }
            foreach ($checkbox1 as $numvopros=>$row) {
                if (!isset($checkbox2[$numvopros])) {
                    if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                        $_SESSION['posttemp']['error'][$numvopros]=1;
                }
            }
//            zend_debug::dump($_GET);
//            zend_debug::dump($_POST);
            //if (isset($_POST['step2'])) {
            
                $galkavalid=false;
                $kolvoerr=0;
                if (isset($_SESSION['posttemp']['error'])) {
                    //echo 'count($_SESSION[ ='.$_SESSION['posttemp']['error'];
                    //exit;
                    if (count($_SESSION['posttemp']['error'])<26) $galkavalid=true;
                } else $galkavalid=true;
                if (isset($_SESSION['posttemp']['errorex']) ) {
                    if (count($_SESSION['posttemp']['errorex'])>0) $galkavalid=false;
                }
                if ($galkavalid && isset($_SESSION['posttemp']['error'])) {
                    $valid=true;
//                    echo 'Второй шаг = '.count($_SESSION['posttemp']['error']);
                }
            //}
            if (!$valid) {
                if (!headers_sent()) {
                    header('Location: /anketawebinar/');
                    exit;
                }
            } else {
                $ip=$_SERVER['REMOTE_ADDR'];
                //$fieldvalue=$_POST;
                $fieldvalue=array();
                foreach ($_POST as $key=>$row) {
                    $fieldvalue[$key]=htmlspecialchars(strip_tags(trim(substr($row,0,4096))));
                }
                $senddb=serialize($fieldvalue);
                $senddb=addslashes($senddb);
                $timestamp=time();
//                echo 'Отправляем письмо';
                
                $datasend=date("d.m.Y, H:i:s");
                $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
                $send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                    <tr><th colspan="2">Анкета для агентств по вебинарам 2011</th></tr>
                ';         
                if (isset($fieldvalue['company']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Название вашей компании:</b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['company']).'</td></tr>';
                if (isset($fieldvalue['cityname']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Город: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['cityname']).'</td></tr>';
                if (isset($fieldvalue['fio']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Контактное лицо: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['fio']).'</td></tr>';
                        
                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Количество отвеченных вопросов: </b></td>'.
                    '<td>&nbsp;&nbsp;&nbsp;'.(1-count($_SESSION['posttemp']['error'])).'</td></tr>';
////////////////////////////////                        
//                zend_debug::dump($fieldvalue);
                        
                foreach ($vopros as $numvopros=>$textvopros) {
                    $send.='<tr><td width="49%">
                        <b>'.$numvopros.'. '.$textvopros.'</b></td><td>';
                    if (isset($voprosvar[$numvopros])) {
                        foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                            if (isset($voprosvartype[$numvopros][$numvar])) {
                                if (strpos($textvar,'%%inputother%%')!==false) {
                                    if (isset($voprosvarother[$numvopros][$numvar])) {
                                        $inputother='';
            //                            $inputother='<input name="vopros_'.$numvopros.'_'.$numvar.'_other" value="';
                                        
                                        if (isset($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                            if ($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']=='')
                                                $inputother='<u>не указано</u>';
                                            else 
                                                $inputother='<u>'.stripslashes($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']).'</u>';
                                        } 
                                        
                                        
                                        // if (isset($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']))
                                            // $inputother.=stripslashes($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']);
                                        // else 
                                            // $inputother.=$voprosvarother[$numvopros][$numvar]['value'];
                                            
                                        
                                        // $inputother.='" type="'.
                                            // $voprosvarother[$numvopros][$numvar]['type'].'" size="'.$voprosvarother[$numvopros][$numvar]['size'].'">';
                                        $textvar=str_replace('%%inputother%%',$inputother,$textvar);
                                    }
                                }
                                if ($voprosvartype[$numvopros][$numvar]['type']=='radio') $fieldname='vopros_'.$numvopros;
                                else $fieldname='vopros_'.$numvopros.'_'.$numvar;
                                
                                if ($voprosvartype[$numvopros][$numvar]['type']=='text') $size=' size="'.$voprosvartype[$numvopros][$numvar]['size'].'"';
                                else $size='';
                                $prefixid='';
                                $validate='';
                                if ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                    if (isset($fieldvalue[$fieldname]))
                                        if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                        else $send.='<u>не указано</u>';
                                    // $send.='<textarea name="'.$fieldname.'" style="width: 500px; height: 200px;">';
                                    // if (isset($this->posttemp[$fieldname])) $send.=stripslashes($this->posttemp[$fieldname]);
                                    // else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                    // $send.='</textarea><br/>'."\r\n";
                                }
                                else {
                                    if ($voprosvartype[$numvopros][$numvar]['type']!='text') {
                                        $send.='<input '.$validate.'name="'.$fieldname.'" value="';
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                $send.=stripslashes($fieldvalue[$fieldname]);
                //                                $send.=stripslashes($this->posttemp[$fieldname]);
                                            }
                                        } else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                        $send.='" type="'.$voprosvartype[$numvopros][$numvar]['type'].'"'.$size.$prefixid;
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='radio' 
                                            || $voprosvartype[$numvopros][$numvar]['type']=='checkbox') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                if ($fieldvalue[$fieldname]==$numvar) {
                                                    $send.=' checked="checked"';
                                                } else {
                                                    $send.=' disabled';
                                                }
                                            } else {
                                                $send.=' disabled';
                                            }
                                        }
                                        $send.='> '.$textvar.'<br/>'."\r\n";
                                    } else {
              //                          echo '$fieldname = '.$fieldname.'<br>';
                                        if (isset($fieldvalue[$fieldname])) {
                                            $fieldvalue[$fieldname]=trim($fieldvalue[$fieldname]);
            //                                echo 'strlen($fieldvalue[$fieldname]) = '.strlen($fieldvalue[$fieldname]).'<br>';
                                            if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                            else $send.='<i>Не заполнено</i>&nbsp;';
                                        } else $send.='<i>Не заполнено</i>&nbsp;';
                                    }
                                }
                            }
                        }
                    }
                    $send.=' </td></tr>';
                }                        
                        
                        
/////////////////////////////                        
                        
//                <tr><th>Тип</th><th>Поле</th></tr>
                
//                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>'.$fieldtype[$key1].'</b></td>';
//                $send.='<td>&nbsp;&nbsp;&nbsp;'.$val.'</td><td>&nbsp;&nbsp;&nbsp;'.$post[$key2].'</td></tr>';

                
                $send.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>';
                $send.='</table>';
                
//                echo $send;
//                exit;
                
                function utf8_to_cp12511($str) {
                    $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                    return $encoded_data;
                }        
                $send=utf8_to_cp12511($send);
        
                $emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='agent@multitour.ru';
                $emaillist[]='semenov@multitour.ru';
                $emailfrom='noreply@multitour.ru';
                $subject=utf8_to_cp12511('Анкета для агентств по вебинарам');
                
                
      // $mail = new Zend_Mail();
      // $mail->setBodyText('This is the text of the mail.');
      // $mail->setFrom('noreply@multitour.ru', 'Some Sender');
      // $mail->addTo('elkin@multitour.ru', 'Some Recipient');
      // $mail->setSubject($subject);
      // $mail->send();                
//        echo 'Сообщение отправлено ';
                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        $headers="From: \"".utf8_to_cp12511('Анкета для агентств')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                        $headers.="Content-Type: text/html; charset=windows-1251\n";
                        $headers.="Content-Transfer-Encoding: 8bit";
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subject,$send,$headers);
                        if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                        } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        }
                    }
                }
                
                $othermodel=$this->getModel('Other');
                $othermodel->sendanketawebinar($senddb,$timestamp,$ip);
                session_destroy();
          
                if (!headers_sent()) {
                    header('Location: /anketasendwebinar/');
                    exit;
                }
            }
            exit;
        } else {
            session_destroy();
        }
    }
    public function anketaresultwebinarAction() 
    {
//        session_start();
//        $this->setCfgLayout('base');
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $res=$this->anketaformwebinar();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketareswebinar();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
        
//        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
//        else $posttemp=array();
//        $this->view->posttemp=$posttemp;
//        $this->view->data=array();
    }
    public function menucuratorAction() 
    {
        // $this->setCfgLayout('page');
        if (!isset($_SESSION)) {
            session_start();
        }
        $authbool=true;
        if (!isset($_SESSION['s_uskey'])) {
            return $this->clear();
        }

        
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        if (!$uskey) {
            // return $this->error(404);
            return '';
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            // return $this->error(404);                
            return '';                
            exit;
        }
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=(int)$this->view->userinfo['US_ID'];
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);    
        if (isset($this->view->agentinfo['PR_OWNER'])) {
            $owner=$this->view->agentinfo['PR_OWNER'];
        } else {
            $owner=0;
        }
        $curatorsmodel = $this->getModel('Curators');
        //$curatortext=$curatorsmodel->getcuratortext($owner);
        $curatorlist=$curatorsmodel->getcuratorlistbyowner($owner);
        // if ($curatortext) {
            // if (isset($curatortext['text'])) {
                // $htmltext=$curatortext['text'];
            // } else {
                // $htmltext='';
            // }
        // } else {
            // $htmltext='';
        // }
        // echo '$owner = '.$owner.'<br>';
        // zend_debug::dump($htmltext);
        $this->view->curatorlist=$curatorlist;
        // $this->view->htmltext=$htmltext;
        // exit;
    }
	public function menucuratornewAction() 
    {
        // $this->setCfgLayout('page');
        if (!isset($_SESSION)) {
            session_start();
        }
        $authbool=true;
        if (!isset($_SESSION['s_uskey'])) {
            return $this->clear();
        }

        $this->view->curatortitle = (string)$this->_getParam('curatortitle', 'Личный кабинет');
        $this->view->show_question = (int)$this->_getParam('show_question', 1);
        //if($this->view->curatortitle=='&nbsp'){ echo $this->view->show_question ;exit;};
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        if (!$uskey) {
            // return $this->error(404);
            return '';
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        //$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        //Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            // return $this->error(404);                
            return '';                
            exit;
        }
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // zend_debug::dump($this->view->userinfo); exit;
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);    
        if (isset($this->view->agentinfo['PR_OWNER'])) {
            $owner=$this->view->agentinfo['PR_OWNER'];
        } else {
            $owner=0;
        }
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
        $curatorsmodel = $this->getModel('Curators');
        //$curatortext=$curatorsmodel->getcuratortext($owner);
        //if($owner) $this->view->curatorlistmsk=$curatorsmodel->getcuratorlistbyownerreg($owner,0);
        
		$this->view->curatorlistmsk=$curatorsmodel->getcuratorlistbyownerreg($owner,0);//zend_debug::dump($this->view->agentinfo);exit;
        $this->view->curatorlistreg=$curatorsmodel->getcuratorlistbyownerreg($owner,1);
		
        //if($owner) $this->view->curatorlistreg=$curatorsmodel->getcuratorlistbyownerreg($owner,1);
        if($owner) $curatorlist=$curatorsmodel->getcuratorlistbyowner($owner);
        else $curatorlist=array();
        // if ($curatortext) {
            // if (isset($curatortext['text'])) {
                // $htmltext=$curatortext['text'];
            // } else {
                // $htmltext='';
            // }
        // } else {
            // $htmltext='';
        // }
        // echo '$owner = '.$owner.'<br>';
        // zend_debug::dump($htmltext);
        $this->view->curatorlist=$curatorlist;
		if (Zend_Registry::isRegistered('page_actives')) {
            $page_actives = Zend_Registry::get('page_actives');
        } else {
            $page_actives = Array();
        }
		$this->view->page_actives = $page_actives;
        $this->view->params = $this->_getAllParams();
        // $this->view->htmltext=$htmltext;
        // exit;
    }
    public function menuagentprofileAction() 
    {
        // $this->setCfgLayout('page');
        if (!isset($_SESSION)) {
            session_start();
        }
		
        $authbool=true;
        if (!isset($_SESSION['s_uskey'])) {
            return $this->clear();
        }

        
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        if (!$uskey) {
            // return $this->error(404);
            return '';
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');   
      
		$page_actives =  ((Zend_Registry::isRegistered('page_actives'))?Zend_Registry::get('page_actives'):array(36 =>'36', 4=>'4', 0=>'0'));	  
		Zend_Registry::set('page_actives', $page_actives);
		
		
		
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            // return $this->error(404);                
            return '';                
            exit;
        }
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=(int)$this->view->userinfo['US_ID'];
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);    
        if (isset($this->view->agentinfo['PR_OWNER'])) {
            $owner=$this->view->agentinfo['PR_OWNER'];
        } else {
            $owner=0;
        }
        $pgkey=(int)$this->view->agentinfo['PR_PGKEY'];
        $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        // $this->view->htmltext=$htmltext;
        // exit;
    }
  
   public function cancellationAction() 
    {
		$this->setCfgLayout('empty');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $dgcode =(string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
		$usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        // if ($boss===0) $type=0;                 
		$arr = $this->getModel('Privateoffice')->getArrayDL($dgcode);
		if ($arr)
			$stop_sale = $this->getModel('Privateoffice')->checkqoutes1($arr['hotelcode'],$arr['rmkey'],$arr['rckey'],$arr['dlsnkey'],$arr['dlctkey'],$arr['dateBegin'],$arr['dateEnd']);
        //$vaucher=(int)$this->_getParam('vaucher',0);
        //if ($vaucher!=1 && $vaucher!=0) $vaucher=0;
        //echo '$vaucher = '.$vaucher.'<br>';
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
		
        $privateofficemodel=$this->getModel('Privateoffice');

        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
     
        if ($usertype=='admin' && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
            $usid=(string)$this->view->userinfo['US_ID'];
            $usfullname=(string)$this->view->userinfo['US_FULLNAME'];
            $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
            
            
            $prfullname=$this->view->agentinfo['PR_FULLNAME'];
            
            $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			
           
        } else {
            $usid='admin';
            $usfullname='-';
            $prfullname='-';
        }
        // if (!$this->view->agentinfo) {
            // return $this->error(404);                
            // exit;
        // }
        //$pgkey=(int)$this->view->agentinfo['DG_Key'];
		
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
				
            $dgkey=$this->view->dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            $dgowner=(int)$this->view->dogovorinfo['DG_OWNER'];
            $tlopkey=$this->view->dogovorinfo['TL_OpKey'];
            
			
			$masteruser=$privateofficemodel->getmasteruser($tlopkey);

			$status=(int)$_SESSION['s_status'];
            // echo '$dupuserkey = '.$dupuserkey.'<br>';
            // echo '$boss = '.$boss.'<br>';
            // // zend_debug::dump($_SESSION);
            // echo '$status = '.$status.'<br>';
            // echo '$uskey = '.$uskey.'<br>';
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
           


		   if ($usertype!='admin') {
				if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
				
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
          
            $this->view->dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
            
            
            // if (is_array($this->view->dogovorlist)) {
                // foreach ($this->view->dogovorlist as $key=>$row) {
                    // $dlkey=$row['DL_KEY'];
                    // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                    // $this->view->dogovorlist[$key]['turistlist']=$turistlist;
                // }
            // }
            // zend_debug::dump($this->view->dogovorlist);
            // exit;
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
        } else {
            return $this->error(404);                
            exit;
        }        
        //$privateofficemodel->cancellation($dgcode,$usid);
        $timestamp=time();
        $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
        $params=array();
        $params['usidfrom']=$usid;
        $params['usidto']='admin';
        $params['ip']=$ip_int;
        $params['time']=$timestamp;
        $params['status']=1;
        $params['idmess_parent']=0;
        $params['subject']="Запрос на аннуляцию заявки №".$dgcode;
        $params['subject_eng']='dogovorrequest';
        $params['numb']=$dgcode;
        $params['message']='Агентством отправлен запрос на аннуляцию заявки';
        $params['remark']='';
        $params['messtype']='MTM';
		
		$params['userid_master']=0;
			
		$masteruser=$privateofficemodel->getmasteruser($tlopkey);
		 
		if(isset($masteruser['US_KEY'])){
			$params['userid_master']=$masteruser['US_KEY'];
		}
		
        $privateofficemodel->addmess($params);

        if (isset($masteruser['US_MAILBOX'])) {
            $masteruseremail=$masteruser['US_MAILBOX'];
            // zend_debug::dump($masteruser);
            //print_r($masteruseremail); exit;
			
			$fiomaster=$masteruser['US_NAME'];
            if (strlen($masteruser['US_FNAME'])) {
                $fiomaster.=' '.$masteruser['US_FNAME'];
            }
            if (strlen($masteruser['US_SNAME'])) {
                $fiomaster.=' '.$masteruser['US_SNAME'];
            }
        } else {
            $masteruseremail='';
            $fiomaster='';
        }
        if ($masteruseremail) {
            
        }   
	
        // //Формируем сообщение для отправки на емайл
        $datasend=date("d.m.Y, H:i:s");
        $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
        $ip=$_SERVER['REMOTE_ADDR'];
        
        $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
            <tr><th colspan="2">Агентством отправлен запрос на аннуляцию заявки '.$dgcode.'</th></tr>'."\r\n";
        
		$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Номер путевки:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;'.( ($stop_sale) ? "<span style='color:red;font-weight:bold'> ".$dgcode." - ЗАЯВКА НА STOP-SALE <span>" : $dgcode ).'</td></tr>'."\r\n";
        
		$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Логин:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;'.$usid.'</td></tr>'."\r\n";
        $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>ФИО менеджера отправившего заявку на аннуляцию:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
        $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное название агентства:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;'.$prfullname.'</td></tr>'."\r\n";
        $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Ведущий менеджер:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;'.$fiomaster.'</td></tr>'."\r\n";
        $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail ведущего менеджера:</b></td>'.
               '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$masteruseremail.'">'.$masteruseremail.'</a></td></tr>'."\r\n";
        $sendhtml.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>'."\r\n";
        $sendhtml.='</table>';
        // echo $sendhtml.'<br>';
        // exit;
        $emailfrom='noreply@multitour.ru';
        
        // $agentinfo=$privateofficemodel->getagentinfo($prkey);
        // if($agentinfo['PR_OWNER']) {
            // $curatorsmodel=$this->getModel('Curators');
            // $curator=$curatorsmodel->getcurator($agentinfo['PR_OWNER']);
            // if ($curator) $emaillist[]=$curator['US_MAILBOX'];
        // }
        // if($subject_title=="complaint") $emaillist[]='post@multitour.ru';
        $emaillist[]='elkin@multitour.ru';
        // $emaillist[]='noreply@multitour.ru';
        $emaillist[]='semenov@multitour.ru';
        // $emaillist[]='podlevskikh@multitour.ru';
        $emaillist[]=$masteruseremail;
        
        
        $subjectmail='Запрос на аннуляцию заявки '.$dgcode;
        $subjectmail=$this->utf8_to_cp1251($subjectmail);
        function utf8_to_cp12511($str) {
            $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
            return $encoded_data;
        }        
        $sendhtml=$this->utf8_to_cp1251($sendhtml);
        // // echo 'Отправляем сообщение<br>';
        // // echo '$subject = '.$subject.'<br>';
        // // echo '$message = '.$message.'<br>';

        if ($emaillist!=null) {
             // zend_debug::dump($emaillist);
             // exit;
            for ($i=0;$i<count($emaillist);$i++) {
				$headers="From: \"".$this->utf8_to_cp1251('Запрос на аннуляцию заявки ')."\" <".$emailfrom.">\n";
//              $headers.="X-Sender: <".$$emailfrom.">\n";
                $headers.="Content-Type: text/html; charset=windows-1251\n";
                $headers.="Content-Transfer-Encoding: 8bit";
                if ($emaillist[$i]!=''){ 
					
					$se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
					
				}	
                if (!$se) {
                        echo "При отправке сообщения возникла ошибка";
                        exit;
                } else {
                        // echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                }
            }
        }
        
    }
    public function confirmcancellationAction() 
    {
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $dgcode = (string)$this->_getParam('code','');
		
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        // if ($boss===0) $type=0;
                  

                  
        //$vaucher=(int)$this->_getParam('vaucher',0);
        //if ($vaucher!=1 && $vaucher!=0) $vaucher=0;
        //echo '$vaucher = '.$vaucher.'<br>';
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');

        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        ///        
        if ($usertype=='admin' && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
            $usid=(string)$this->view->userinfo['US_ID'];
            $usfullname=(string)$this->view->userinfo['US_FULLNAME'];
            $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
            
            
            $prfullname=$this->view->agentinfo['PR_FULLNAME'];
            
            $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
            
        } else {
            $usid='admin';
            $usfullname='-';
            $prfullname='-';
        }
        // if (!$this->view->agentinfo) {
            // return $this->error(404);                
            // exit;
        // }
        //$pgkey=(int)$this->view->agentinfo['DG_Key'];

        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            $dgkey=$this->view->dogovorinfo['DG_Key'];
            $this->view->dgcode=$dgcode;
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            $dgowner=(int)$this->view->dogovorinfo['DG_OWNER'];
            $tlopkey=$this->view->dogovorinfo['TL_OpKey'];
            
            $status=(int)$_SESSION['s_status'];
            // echo '$dupuserkey = '.$dupuserkey.'<br>';
            // echo '$boss = '.$boss.'<br>';
            // // zend_debug::dump($_SESSION);
            // echo '$status = '.$status.'<br>';
            // echo '$uskey = '.$uskey.'<br>';
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            if ($usertype!='admin') {
///            
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
        } else {
            return $this->error(404);                
            exit;
        }
    }
 



  public function webinarlistAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
         
        //$bbb = new BBB_Models_API('bbb', '', '', 'secret', 'secret', '', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
        // zend_debug::dump($bbb->createMeetingAndGetJoinURL('admin', 'Вебинар тестовый1', 'Добро пожаловать в Вебинар', 'mp', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/', 'http://multitour.ru'));
        // zend_debug::dump($bbb->joinURL('Вебинар тестовый1', 'test', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/'));
        //$this->view->meetinglist = $bbb->getMeetingsArray('http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
        $this->view->meetinglist = $privateofficemodel->getwebinarlist(0);
        foreach($this->view->meetinglist as $id=>$meeting)
        {
            //$this->view->meetinglist[$id]['info'] = $bbb->getMeetingInfoArray($meeting['WB_MID'], 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
            $this->view->meetinglist[$id]['lead'] = $privateofficemodel->getwebinarleading($meeting['WB_ID']);
        }
        //zend_debug::dump($bbb->getMeetingInfoArray('Вебинар тестовый1', 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        //zend_debug::dump($bbb->getMeetings('http://195.34.183.202/bigbluebutton/', '76b71974198f26ecc5a594eddddf49d1'));
        
    }
    public function webinarregAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $usertype = $this->getusertypeinsession();
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        //zend_debug::dump($uskey);exit;
        $reg = (int)$this->_getParam('reg', 0);
        $unreg = (int)$this->_getParam('unreg', 0);
        //$meeting = $privateofficemodel->getwebinar($wbid);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        //$bbb = new BBB_Models_API('bbb', '', '', 'secret', 'secret', '', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
        if($reg)
        {
            $param = array();
            $param['uskey'] = $uskey;
            $webinarinfo = $privateofficemodel->getwebinar($reg);
            //$webinfo = $bbb->getMeetingInfoArray($webinarinfo['WB_MID'], 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
            //if(!isset($webinfo['returncode']) || $webinfo['returncode'] != 'FAILED') $param['url'] = $bbb->joinURL($webinarinfo['WB_MID'], (($this->view->userinfo['US_FULLNAME'])?$this->view->userinfo['US_FULLNAME']:$user['US_ID']), 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
            //else $param['url'] = '';
            $param['url'] = '';
            $param['wbid'] = $reg;
            $param['usname'] = $this->view->userinfo['US_FULLNAME'];
            $meeting = $privateofficemodel->getwebinar($reg);
            if($meeting['WB_ID']) $privateofficemodel->regwebinaruser($param);//,$bbb->joinURL($meeting['WB_MID'], $uskey, 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/'));
            // zend_debug::dump($bbb->joinURL($meeting['WB_ID'], $uskey, 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/'));
            // zend_debug::dump($bbb->createMeetingURL($uskey, $meeting['WB_ID'], 'Qwer1234', 'mp', '', 'http://multitest.mt/privateoffice/modalclose/', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/'));exit;
        }
        if($unreg)
        {
            $meeting = $privateofficemodel->getwebinar($unreg);
            if($meeting['WB_ID']) $privateofficemodel->unregwebinaruser($uskey, $unreg);
        }
        $urlredirect = '/privateoffice/webinar?uskey='.$uskey;
        if(($reg || $unreg) && !headers_sent()) {
                header('Location: ' . '/privateoffice/webinar?wbid='.(($reg)?$reg:$unreg).'&uskey='.$uskey);
            }
        // zend_debug::dump($bbb->createMeetingAndGetJoinURL('admin', 'Вебинар тестовый1', 'Добро пожаловать в Вебинар', 'mp', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/', 'http://multitour.ru'));
        // zend_debug::dump($bbb->joinURL('Вебинар тестовый1', 'test', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/'));
        //$this->view->meetinglist = $bbb->getMeetingsArray('http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
        //zend_debug::dump( $bbb->getMeetingsArray('http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        $this->view->meetinglist = $privateofficemodel->getwebinarlist($uskey);
        foreach($this->view->meetinglist as $id=>$meeting)
        {
            //$this->view->meetinglist[$id]['info'] = $bbb->getMeetingInfoArray($meeting['WB_MID'], 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
            $this->view->meetinglist[$id]['datestr'] = date('d', strtotime($meeting['WB_DATE_START'])).' '.$this->getmontxt(date('m',strtotime($meeting['WB_DATE_START']))).' '.date('Y, H:i по Москве',strtotime($meeting['WB_DATE_START']));
        }
        //echo ($this->getuskeyinsession());exit;
		//zend_debug::dump($this->view->meetinglist );
        //zend_debug::dump($bbb->getMeetingInfoArray('Вебинар тестовый1', 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        //zend_debug::dump($bbb->getMeetings('http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        $this->view->uskey = $uskey;
        $this->view->type=0;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype = $usertype;
    }
    public function webinarAction() 
    {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $usertype = $this->getusertypeinsession();
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        //zend_debug::dump($uskey);exit;
        //$meeting = $privateofficemodel->getwebinar($wbid);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        $bbb = new BBB_Models_API('bbb', '', '', 'secret', 'secret', '', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
        $wbid = (int)$this->_getParam('wbid', 0);
        $this->view->meeting = $privateofficemodel->getwebinar($wbid);
        if(!$this->view->meeting)
        {
            return $this->error(404);                
            exit;
        }
        $this->view->meeting['datestr'] = date('d', strtotime($this->view->meeting['WB_DATE_START'])).' '.$this->getmontxt(date('m',strtotime($this->view->meeting['WB_DATE_START']))).' '.date('Y, H:i по Москве',strtotime($this->view->meeting['WB_DATE_START']));
        $this->view->meeting['info'] = $bbb->getMeetingInfoArray($this->view->meeting['WB_MID'], 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
        $this->view->meeting['lead'] = $privateofficemodel->getwebinarleading($wbid);
        $this->view->meeting['isuser'] = $privateofficemodel->iswebinaruser($wbid, $uskey);
		//zend_debug::dump($this->view->meetinglist );
        //zend_debug::dump($bbb->getMeetingInfoArray('Вебинар тестовый1', 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        //zend_debug::dump($bbb->getMeetings('http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846'));
        $this->view->uskey = $uskey;
        $this->view->type=0;
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype = $usertype;
    }
    public function modalcloseAction() 
    {
        $this->setCfgLayout('empty');
    }
    public function webinareditAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $wbid = (int)$this->_getParam('wbid',0);
        $usertype = $this->getusertypeinsession();
        $privateofficemodel=$this->getModel('Privateoffice');
        $bbb = new BBB_Models_API('bbb', '', '', 'secret', 'secret', '', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $webinar=$this->_getParam('webinar', '');//zend_debug::dump($webinar);exit;
            $webinar['annotation']=htmlspecialchars(strip_tags(trim(substr($webinar['annotation'], 0, 3000))));
            $webinar['annotation']=str_replace('\'', ' ', $webinar['annotation']);
            $webinar['name']=htmlspecialchars(strip_tags(trim(substr($webinar['name'], 0, 150))));
            $webinar['name']=str_replace('\'', ' ', $webinar['name']);
            $webinar['name']=str_replace("\n", ' ', $webinar['name']);
            $webinar['name']=str_replace("\r", ' ', $webinar['name']);
            $webinar['datestart']=(string)$webinar['datestart'];
            $webinar['hourstart']=(int)$webinar['hourstart'];
            $webinar['minstart']=(int)$webinar['minstart'];
            if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $webinar['datestart'])) {
                $webinar['datestart'] = '';
            }
            if (strlen($webinar['datestart'])>0) {
		        $datestart_arr = explode('.', $webinar['datestart']);
                if (sizeof($datestart_arr)!=3) $webinar['datestart']='';
                else {
                    $day=(int)$datestart_arr[0];
                    $mon=(int)$datestart_arr[1];
                    $year=(int)$datestart_arr[2];
                    if (!checkdate ($mon, $day, $year)) $crdatefrom = '';
                    else {          
                        $webinar['datestart'] = $year.'.'.$mon.'.'.$day.' '.$webinar['hourstart'].':'.$webinar['minstart'].':00';
                    }
                }
            }
            if(!$wbid) {
                $webinar['wellcome']='';
                //$param['url'] = $bbb->createMeetingAndGetJoinURL('admin', $param['name'], '', 'mp', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/', 'http://multitest.mt/privateoffice/modalclose/');
                $wbid = $privateofficemodel->addwebinar($webinar);
            } else $privateofficemodel->updatewebinar($wbid, $webinar);
            if( isset($webinar['lead'])) 
                foreach($webinar['lead'] as $id=>$lead)
                {
                    //$lead=array();
                    $lead['firstname']=htmlspecialchars(strip_tags(trim(substr($lead['firstname'], 0, 150))));
                    $lead['firstname']=str_replace('\'', ' ', $lead['firstname']);
                    $lead['firstname']=str_replace("\n", ' ', $lead['firstname']);
                    $lead['firstname']=str_replace("\r", ' ', $lead['firstname']);
                    $lead['secondname']=htmlspecialchars(strip_tags(trim(substr($lead['secondname'], 0, 150))));
                    $lead['secondname']=str_replace('\'', ' ', $lead['secondname']);
                    $lead['secondname']=str_replace("\n", ' ', $lead['secondname']);
                    $lead['secondname']=str_replace("\r", ' ', $lead['secondname']);
                    $lead['middlename']=htmlspecialchars(strip_tags(trim(substr($lead['middlename'], 0, 150))));
                    $lead['middlename']=str_replace('\'', ' ', $lead['middlename']);
                    $lead['middlename']=str_replace("\n", ' ', $lead['middlename']);
                    $lead['middlename']=str_replace("\r", ' ', $lead['middlename']);
                    $lead['description']=htmlspecialchars(strip_tags(trim(substr($lead['description'], 0, 150))));
                    $lead['description']=str_replace('\'', ' ', $lead['description']);
                    $lead['photo']=(int)$lead['photo'];
                    $lead['wbid']=(int)$wbid;
                    //zend_debug::dump($lead);exit;
                    if(!(int)$id) $id=$privateofficemodel->addleading($lead);
                    else $privateofficemodel->updateleading($id, $lead);
                    $fileObj = Array(
                        'wlid' => $id,
                    );
                    $privateofficemodel->updateleadingimginfo($lead['photo'], $fileObj);
                }
            $urlredirect = '/privateoffice/webinaredit/?wbid='.$wbid;
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        } 
        $this->view->webinarinfo = $privateofficemodel->getwebinar($wbid);
        $this->view->webinarleading = $privateofficemodel->getwebinarleading($wbid);
        if(is_array($this->view->meeting))
        {
            $this->view->meeting['info'] = $bbb->getMeetingInfoArray($this->view->meeting['WB_MID'], 'mp', 'http://192.168.0.185/bigbluebutton/', 'bcd455c6671b02194f748abffd03a846');
        }
        
    }
    public function imgwebinarleaderAction()
    {
        //zend_debug::dump($_FILES);exit;
        //$this->view->leadinfo = array();
        $wlid = $this->_getParam('wlid', '0');
        $privateofficemodel=$this->getModel('Privateoffice');
        //$this->view->leadinfo = $privateofficemodel->getleadinginfo($wlid);
        if ($_FILES) {
            $this->setNoView();//zend_debug::dump($wlid);exit;
            if (isset($_POST["PHPSESSID"])) {
                session_id($_POST["PHPSESSID"]);
            }
            if (isset($_FILES)) {
                if ($_FILES['Filedata']['error'] == 0) {
                    $uploaddir = 'applications/modules/Turs/views/img/leadImg/';
                    $filename=$_FILES['Filedata']['name'];
                    $fileObj = Array(
                        'name' => $filename,
                        'url' => '',
                        'wlid' => $wlid,
                    );
                    $imgId = $privateofficemodel->addleadingimginfo($fileObj);
                    //$this->view->leadinfo['liid'] = $imgId;
                    $fileNameAr = pathinfo($filename);
                    $newFileName = $imgId.'_'.$this->_helper->Translit->translitNoSpecials($fileNameAr['filename']).'.jpg';
                    
                    $new_file = $uploaddir.$newFileName;
                    
                    
                    //move_uploaded_file($_FILES['Filedata']['tmp_name'], $new_file);
                    //$this->view->leadinfo['url'] = $new_file;
                    
                    require_once 'Phpthumb/ThumbLib.inc.php';
                    $thumb = PhpThumbFactory::create($_FILES['Filedata']['tmp_name']);
                    unlink($_FILES['Filedata']['tmp_name']);
                    $thumb->resize(200, 200);
                    $thumb->save($new_file, 'JPG');

                    $size = getimagesize($new_file);
                    if (!isset($size[0]) || !isset($size[1])){
                        throw new Exception("Не удалось определить размеры изображения!");
                    }

                    $fileObj = Array(
                        'url' => $new_file,
                    );
                    $privateofficemodel->updateleadingimginfo($imgId, $fileObj);
                    chmod($new_file, 0777);
                }
            }
        }
        $this->view->leadinfo = $privateofficemodel->getleadingimginfo($wlid);
    }
    public function webinarcreatelinksAction() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $wbid = (int)$this->_getParam('wbid',0);
        $usertype = $this->getusertypeinsession();
        $privateofficemodel=$this->getModel('Privateoffice');
        $bbb = new BBB_Models_API('bbb', '', '', 'secret', 'secret', '', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
        $this->view->webinarlist = $privateofficemodel->getwebinarlist(0);
        foreach ($this->view->webinarlist as $webinar)
        {
            if(!$webinar['WB_URL'])
            {
                $webinarurl = $bbb->createMeetingAndGetJoinURL('admin', $webinar['WB_MID'], '', 'mp', 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/', 'http://multitest.mt/privateoffice/modalclose/');
                $param = array();
                $param['url'] = $webinarurl;
                $privateofficemodel->updatewebinar($webinar['WB_ID'], $param);
            }
            $this->view->webinaruser = $privateofficemodel->getwebinaruser($webinar['WB_ID']);
            foreach ($this->view->webinaruser as $user)
            {
                if(!$user['WB_URL'])
                {
                    $userurl = $bbb->joinURL($webinar['WB_MID'], (($user['US_NAME'])?$user['US_NAME']:$user['US_ID']), 'Qwer1234', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
                    $param = array();
                    $param['url'] = $userurl;
                    $privateofficemodel->updatewebinaruser($webinar['WB_ID'], $user['US_ID'], $param);
                }
            }
            $this->view->webinarlead = $privateofficemodel->getwebinarleading($webinar['WB_ID']);//zend_debug::dump($this->view->webinarlead);exit;
            foreach ($this->view->webinarlead as $lead)
            {
                if(!$lead['WL_WBURL'])
                {
                    $leadurl = $bbb->joinURL($webinar['WB_MID'], $lead['WL_FIRSTNAME'].' '.$lead['WL_SECONDNAME'], 'mp', 'bcd455c6671b02194f748abffd03a846', 'http://192.168.0.185/bigbluebutton/');
                    $param = array();
                    $param['url'] = $leadurl;
                    $privateofficemodel->updateleading($lead['WL_ID'], $param);
                }
            }
        }
        
    }
	
	/////
	public function agentsreportAction()
	{
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        //$uskey = (int)$this->_getParam('uskey',0);
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        // if ($boss===0) $type=0;
        $legal_id=(int)$this->_getParam('legal_id',0);        

                  
        //$vaucher=(int)$this->_getParam('vaucher',0);
        //if ($vaucher!=1 && $vaucher!=0) $vaucher=0;
        //echo '$vaucher = '.$vaucher.'<br>';
       
        $privateofficemodel=$this->getModel('Privateoffice');

        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
		
	
		$this->view->debug = 0;
		$docs = $this->getModel('Page', 'Pages');
		$data = $docs->getDocs(array("id"=>'1855'));
		$this->view->body        = $data[0]['body'];
		
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        ///        
        if (($usertype=='admin' || $usertype=='meneger' || $usertype=='manager') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		$pd_key = 0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
            $usid=(string)$this->view->userinfo['US_ID'];
            $usfullname=(string)$this->view->userinfo['US_FULLNAME'];
            $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
            
            $prfullname=$this->view->agentinfo['PR_FULLNAME'];
            
            $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);

			if(isset($this->view->anegtdoginfo['PD_Key'])){
				$pd_key = $this->view->anegtdoginfo['PD_Key'];
			}
            
        } else {
            $usid='admin';
            $usfullname='-';
            $prfullname='-';
        }

        // if (!$this->view->agentinfo) {
            // return $this->error(404);                
            // exit;
        // }
        //$pgkey=(int)$this->view->agentinfo['DG_Key'];
		$this->view->legal_id = $legal_id;
		$this->view->is_admin = $allbool;
		$this->view->pd_key = $pd_key;
       
    }
	//
	public function printagentsreportAction()
	{	
		
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status=(int)$_SESSION['s_status'];
        
        $dgcode = '';
        
        $crdatefrom = (string)$this->_getParam('frdate', '');
        $crdateto= (string)$this->_getParam('todate', '');
		$date_type = (string)$this->_getParam('date_type', '');
		$prkey = (string)$this->_getParam('prkey', 0);
		$year_db = (string)$this->_getParam('year', 0);

		$crdatetostamp = '';
		$crdate = FALSE;
		$turdate = FALSE;
		$statusok = 0;
		$statusnotpay = 0;
		$statusnull = 0;
		
		$turdatestamp ='';
		$crdatefromstamp = '';
		$crdatefromutc = '';
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdatefrom)) {
            $crdatefrom = '';
        }
        if (strlen($crdatefrom)>0) {
            $crdatefrom_arr = explode('.', $crdatefrom);
            if (sizeof($crdatefrom_arr)!=3) $crdatefrom='';
            else {
                $day=(int)$crdatefrom_arr[0];
                $mon=(int)$crdatefrom_arr[1];
                $year=(int)$crdatefrom_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdatefromstamp = '';
                else {
                    $timestamp = mktime(0, 0, 0, $mon, $day, $year);
					$crdatefromutc = $timestamp;
                    $crdatefromstamp = date('Y-m-d H:i:s', $timestamp);
                }
            }
        }          
		
		$crdatetoutc =  '';
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdateto)) {
            $crdateto = '';
        }
        if (strlen($crdateto)>0) {
            $crdateto_arr = explode('.', $crdateto);
            if (sizeof($crdateto_arr)!=3) $crdateto='';
            else {
                $day=(int)$crdateto_arr[0];
                $mon=(int)$crdateto_arr[1];
                $year=(int)$crdateto_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdatetostamp = '';
                else {
                    $crdatetoutc = mktime(0, 0, 0, $mon, $day, $year);
					$timestamp = mktime(0, 0, 0, $mon, $day +1, $year);
                    $crdatetostamp = date('Y-m-d H:i:s', $timestamp);
                }
            }
        }          
		
      
        $turname = '';
        
        $turistname = '';
        
		
        $type=1;
        
        $orderfield='';
        
        $orderfield='crdate';
        
		$ordertype='asc';
        
        $kol=0;
        $page=1;

        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;

        // zend_debug::dump($uskey);
        if (($usertype=='manager' || $usertype=='meneger' ||  $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }

        // exit;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            if($usertype == 'manager') 
            {
                $curatorsmodel = $this->getModel('Curators');
                $this->view->managerinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
			if($usertype == 'meneger') 
            {
                $curatorsmodel = $this->getModel('Managers');
                $this->view->managerinfo=$curatorsmodel->getmanagerbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
            $this->view->userinfo = $privateofficemodel->getuserinfo($uskey);
          //  $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $params=array();
        if (strlen($dgcode)>0) {
            $params['dgcode']=$dgcode;
        }
        if (strlen($year)>0) {
            $params['year']=$year;
            $_SESSION['app_year']=$year;
        }
        if (strlen($crdatefrom)>0) {
			if ($date_type && $date_type =='dg_crdate') {
				$params['crdatebegin']=$crdatefromstamp;
				$params['crdateend']=$crdatetostamp;
			} else {
				$params['turdatebegin']=$crdatefromstamp;
				$params['turdateend']=$crdatetostamp;
			}
        }
        if (strlen($turdatestamp)>0) {
            $params['turdate']=$turdatestamp;
        }
        if (strlen($turname)>0) {
            $params['turname']=$turname;
        }
        if (strlen($turistname)>0) {
            $params['turistname']=$turistname;
        }
        
            $params['statusok']=1;
        
         
        
        $partners_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
        $this->view->admin_view = false;
        if(count($partners_arr) || in_array($usertype, array('admin', 'manager', 'meneger'))) $this->view->admin_view = true;
        $partners_arr[]=array('key' => $prkey);
		
		$use_key = TRUE;
		
		if($year_db){
			$params['year'] = $year_db;
		}
		
		if ($type==0) 
            $this->view->applist=$privateofficemodel->getapplist(array(array('key'=>$uskey)), $type,$kol,$page,$orderfield,$ordertype,$params,$allbool, $use_key);
        else 
            $this->view->applist=$privateofficemodel->getapplist($partners_arr, $type,$kol,$page,$orderfield,$ordertype,$params,$allbool, $use_key);
			

		foreach ($this->view->applist['data'] as $key=>$row) {
            // echo '$key = '.$key.'<br>';
            $dgkey=$row['DG_Key'];
			
            //$turistlist=
            $turlist=$privateofficemodel->getturistlist($dgkey,$params['year'], $row['DG_CODE']);
            // $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
            $this->view->applist['data'][$key]['turlist']=$turlist;
			
			$payment = $privateofficemodel->getpaytype($dgkey);
			if ($payment){
				$payment = $payment[0];
			}
			$pt =  (isset($payment['PTKEY']))?$payment['PTKEY']:0;
			
			$this->view->applist['data'][$key]['payment']=$pt;
        }
    
        $count=$this->view->applist['count'];
        $price=$this->view->applist['price'];
        $persons=$this->view->applist['persons'];
        $payed=$this->view->applist['payed'];
        // echo '$count='.$count.'<br>';
        //exit;
        // zend_debug::dump($this->view->applist);
        // exit;
        $pgkey=(int)$this->view->agentinfo['PR_PGKEY'];
    
        $this->view->uskey=$uskey;
        //echo $this->view->uskey;exit;
        $this->view->type=$type;
        $this->view->ustype=$usertype;
        $this->view->orderfield=$orderfield;
        $this->view->ordertype=$ordertype;
        $this->view->status=$status;


        //if (ceil($count/$kol)<$page) $page=1; 
        

        $this->view->page=$page;
        $this->view->year=$year;
        $this->view->kol=$kol;
        $this->view->count=$count;        
        $this->view->price=$price;        
        $this->view->persons=$persons;        
        $this->view->payed=$payed;        
        $this->view->dgcode = $dgcode;
        $this->view->crdate = $crdate;
        $this->view->turdate = $turdate;
        $this->view->turname = $turname;
        $this->view->turistname = $turistname;
        $this->view->statusok = $statusok;
        $this->view->statusnotpay = $statusnotpay;
        $this->view->statusnull = $statusnull;
 
 ///
    $agentinfo=$privateofficemodel->getagentinfo($prkey);
	
	$citiesmodel = $this->getModel('Cities');
	$city = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
	

	$legal_id = $city['legal_id'];
	$pages = 1;
	if(strtotime($crdatetostamp) < strtotime($this->dogovorCheckDate)){
		$legal_id=0;
	}
	
	if(strtotime($crdatefromstamp) < strtotime($this->dogovorCheckDate) && strtotime($crdatetostamp) >= strtotime($this->dogovorCheckDate)){
		$pages = 2;
	}
	
	$dogovorinfo_old = $privateofficemodel->getanegtolddoginfo($prkey);

	$dognumview_old='';
	$daydog_old='';
	$mondogtxt_old='';
	$yeardog_old='';
	if (isset($dogovorinfo_old['PD_DogNumber'])) $dognumview_old=$dogovorinfo_old['PD_DogNumber'];
	if (isset($dogovorinfo_old['PD_DateBeg'])) {
		$daydog_old=date("d", strtotime($dogovorinfo_old['PD_DateBeg']));
		$mondog=date("n", strtotime($dogovorinfo_old['PD_DateBeg']));
		$yeardog_old=date("Y", strtotime($dogovorinfo_old['PD_DateBeg']));
		$mondogtxt_old='';
		$mondog=(int)$mondog;
		$mondogtxt_old=$this->getmontxt($mondog);
		
	}
	
	$dogovorinfo = $privateofficemodel->getanegtdoginfo($prkey, $year_db);
	
	$agentinfo =  array_merge($agentinfo,$dogovorinfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($agentinfo['PD_DogNumber'])) $dognumview=$agentinfo['PD_DogNumber'];
            if (isset($agentinfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($agentinfo['PD_DateBeg']));
                $mondog=date("n", strtotime($agentinfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($agentinfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                
            }
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
			
			$this->view->crdatefromutc = $crdatefromutc;
			$this->view->crdatetoutc = $crdatetoutc;
			
			$this->view->dayfr = date("d",$crdatefromutc);
			$this->view->monfr = date("m",$crdatefromutc);
			$this->view->yearfr = date("Y",$crdatefromutc);
			$this->view->monfrtxt =$this->getmontxt(date("m",$crdatefromutc));
			
			
			$this->view->dayto = date("d",$crdatetoutc);
			$this->view->monto = date("m",$crdatetoutc);
			$this->view->yearto = date("Y",$crdatetoutc);
			$this->view->montotxt =$this->getmontxt(date("m",$crdatetoutc));
			
			$this->view->daycr = date("d");
			$this->view->moncr = date("m");
			$this->view->yearcr = date("Y");
			$this->view->moncrtxt =$this->getmontxt(date("m"));
			
			$this->view->pr_fullname= $pr_fullname;
			$this->view->dognumview = $dognumview;
			$this->view->daydog =$daydog;
			$this->view->mondogtxt =$mondogtxt;
			$this->view->yeardog = $yeardog;
			$this->view->crdatefrom = $crdatefrom;
			$this->view->crdateto = $crdateto;
			$this->view->legal_id = $legal_id;
			$this->view->pages = $pages;
			
			$this->view->dognumview_old = $dognumview_old;
			$this->view->daydog_old =$daydog_old;
			$this->view->mondogtxt_old =$mondogtxt_old;
			$this->view->yeardog_old = $yeardog_old;

 ///
 
 
        $filename = 'agentsreport.doc';
        $this->view->filename=$filename;
       if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }


 
    }
	
	function dogovorturistsupdateAction()
	{
	
	    $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $status=(int)$_SESSION['s_status'];
        if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        } elseif($usertype == 'admin') $uslogin='admin';
        else $uslogin='';
        
        $dgcode = (string)$this->_getParam('code','');
		$tukey =(array) $this->_getParam('tukey',array());
		
		$sex =(array) $this->_getParam('sex',array());
		$hsex =(array) $this->_getParam('hsex',array());
		$surname =(array) $this->_getParam('surname',array());
		$hsurname =(array) $this->_getParam('hsurname',array());
		$firstname =(array) $this->_getParam('firstname',array());
		$hfirstname =(array) $this->_getParam('hfirstname',array());
		$middlename =(array) $this->_getParam('middlename',array());
		$hmiddlename =(array) $this->_getParam('hmiddlename',array());
		$birthday =(array) $this->_getParam('birthday',array());
		$hbirthday =(array) $this->_getParam('hbirthday',array());
		$passports =(array) $this->_getParam('passports',array());
		$hpassports =(array) $this->_getParam('hpassports',array());
		$passportn =(array) $this->_getParam('passportn',array());
		$hpassportn =(array) $this->_getParam('hpassportn',array());
		$passportdate =(array) $this->_getParam('passportdate',array());
		$hpassportdate =(array) $this->_getParam('hpassportdate',array());
		$citizen =(array) $this->_getParam('citizen',array());
		$hcitizen =(array) $this->_getParam('hcitizen',array());
		$tel =(array) $this->_getParam('tel',array());
		$htel =(array) $this->_getParam('htel',array());
		 if (($usertype=='manager' || $usertype=='meneger' ||  $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
		
        $prkey=0;
        // exit;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
			
            if($usertype == 'manager') 
            {
                $curatorsmodel = $this->getModel('Curators');
                $this->view->managerinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
			if($usertype == 'meneger') 
            {
                $curatorsmodel = $this->getModel('Managers');
                $this->view->managerinfo=$curatorsmodel->getmanagerbylogin($uslogin);
                if (!$this->view->managerinfo) {
                    return $this->error(404);                
                    exit;
                }
            }
			
            
        }
//

$privateofficemodel=$this->getModel('Privateoffice');        


 
 			

$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);



			
			$tlopkey=$dogovorinfo['TL_OpKey'];
            $masteruser=$privateofficemodel->getmasteruser($tlopkey);
			$prkey=(int)$masteruser['US_PRKEY'];
			$agentinfo=$privateofficemodel->getagentinfo($prkey);
            $emaillist = array();
			
			if (isset($masteruser['US_MAILBOX'])) {
                $masteruseremail=$masteruser['US_MAILBOX'];
                // zend_debug::dump($masteruser);
                $fiomaster=$masteruser['US_NAME'];
                if (strlen($masteruser['US_FNAME'])) {
                    $fiomaster.=' '.$masteruser['US_FNAME'];
                }
                if (strlen($masteruser['US_SNAME'])) {
                    $fiomaster.=' '.$masteruser['US_SNAME'];
                }
            } else {
                $masteruseremail='';
                $fiomaster='';
            }
		//
		$genders = array('0_0'=>'М','1_1'=>'Ж','0_2'=>'Реб-М','1_2'=>'Реб-Ж','0_3'=> 'Млад-М', '1_3'=>'Млад-Ж');
		$msg = '';
		$tu_arr = array();
		
		for($ti = 0; $ti < sizeof($tukey); $ti++)
		{
		$cmsg = '';
			
		$params =  array(
		'sex'=>$sex[$ti],
		'surname' => $surname[$ti],
		'firstname' => $firstname[$ti],
		'middlename' =>$middlename[$ti],
		'birthday' => $birthday[$ti],
		'passports' => $passports[$ti],
		'passportn' => $passportn[$ti],
		'passportdate' => $passportdate[$ti],
		'citizen' => $citizen[$ti],
		'tel' => $tel[$ti]
		);
		
		if($hsex[$ti] != $sex[$ti]) $cmsg .= 'Пол - было: '.$genders[$hsex[$ti]].', стало: '.$genders[$sex[$ti]]."<br>";
		if($hsurname[$ti] != $surname[$ti] ) $cmsg .= 'Фамилия - было: '.$hsurname[$ti].', стало: '.$surname[$ti]."<br>";
		if($hfirstname[$ti] != $firstname[$ti] ) $cmsg .= 'Имя - было: '.$hfirstname[$ti].', стало: '.$firstname[$ti]."<br>";
		if($hmiddlename[$ti] != $middlename[$ti] ) $cmsg .= 'Отчество - было: '.$hmiddlename[$ti].', стало: '.$middlename[$ti]."<br>";
		if($hbirthday[$ti] != $birthday[$ti] ) $cmsg .= 'Дата рождения - было: '.$hbirthday[$ti].', стало: '.$birthday[$ti]."<br>";
		if($hpassports[$ti] != $passports[$ti] ) $cmsg .= 'Серия паспорта - было: '.$hpassports[$ti].', стало: '.$passports[$ti]."<br>";
		if($hpassportn[$ti]!=$passportn[$ti] ) $cmsg .= 'Номер паспорта - было: '.$hpassportn[$ti].', стало: '.$passportn[$ti]."<br>";
		if($hpassportdate[$ti]!= $passportdate[$ti]  ) $cmsg .= 'Паспорт действителен до - было: '.$hpassportdate[$ti].', стало: '.$passportdate[$ti]."<br>";
		if($hcitizen[$ti]!= $citizen[$ti]  ) $cmsg .= 'Гражданство до - было: '.$hcitizen[$ti].', стало: '.$citizen[$ti]."<br>";
		if($htel[$ti]!= $tel[$ti]  ) $cmsg .= 'Телефон - было: '.$htel[$ti].', стало: '.$tel[$ti]."<br>";

		
		if($cmsg)
		{	
			$msg .= (($msg!='')?'<hr>':'').$cmsg;
			$privateofficemodel->updatedogovorturists($tukey[$ti],$params, $dgcode);
			
			// Удаление (изменение) страховки, в зависимости от возраста туриста
			if($birthday[$ti])
			{
				$tmpa = explode(".",$birthday[$ti]);
				$bu  =  mktime(0,0,0,$tmpa[1],$tmpa[0],$tmpa[2]);
				$tbirthday =  date('Y-m-d',$bu);
			}
			
			$age = 0;
			if($tbirthday != '-')
			{
				$deltatime=date_diff(date_create(date("d.m.Y", time())), date_create($tbirthday));
				if($deltatime)  $age=$deltatime->format('%y');
			}
			$age_strahovka = $this->getStrahovkaByAge($age);
			$tu_arr[$tukey[$ti]] = $age_strahovka;

		}

		}
		
		$strahovkaCodes=$privateofficemodel->fetchallStrahovka($dgcode);
		
		foreach($strahovkaCodes as $one) 
		{	
			$current_turist = $one['turist'];
			if (isset($tu_arr[$current_turist])){
				$current_b = $tu_arr[$current_turist]['B'];
				$current_c = $tu_arr[$current_turist]['C'];
				
				if(!$current_b && !$current_c){
					$privateofficemodel->deleteStrahovka($dgcode, $one['code'], $current_turist);
				}
				
				$strahovka_category = 0;
				if(in_array($one['code'], $this->strahovka_b)){
					$strahovka_category = 'B';
				}
				if(in_array($one['code'], $this->strahovka_c)){
					$strahovka_category = 'C';
				}
				
				if ($strahovka_category && $tu_arr[$current_turist][$strahovka_category]){
					if($one['code']!=$tu_arr[$current_turist][$strahovka_category]){
						$privateofficemodel->deleteStrahovka($dgcode, $one['code'], $current_turist);
						$privateofficemodel->addStrahovka($dgcode, $tu_arr[$current_turist][$strahovka_category], $current_turist);
					}
				}
			}
		}
	

	$usertype = $this->getusertypeinsession();
    if($msg && ($usertype!='manager' && $usertype!='admin' && $usertype!='meneger'))
		{
		//
		$userinfo=$privateofficemodel->getuserinfo($uskey);
		$usid=(string)$userinfo['US_ID'];
            

		$timestamp=time();
        $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
        $params=array();
        $params['usidfrom']=$usid;
        $params['usidto']='admin';
        $params['ip']=$ip_int;
        $params['time']=$timestamp;
        $params['status']=1;
        $params['idmess_parent']=0;
        $params['subject']= "Вопрос из личного кабинета по заявке №".$dgcode;
        $params['subject_eng']='dogovorrequest';
        $params['numb']=$dgcode;
        $params['message']='Агентством были изменены данные туристов.';
        $params['remark']='';
        $params['messtype']='MTM';
        $privateofficemodel->addmess($params);
		
		
		
		//
		$email='admin@multitour.ru';
		$headers="From: \"".$this->utf8_to_cp1251('Изменение в путёвке №'.$dgcode)."\" <".$email.">\n";
                $headers.="Content-Type: text/html; charset=windows-1251\n";
                $headers.="Content-Transfer-Encoding: 8bit";
                $sendhtml='В путёвке №'.$dgcode.' были изменены туристы <br>'.$msg;
                
                
                //$emaillist[]='semenov@multitour.ru';
				
				if($masteruseremail) $emaillist[] = $masteruseremail;
				// Определение кураторов для данной путевки
				$agentinfo=$privateofficemodel->getagentinfo($dogovorinfo['DG_PARTNERKEY']);

            if($agentinfo['PR_OWNER']) {
                $curatorsmodel=$this->getModel('Curators');
                $curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
                foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist))
                    $emaillist[]=$cur['cur_email_group'];
            }

				
				
                $subjectmail=$this->utf8_to_cp1251('Изменение в путёвке №'.$dgcode);
                $sendhtml=$this->utf8_to_cp1251($sendhtml);
                
				
                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        if ($emaillist[$i]!='') {
						$se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
						}
                        if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            exit;
                        } 
                    }
                }
			}
		
		
		
				$urlredirect = '/privateoffice/userinfo/dogovor/?type=0&code='.$dgcode;
	          if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
  	
	
	}
	
////PRINT 	POSADOCHNIY TALON
public function printposadochniytalonAction()    {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='meneger' || $usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
          /*  if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }*/
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger' ) {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            }
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];

            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }

            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dogovorinfo['DG_CODE']);
            
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        
						$turlist=$privateofficemodel->getturistlistbydlkey($row['DL_KEY']);
						
						$turlistview=array();
						foreach ($turlist as $key=>$row2) {
							$fio=$row2['TU_NAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_FNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_FNAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_SNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_SNAMERUS'];
							$turlistview[$key]['fio']=$fio;
							
							if ($row2['TU_RealSex']=='0') $sex='М';
							else $sex='Ж';
							$turlistview[$key]['sex']=$sex;
							
							$pasport=$row2['TU_PASPORTTYPE'];
							if (strlen($pasport)>0 && strlen($row2['TU_PASPORTTYPE'])>0) $pasport.=' ';
							$pasport.=$row2['TU_PASPORTNUM'];
							$turlistview[$key]['pasport']=$pasport;
							
							$birthday='';
							if (strlen($row2['TU_BIRTHDAY'])>0) {
								$birthday.=date("d.m.Y", strtotime($row2['TU_BIRTHDAY']));
							}
							$turlistview[$key]['birthday']=$birthday;
							
							$phone  = '';
							if (strlen($row2['TU_PHONE'])>0) {
								$phone=trim($row2['TU_PHONE']);
							}
							$turlistview[$key]['phone']=$phone;
							
						}
						
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        
						// поставщик услуг
						$agentinfo=$privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
						$tranferlistview[$i]['PR_FULLNAME'] = $agentinfo['PR_FULLNAME'];
						//Маршрут
                        $tranferlistview[$i]['TF_NAME']= $transfer['TF_NAME'];
						
						// Пункт отправления
						$tranferlistview[$i]['TF_PLACEFROM']= $transfer['TF_PLACEFROM'];
                        
						// Пункт назначения;
						$tranferlistview[$i]['TF_PLACETO']= $transfer['TF_PLACETO'];
						
						//Дата отправления
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['DL_DATEBEG']=$transferdate;
						// Время отправления
						$timebeg = '';
						if (strlen($transfer['TF_TIMEBEG'])>0) {
                            $timebeg=date("H:i", strtotime($transfer['TF_TIMEBEG']));
                        } 
						$tranferlistview[$i]['TF_TIMEBEG']=$timebeg;
						
						$tranferlistview[$i]['turlistview'] = $turlistview;
						
                        $i++;
                    }   
					
					if ($row['DL_SVKEY']=='3') {
						$hotelkey=(int)$row['DL_CODE'];
						$hotel_info = $privateofficemodel->gethotelinfo($hotelkey);
						$resort_id = $hotel_info['ResortKey'];
						$city_id = $hotel_info['CityKey'];
					}
						
                }
            }
            
            
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->resort_id=$resort_id;
		$this->view->city_id=$city_id;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
		$this->view->pr_key=$dg_prkey;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        

        $this->view->tranfers=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;

        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'posadchniytalon' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
    } 

/////////////////// POSADOCHNIY TALON HTML
public function printposadochniytalonhtmlAction()   {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
		
		
		
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='meneger' || $usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
		
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
			
			$this->view->turname =  $dogovorinfo['turname'];
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
			
			
			
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			/*
            if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }
			*/
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger' ) {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            

			if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            }
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
            //Информация по туру
			
			
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];

            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }


            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dogovorinfo['DG_CODE']);
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
			$resort_id = 0;

            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        
						$turlist=$privateofficemodel->getturistlistbydlkey($row['DL_KEY']);
						
						$turlistview=array();
						foreach ($turlist as $key=>$row2) {
							$fio=$row2['TU_NAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_FNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_FNAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_SNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_SNAMERUS'];
							$turlistview[$key]['fio']=$fio;
							
							if ($row2['TU_RealSex']=='0') $sex='М';
							else $sex='Ж';
							$turlistview[$key]['sex']=$sex;
							
							$pasport=$row2['TU_PASPORTTYPE'];
							if (strlen($pasport)>0 && strlen($row2['TU_PASPORTTYPE'])>0) $pasport.=' ';
							$pasport.=$row2['TU_PASPORTNUM'];
							$turlistview[$key]['pasport']=$pasport;
							
							$birthday='';
							if (strlen($row2['TU_BIRTHDAY'])>0) {
								$birthday.=date("d.m.Y", strtotime($row2['TU_BIRTHDAY']));
							}
							$turlistview[$key]['birthday']=$birthday;
							
							$phone  = '';
							if (strlen($row2['TU_PHONE'])>0) {
								$phone=trim($row2['TU_PHONE']);
							}
							$turlistview[$key]['phone']=$phone;
							
						}
						
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        
						// поставщик услуг
						$agentinfo=$privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
						$tranferlistview[$i]['PR_FULLNAME'] = $agentinfo['PR_FULLNAME'];
						//Маршрут
                        $tranferlistview[$i]['TF_NAME']= $transfer['TF_NAME'];
						
						// Пункт отправления
						$tranferlistview[$i]['TF_PLACEFROM']= $transfer['TF_PLACEFROM'];
                        
						// Пункт назначения;
						$tranferlistview[$i]['TF_PLACETO']= $transfer['TF_PLACETO'];
						
						//Дата отправления
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['DL_DATEBEG']=$transferdate;
						// Время отправления
						$timebeg = '';
						if (strlen($transfer['TF_TIMEBEG'])>0) {
                            $timebeg=date("H:i", strtotime($transfer['TF_TIMEBEG']));
                        } 
						$tranferlistview[$i]['TF_TIMEBEG']=$timebeg;
						
						$tranferlistview[$i]['turlistview'] = $turlistview;

                        $i++;
                    }  

					if ($row['DL_SVKEY']=='3') {
						$hotelkey=(int)$row['DL_CODE'];
						$hotel_info = $privateofficemodel->gethotelinfo($hotelkey);
						$resort_id = $hotel_info['ResortKey'];
						$city_id = $hotel_info['CityKey'];
					}					
                }
            }
            
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->resort_id=$resort_id;
		$this->view->city_id=$city_id;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
		$this->view->pr_key=$dg_prkey;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        

        $this->view->tranfers=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'posadchniytalon' .$dgcode. '.doc';
        $this->view->filename=$filename;
/*        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }*/
    } 
/////////////////// POSADOCHNIY TALON PDF
public function printposadochniytalonpdfAction()   {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='meneger' || $usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            /*if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }*/
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger' ) {
                if ($dg_prkey!=$prkey) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
            }
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];

            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
   
            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])), $dogovorinfo['DG_CODE']);
            
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        
						$turlist=$privateofficemodel->getturistlistbydlkey($row['DL_KEY']);
						
						$turlistview=array();
						foreach ($turlist as $key=>$row2) {
							$fio=$row2['TU_NAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_FNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_FNAMERUS'];
							if (strlen($fio)>0 && strlen($row2['TU_SNAMERUS'])>0) $fio.=' ';
							$fio.=$row2['TU_SNAMERUS'];
							$turlistview[$key]['fio']=$fio;
							
							if ($row2['TU_RealSex']=='0') $sex='М';
							else $sex='Ж';
							$turlistview[$key]['sex']=$sex;
							
							$pasport=$row2['TU_PASPORTTYPE'];
							if (strlen($pasport)>0 && strlen($row2['TU_PASPORTTYPE'])>0) $pasport.=' ';
							$pasport.=$row2['TU_PASPORTNUM'];
							$turlistview[$key]['pasport']=$pasport;
							
							$birthday='';
							if (strlen($row2['TU_BIRTHDAY'])>0) {
								$birthday.=date("d.m.Y", strtotime($row2['TU_BIRTHDAY']));
							}
							$turlistview[$key]['birthday']=$birthday;
							
							$phone  = '';
							if (strlen($row2['TU_PHONE'])>0) {
								$phone=trim($row2['TU_PHONE']);
							}
							$turlistview[$key]['phone']=$phone;
							
						}
						
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        
						// поставщик услуг
						$agentinfo=$privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
						$tranferlistview[$i]['PR_FULLNAME'] = $agentinfo['PR_FULLNAME'];
						//Маршрут
                        $tranferlistview[$i]['TF_NAME']= $transfer['TF_NAME'];
						
						// Пункт отправления
						$tranferlistview[$i]['TF_PLACEFROM']= $transfer['TF_PLACEFROM'];
                        
						// Пункт назначения;
						$tranferlistview[$i]['TF_PLACETO']= $transfer['TF_PLACETO'];
						
						//Дата отправления
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['DL_DATEBEG']=$transferdate;
						// Время отправления
						$timebeg = '';
						if (strlen($transfer['TF_TIMEBEG'])>0) {
                            $timebeg=date("H:i", strtotime($transfer['TF_TIMEBEG']));
                        } 
						$tranferlistview[$i]['TF_TIMEBEG']=$timebeg;
						
						$tranferlistview[$i]['turlistview'] = $turlistview;
						
                        $i++;
                    }

					if ($row['DL_SVKEY']=='3') {
						$hotelkey=(int)$row['DL_CODE'];
						$hotel_info = $privateofficemodel->gethotelinfo($hotelkey);
						$resort_id = $hotel_info['ResortKey'];
						$city_id = $hotel_info['CityKey'];
					}                    
                }
            }
            
            
            
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->resort_id=$resort_id;
		$this->view->city_id=$city_id;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
		$this->view->pr_key=$dg_prkey;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        
        
        $this->view->vsttxt=$vsttxt;
        $this->view->doptxt=$doptxt;
        $this->view->rasttxt=$rasttxt;
        $this->view->tranfers=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        $this->view->discount=$discount;
        $this->view->hotelstxt=$hotelstxt;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
 

$filename = 'posadchniytalon_' .$dgcode. '.pdf';
        
		$this->view->filename=$filename;
		if (!headers_sent()) {
            header("Content-Type: application/pdf");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
 
        
    } 	
	public function  printvoucherpdfAction()
	{
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype=='meneger') && $uskey==0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            if ($this->view->dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }            
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            $dgkey=$this->view->dogovorinfo['DG_Key'];
			$this->view->turname = $this->view->dogovorinfo['turname'];
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            
			//
			if(in_array($this->view->dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$this->view->agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$this->view->agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			$this->view->pr_fullname=$this->view->agentinfo['PR_FULLNAME'];
			//
			

			// Определение страны
            $countryid=(int)$this->view->dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
			$country=$countriesmodel->getcountrybyid($countryid);            
            if ($country) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
			//  Определение города
            $cityid=(int)$this->view->dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
			$city=$citiesmodel->getcitybyid($cityid);            
            if ($city) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($this->view->agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($this->view->dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $this->view->dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
			
            $nday=(int)$this->view->dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            $status=(int)$_SESSION['s_status'];
            $turbegin=date("d.m.Y", strtotime($this->view->dogovorinfo['DG_TURDATE']));
            $turend = date("d.m.Y",strtotime('+'.$nnigth.' days', strtotime($this->view->dogovorinfo['DG_TURDATE'])));
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {

                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
            
            $this->view->dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            
            $hotelbool=false;
            $dlpartnerkey=0;
            $dlhotelkey=0;
            $subcode1=0;
            $subcode2=0;
            $dlprnamearr=array();
            $hoteldicttextarr=array();
			$hotelnamearr =  array();
			$hotelfreearr = array();
			$hoteladdrarr =  array();
            $roompansiontxtarr=array();
			$pansiontxtarr = array();
            $turbeginarr=array();
            $turendarr=array();
            $nnigtharr=array();
            $daysarr=array();
			$hotelconditionarr =  array();
            
			$turistlistarr=array();
			$turistlistnarr=array();
			
			$roomtxtarr = array();
			
  // ["DL_DATEBEG"] => string(19) "2011-04-21 00:00:00"
  // ["DL_DATEEND"] => string(19) "2011-04-21 00:00:00"
  // ["DL_Long"] => string(1) "3"
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='3') {
                        $dlkey=$row['DL_KEY'];
//                        $turistlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey,$dgcode);
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        
                        if (is_array($turistlist)) {
                            foreach ($turistlist as $key=>$row1) {
                                $stline=$row1['TU_NAMERUS'];
                                if (strlen($row1['TU_FNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_FNAMERUS'];
                                }
                                if (strlen($row1['TU_SNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_SNAMERUS'];
                                }
                                if (strlen($row1['TU_BIRTHDAY'])>0) {
                                    $stline.=' '.date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                                }
                                if (strlen($row1['TU_PASPORTTYPE'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTTYPE'];
                                }
                                if (strlen($row1['TU_PASPORTNUM'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTNUM'];
                                }
								
								
                                $turistlist[$key]['stline']=$stline;
								
								$fio=$row1['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_SNAMERUS'];
                $turistlist[$key]['fio']=$fio;
  

                $pasport=$row1['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row1['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row1['TU_PASPORTNUM'];
                $turistlist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row1['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                }
                $turistlist[$key]['birthday']=$birthday;
 
								
				        }
                        }
                        
                        $turistlistarr[]=$turistlist;
                        // zend_debug::dump($turistlist);
                        // zend_debug::dump($row);
                        // exit;
                        $hotelbool=true;
                        $dlpartnerkey=$row['DL_PARTNERKEY'];
                        $dlhotelkey=(int)$row['DL_CODE'];
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        
                       /////////////////Принимающая сторона start
                        $dlprname=''; 
                        if ($dlpartnerkey) {
                            $dlagentinfo=$privateofficemodel->getagentinfo($dlpartnerkey);
                            if (is_array($dlagentinfo)) {
                                if (isset($dlagentinfo['PR_NAME'])) {
                                    $dlprname=$dlagentinfo['PR_NAME'];
                                }
                            }
                        } else {
                            $dlprname=$this->view->agentinfo['PR_NAME'];
                        }
                        $dlprnamearr[]=$dlprname;
                        /////////////////Принимающая сторона end
                       
                        ////////////////Отель start
                        if ($dlhotelkey) {
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($dlhotelkey);
                            
                        } else $hoteldictionary=false;
                        $hoteldicttext='';
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hoteldicttext.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hoteldicttext.=' '.$hoteldictionary['HD_STARS'];
                            }
                             
                            if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hoteldicttext.=', '.$hoteldictionary['HD_ADDRESS'];
                            }
                        }
                        if (strlen($hoteldicttext)==0) $hoteldicttext='Нет';
                        ////////////////Отель end
						$hoteldicttextarr[]=$hoteldicttext;
						//
						$hotel_name = ''; //  Имя и тип отеля 
						$hoteloptions = array();
						$hotel_free = '';
						$hotel_condition = '';
						if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotel_name.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hotel_name.=' '.$hoteldictionary['HD_STARS'];
                            }
							
							$hotelsmodel=$this->getModel('Hotels');
							$hoteloptions=$hotelsmodel->getOptions($hoteldictionary['HD_KEY']);
						}
						if(	$hotel_name == '') $hotel_name =  'Нет';
						
						$hotelnamearr[] = $hotel_name;
						
						if(isset($hoteloptions['option_204'])){
							$hotel_free = $hoteloptions['option_204']['ru'].': '.$hoteloptions['option_204']['val'];
						}
						$hotelfreearr[]=$hotel_free;
						
						if(isset($hoteloptions['option_217'])){
							$hotel_condition = strip_tags($hoteloptions['option_217']['val']);
						}
						$hotelconditionarr[]=$hotel_condition;
		
						$hotel_addr = ''; // Адрес отеля
						   if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hotel_addr.= $hoteldictionary['HD_ADDRESS'];
                            }
						$hoteladdrarr[] = $hotel_addr;
						
                        
                        
                        //////////////Тип номера  /  тип питания start
                        $room=NULL;
                        $accmd=NULL;
                        $pansion=NULL;
                        // echo '$subcode1 = '.$subcode1.'<br>';
                        // echo '$subcode2 = '.$subcode2.'<br>';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                            }
                        }
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                        }
                        $roompansiontxt='';
						$roomtxt = '';
                        if ($room) {
                            if (is_array($room)) {
                                $roompansiontxt.=$room['Room'].', '.$room['RoomsCategory'];
								$roomtxt .= $room['Room'].', '.$room['RoomsCategory'];
                            }
                        }
                        if ($accmd) {
                            if (is_array($accmd)) {
                                $roompansiontxt.=', '.$accmd['Code'];
								$roomtxt .=(($roomtxt)?', ':'').$accmd['Code'];
                            }
                        }
                        if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
            
						if (strlen($roompansiontxt)==0) $roompansiontxt='Нет';
                        $roompansiontxtarr[]=$roompansiontxt;
						
						
						$roomtxt = (strlen($roomtxt) == 0)?'Нет':$roomtxt;
						$roomtxtarr[]  = $roomtxt;
			//				
						if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
						
						$pansiontxtarr[] = $pansion['Name'];
                        //////////////Тип номера  /  тип питания end
                        
                        $turbegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $turend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $nnigth=(int)$row['DL_NDAYS'];                
                        $turbeginarr[]=$turbegin;
                        $turendarr[]=$turend;
                        $nnigtharr[]=$nnigth;
                        $daysarr[]=$nnigth+1;
                        
                        // break;
                    }
                }
            }
            // zend_debug::dump($dlprnamearr);
            // exit;
            // zend_debug::dump($dateendarr);
            // zend_debug::dump($nnigtharr);
            // exit;
            // if (!$hotelbool) {
                // $nnigth='Нет';
                // $turbegin='Нет';
                // $turend='Нет';
            // }
            
            
            //////////////В стоимость входит/ расчётный час start
            $rastcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $rastcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }
            $vstcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1119') {
                        $vstcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }            
            $rasttxt='';
            if ($rastcode>0) {
                $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                if (is_array($rast)) {
                    if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                }
            }
            $vsttxt='';
            if ($vstcode>0) {
                $vst=$privateofficemodel->getservicelist(1119,$vstcode,$dgcode);
                if (is_array($vst)) {
                    if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                }
            }
            $rastvsttxt='';
			
			$rasscharrZ = array();
			$rasscharrV = array();
			$vstoimostarr = array();
			
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($rasttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        $tmpa = explode(",",$rasttxt);
						$rasttxtZ=$tmpa[0];
						$rasttxtV=$tmpa[1];
						
						}
						
						
						
						$rasscharrZ[] =  $rasttxtZ;
						$rasscharrV[] =  $rasttxtV;
                    }
                    if ($row['DL_SVKEY']=='1119') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($vsttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='В стоимость входит  '.$vsttxt.'('.$turistlist_size.'),';
                        }
						$vstoimostarr[] = $vsttxt;
						
                    }
                }
            }
            if (strlen($rastvsttxt)==0) $rastvsttxt='Нет'; 
            //////////////В стоимость входит/ расчётный час end
            
            //////////////Трансфер / транспорт start
            $transfercode=0;
            $transfersubcode1=0;
            $transferbool=false;            
            $transferdate='';
            $transfertxt='';
            $transfer=false;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                    
                        $transferbool=true;
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transferdate=$row['DL_DATEBEG'];
                        if ($transferdate=='') $transferdate='1900-01-09 00:00:00';
                        if (strlen($transferdate)>0) {
                            $transferdate=date("d.m.Y", strtotime($transferdate));
                        } 
                        if ($transferbool) {
                            if (strlen($transfertxt)>0) $transfertxt.='<br/>';
                            $transfertxt.=$transferdate.' : ';
                            $transfer=$privateofficemodel->gettransfer($transfercode);
                            $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                            if (is_array($transfer)) {
                                $transfertxt.=$transfer['TF_NAME'];
                            }
                            if( is_array($transpost)) {
                                $transfertxt.=' / '.$transpost['TR_NAME'];
								
								/*$transfertxt.= '(';
                                if ($transpost['TR_NMEN']) {
                                    $transfertxt.=$transpost['TR_NMEN'];
                                } else $transfertxt.=$turistlist_size;
                                $transfertxt.=')';*/
                            }
                            if (is_array($transfer)) {
                                $transfertxt.= ' / '.$transfer['TF_PLACEFROM'];
								
								$transfer_partner = $privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
								
								if($transfer_partner['PR_FAX']){
									$tel_arr = explode('-',$transfer['TF_NAMELAT']);
									if($tel_arr){
										switch(strtolower($tel_arr[0])){
											case 'встреча':
												$tel_text = 'Телефон встречающей стороны:';
												break;
											case 'проводы':
												$tel_text = 'Телефон провожающей стороны:';
												break;
										}
										$transfertxt.= ' / '.$tel_text.' '.$transfer_partner['PR_FAX'];
									}
								}
                            }

                        }
                    }                    
                }
            }            
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            //////////////Трансфер / транспорт end
            
            //////////////Экскурсии start
            $exurscode=0;
            $exursbool=false;            
            $exursdate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='4') {
                        $exursbool=true;
                        $exurscode=(int)$row['DL_CODE'];
                        $exursdate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $exurstxt='';
            if (strlen($exursdate)>0) {
                //$exursdate=date("d.m.Y G:i:s", strtotime($exursdate));
				$exursdate=date("d.m.Y", strtotime($exursdate));
            }
            if ($exursbool) {
                $exurstxt.=$exursdate.' ';
                $exurs=$privateofficemodel->getexurs($exurscode);
                if (is_array($transfer)) {
                    $exurstxt.=$exurs['ED_NAME'];
                }
                //$exurstxt.='('.count($turist).')';
            }
            if (strlen($exurstxt)==0) $exurstxt='Нет';
            //////////////Экскурсии end

			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='8' || $row['DL_SVKEY']=='8') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_SUBCODE2'];
                        $dopusldate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $dopusltxt='';
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt.=$dopusldate.' ';
                $dopusl=$privateofficemodel->gethoteldopusl($dopuslcode);
                if (is_array($dopusl)) {
                    $dopusltxt.=$dopusl['A2_NAME'];
                }
                //$dopusltxt.='('.count($turist).')';
            }
            
			//if (strlen($dopusltxt)==0) $dopusltxt='Нет';
            //////////////Доп услуга end
			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
			$dopusltxt1='';
            if (is_array($this->view->dogovorlist)) {
			reset($this->view->dogovorlist);
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1032' || $row['DL_SVKEY']=='1032') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_CODE'];
						$dopusldate=$row['DL_DATEBEG'];
                        //break;
                
            
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt1.= (($dopusltxt1!='')?'<br>':'').$dopusldate.' ';
                $dopusl=$privateofficemodel->getdopusl($dopuslcode);
				
                
                    $dopusltxt1.=$dopusl['SL_NAME'];
                
             
            }
			    }                    
                }
            }   
            //if (strlen($dopusltxt1)==0) $dopusltxt1='Нет';
			$dopusltxt .= ((strlen($dopusltxt) > 0 && strlen($dopusltxt1) > 0)?'<br>':'').$dopusltxt1;
			//echo  $dopusltxt; exit;
			if(strlen($dopusltxt) == 0) $dopusltxt = 'Нет';
			
			
			
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode,$dgcode);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                          //  $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';            
            //////////////Страховка end
            $datetec=date("d.m.y");
        } else {
            return $this->error(404);                
            exit;
        }
        // exit;
        $this->view->uskey=$uskey;
        $this->view->hotelbool=$hotelbool;
        // $this->view->dlprname=$dlprname;
        // $this->view->hoteldicttext=$hoteldicttext;
        // $this->view->roompansiontxt=$roompansiontxt;
        $this->view->rastvsttxt=$rastvsttxt;
        $this->view->transfertxt=$transfertxt;
        $this->view->straxtxt=$straxtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->turbegin=$turbegin;
        $this->view->turend=$turend;
        $this->view->dgcode=$dgcode;
        $this->view->exurstxt=$exurstxt;
        $this->view->datetec=$datetec;
        $this->view->dlprnamearr=$dlprnamearr;
        $this->view->hoteldicttextarr=$hoteldicttextarr;
        $this->view->roompansiontxtarr=$roompansiontxtarr;
		$this->view->hotelnamearr = $hotelnamearr;
		$this->view->hotelfreearr = $hotelfreearr;
		$this->view->hoteladdrarr = $hoteladdrarr;
		$this->view->hotelconditionarr = $hotelconditionarr;
		
        
        $this->view->turbeginarr=$turbeginarr;
        $this->view->turendarr=$turendarr;
        $this->view->nnigtharr=$nnigtharr;
        $this->view->daysarr=$daysarr;
        $this->view->turistlistarr=$turistlistarr;
        if (is_array($turist)) {
            foreach ($turist as $key=>$row) {
                $stline=$row['TU_NAMERUS'];
                if (strlen($row['TU_FNAMERUS'])>0) {
                    $stline.=' '.$row['TU_FNAMERUS'];
                }
                if (strlen($row['TU_SNAMERUS'])>0) {
                    $stline.=' '.$row['TU_SNAMERUS'];
                }
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $stline.=' '.date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                if (strlen($row['TU_PASPORTTYPE'])>0) {
                    $stline.=' '.$row['TU_PASPORTTYPE'];
                }
                if (strlen($row['TU_PASPORTNUM'])>0) {
                    $stline.=' '.$row['TU_PASPORTNUM'];
                }
				
				$fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turist[$key]['fio']=$fio;
  

                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turist[$key]['birthday']=$birthday;

  
				
				
                $turist[$key]['stline']=$stline;
            }
        }

        $this->view->turist=$turist;
        $this->view->type=$type;
        $this->view->countryname=$countryname;
		$this->view->cityname = $cityname;
		$this->view->rasscharrZ	  = $rasscharrZ;
		$this->view->rasscharrV	  = $rasscharrV;
		$this->view->vstoimostarr = $vstoimostarr;
		$this->view->dopusltxt =  $dopusltxt;
		$this->view->pansiontxtarr = $pansiontxtarr;
		$this->view->roomtxtarr = $roomtxtarr;
     
	
	
	
	
        $filename = 'voucher' .$dgcode. '.pdf';
        
        $this->view->filename=$filename;
		
		if (!headers_sent()) {
            header("Content-Type: application/pdf");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }

		
		
		
    }



	//
	public function printvoucherAction() 
	{
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype=='meneger') && $uskey==0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            if ($this->view->dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }            
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            $dgkey=$this->view->dogovorinfo['DG_Key'];
			$this->view->turname = $this->view->dogovorinfo['turname'];
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            
			//
			if(in_array($this->view->dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$this->view->agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$this->view->agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			$this->view->pr_fullname=$this->view->agentinfo['PR_FULLNAME'];
			//
			

			// Определение страны
            $countryid=(int)$this->view->dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
			$country=$countriesmodel->getcountrybyid($countryid);            
            if ($country) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
			//  Определение города
            $cityid=(int)$this->view->dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
			$city=$citiesmodel->getcitybyid($cityid);            
            if ($city) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($this->view->agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($this->view->dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $this->view->dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
			
            $nday=(int)$this->view->dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            $status=(int)$_SESSION['s_status'];
            $turbegin=date("d.m.Y", strtotime($this->view->dogovorinfo['DG_TURDATE']));
            $turend = date("d.m.Y",strtotime('+'.$nnigth.' days', strtotime($this->view->dogovorinfo['DG_TURDATE'])));
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {

                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
            
            $this->view->dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            
            $hotelbool=false;
            $dlpartnerkey=0;
            $dlhotelkey=0;
            $subcode1=0;
            $subcode2=0;
            $dlprnamearr=array();
            $hoteldicttextarr=array();
			$hotelnamearr =  array();
			$hotelfreearr = array();
			$hoteladdrarr =  array();
            $roompansiontxtarr=array();
			$pansiontxtarr = array();
            $turbeginarr=array();
            $turendarr=array();
            $nnigtharr=array();
            $daysarr=array();
			$hotelconditionarr =  array();
            
			$turistlistarr=array();
			$turistlistnarr=array();
			
			$roomtxtarr = array();
			
  // ["DL_DATEBEG"] => string(19) "2011-04-21 00:00:00"
  // ["DL_DATEEND"] => string(19) "2011-04-21 00:00:00"
  // ["DL_Long"] => string(1) "3"
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='3') {
                        $dlkey=$row['DL_KEY'];
//                        $turistlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey,$dgcode);
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        
                        if (is_array($turistlist)) {
                            foreach ($turistlist as $key=>$row1) {
                                $stline=$row1['TU_NAMERUS'];
                                if (strlen($row1['TU_FNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_FNAMERUS'];
                                }
                                if (strlen($row1['TU_SNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_SNAMERUS'];
                                }
                                if (strlen($row1['TU_BIRTHDAY'])>0) {
                                    $stline.=' '.date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                                }
                                if (strlen($row1['TU_PASPORTTYPE'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTTYPE'];
                                }
                                if (strlen($row1['TU_PASPORTNUM'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTNUM'];
                                }
								
								
                                $turistlist[$key]['stline']=$stline;
								
								$fio=$row1['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_SNAMERUS'];
                $turistlist[$key]['fio']=$fio;
  

                $pasport=$row1['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row1['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row1['TU_PASPORTNUM'];
                $turistlist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row1['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                }
                $turistlist[$key]['birthday']=$birthday;
 
								
				        }
                        }
                        
                        $turistlistarr[]=$turistlist;
                        // zend_debug::dump($turistlist);
                        // zend_debug::dump($row);
                        // exit;
                        $hotelbool=true;
                        $dlpartnerkey=$row['DL_PARTNERKEY'];
                        $dlhotelkey=(int)$row['DL_CODE'];
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        
                       /////////////////Принимающая сторона start
                        $dlprname=''; 
                        if ($dlpartnerkey) {
                            $dlagentinfo=$privateofficemodel->getagentinfo($dlpartnerkey);
                            if (is_array($dlagentinfo)) {
                                if (isset($dlagentinfo['PR_NAME'])) {
                                    $dlprname=$dlagentinfo['PR_NAME'];
                                }
                            }
                        } else {
                            $dlprname=$this->view->agentinfo['PR_NAME'];
                        }
                        $dlprnamearr[]=$dlprname;
                        /////////////////Принимающая сторона end
                       
                        ////////////////Отель start
                        if ($dlhotelkey) {
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($dlhotelkey);
                            
                        } else $hoteldictionary=false;
                        $hoteldicttext='';
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hoteldicttext.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hoteldicttext.=' '.$hoteldictionary['HD_STARS'];
                            }
                             
                            if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hoteldicttext.=', '.$hoteldictionary['HD_ADDRESS'];
                            }
                        }
                        if (strlen($hoteldicttext)==0) $hoteldicttext='Нет';
                        ////////////////Отель end
						$hoteldicttextarr[]=$hoteldicttext;
						//
						$hotel_name = ''; //  Имя и тип отеля 
						$hotel_free = '';
						$hotel_condition = '';
						
						$hoteloptions = array();
						if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotel_name.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hotel_name.=' '.$hoteldictionary['HD_STARS'];
                            }
							$hotelsmodel=$this->getModel('Hotels');
							$hoteloptions=$hotelsmodel->getOptions($hoteldictionary['HD_KEY']);
						}
						if(	$hotel_name == '') $hotel_name =  'Нет';
						
						$hotelnamearr[] = $hotel_name;
						
						if(isset($hoteloptions['option_204'])){
							$hotel_free = $hoteloptions['option_204']['ru'].': '.$hoteloptions['option_204']['val'];
						}
						$hotelfreearr[]=$hotel_free;
						
						if(isset($hoteloptions['option_217'])){
							$hotel_condition = strip_tags($hoteloptions['option_217']['val']);
						}
						$hotelconditionarr[]=$hotel_condition;
		
						$hotel_addr = ''; // Адрес отеля
						   if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hotel_addr.= $hoteldictionary['HD_ADDRESS'];
                            }
						$hoteladdrarr[] = $hotel_addr;
						
                        
                        
                        //////////////Тип номера  /  тип питания start
                        $room=NULL;
                        $accmd=NULL;
                        $pansion=NULL;
                        // echo '$subcode1 = '.$subcode1.'<br>';
                        // echo '$subcode2 = '.$subcode2.'<br>';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                            }
                        }
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                        }
                        $roompansiontxt='';
						$roomtxt = '';
                        if ($room) {
                            if (is_array($room)) {
                                $roompansiontxt.=$room['Room'].', '.$room['RoomsCategory'];
								$roomtxt .= $room['Room'].', '.$room['RoomsCategory'];
                            }
                        }
                        if ($accmd) {
                            if (is_array($accmd)) {
                                $roompansiontxt.=', '.$accmd['Code'];
								$roomtxt .=(($roomtxt)?', ':'').$accmd['Code'];
                            }
                        }
                        if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
            
						if (strlen($roompansiontxt)==0) $roompansiontxt='Нет';
                        $roompansiontxtarr[]=$roompansiontxt;
						
						
						$roomtxt = (strlen($roomtxt) == 0)?'Нет':$roomtxt;
						$roomtxtarr[]  = $roomtxt;
			//				
						if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
						
						$pansiontxtarr[] = $pansion['Name'];
                        //////////////Тип номера  /  тип питания end
                        
                        $turbegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $turend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $nnigth=(int)$row['DL_NDAYS'];                
                        $turbeginarr[]=$turbegin;
                        $turendarr[]=$turend;
                        $nnigtharr[]=$nnigth;
                        $daysarr[]=$nnigth+1;
                        
                        // break;
                    }
                }
            }
            // zend_debug::dump($dlprnamearr);
            // exit;
            // zend_debug::dump($dateendarr);
            // zend_debug::dump($nnigtharr);
            // exit;
            // if (!$hotelbool) {
                // $nnigth='Нет';
                // $turbegin='Нет';
                // $turend='Нет';
            // }
            
            
            //////////////В стоимость входит/ расчётный час start
            $rastcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $rastcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }
            $vstcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1119') {
                        $vstcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }            
            $rasttxt='';
            if ($rastcode>0) {
                $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                if (is_array($rast)) {
                    if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                }
            }
            $vsttxt='';
            if ($vstcode>0) {
                $vst=$privateofficemodel->getservicelist(1119,$vstcode,$dgcode);
                if (is_array($vst)) {
                    if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                }
            }
            $rastvsttxt='';
			
			$rasscharrZ = array();
			$rasscharrV = array();
			$vstoimostarr = array();
			
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($rasttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        $tmpa = explode(",",$rasttxt);
						$rasttxtZ=$tmpa[0];
						$rasttxtV=$tmpa[1];
						
						}
						
						
						
						$rasscharrZ[] =  $rasttxtZ;
						$rasscharrV[] =  $rasttxtV;
                    }
                    if ($row['DL_SVKEY']=='1119') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($vsttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='В стоимость входит  '.$vsttxt.'('.$turistlist_size.'),';
                        }
						$vstoimostarr[] = $vsttxt;
						
                    }
                }
            }
            if (strlen($rastvsttxt)==0) $rastvsttxt='Нет'; 
            //////////////В стоимость входит/ расчётный час end
            
            //////////////Трансфер / транспорт start
            $transfercode=0;
            $transfersubcode1=0;
            $transferbool=false;            
            $transferdate='';
            $transfertxt='';
            $transfer=false;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                    
                        $transferbool=true;
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transferdate=$row['DL_DATEBEG'];
                        if ($transferdate=='') $transferdate='1900-01-09 00:00:00';
                        if (strlen($transferdate)>0) {
                            $transferdate=date("d.m.Y", strtotime($transferdate));
                        } 
                        if ($transferbool) {
                            if (strlen($transfertxt)>0) $transfertxt.='<w:br w:type="text-wrapping"/>';
                            $transfertxt.=$transferdate.' : ';
                            $transfer=$privateofficemodel->gettransfer($transfercode);
                            $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                            if (is_array($transfer)) {
                                $transfertxt.=$transfer['TF_NAME'];
                            }
                            if( is_array($transpost)) {
                                $transfertxt.=' / '.$transpost['TR_NAME'];
								
								/*$transfertxt.= '(';
                                if ($transpost['TR_NMEN']) {
                                    $transfertxt.=$transpost['TR_NMEN'];
                                } else $transfertxt.=$turistlist_size;
                                $transfertxt.=')';*/
                            }
                            if (is_array($transfer)) {
                                $transfertxt.= ' / '.$transfer['TF_PLACEFROM'];
								
								$transfer_partner = $privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
								
								if($transfer_partner['PR_FAX']){
									$tel_arr = explode('-',$transfer['TF_NAMELAT']);
									if($tel_arr){
										switch(strtolower($tel_arr[0])){
											case 'встреча':
												$tel_text = 'Телефон встречающей стороны:';
												break;
											case 'проводы':
												$tel_text = 'Телефон провожающей стороны:';
												break;
										}
										$transfertxt.= ' / '.$tel_text.' '.$transfer_partner['PR_FAX'];
									}
								}
                            }

							
							
                        }
                    }                    
                }
            }            
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            //////////////Трансфер / транспорт end
            
            //////////////Экскурсии start
            $exurscode=0;
            $exursbool=false;            
            $exursdate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='4') {
                        $exursbool=true;
                        $exurscode=(int)$row['DL_CODE'];
                        $exursdate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $exurstxt='';
            if (strlen($exursdate)>0) {
                //$exursdate=date("d.m.Y G:i:s", strtotime($exursdate));
				$exursdate=date("d.m.Y", strtotime($exursdate));
            }
            if ($exursbool) {
                $exurstxt.=$exursdate.' ';
                $exurs=$privateofficemodel->getexurs($exurscode);
                if (is_array($transfer)) {
                    $exurstxt.=$exurs['ED_NAME'];
                }
                //$exurstxt.='('.count($turist).')';
            }
            if (strlen($exurstxt)==0) $exurstxt='Нет';
            //////////////Экскурсии end

			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='8' || $row['DL_SVKEY']=='8') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_SUBCODE2'];
                        $dopusldate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $dopusltxt='';
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt.=$dopusldate.' ';
                $dopusl=$privateofficemodel->gethoteldopusl($dopuslcode);
                if (is_array($dopusl)) {
                    $dopusltxt.=$dopusl['A2_NAME'];
                }
                //$dopusltxt.='('.count($turist).')';
            }
            
			//if (strlen($dopusltxt)==0) $dopusltxt='Нет';
            //////////////Доп услуга end
			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
			$dopusltxt1='';
            if (is_array($this->view->dogovorlist)) {
			reset($this->view->dogovorlist);
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1032' || $row['DL_SVKEY']=='1032') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_CODE'];
						$dopusldate=$row['DL_DATEBEG'];
                        //break;
                
            
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt1.= (($dopusltxt1!='')?'<w:br/>':'').$dopusldate.' ';
                $dopusl=$privateofficemodel->getdopusl($dopuslcode);
				
                
                    $dopusltxt1.=$dopusl['SL_NAME'];
                
             
            }
			    }                    
                }
            }   
            //if (strlen($dopusltxt1)==0) $dopusltxt1='Нет';
			$dopusltxt .= ((strlen($dopusltxt) > 0 && strlen($dopusltxt1) > 0)?'<w:br/>':'').$dopusltxt1;
			//echo  $dopusltxt; exit;
			if(strlen($dopusltxt) == 0) $dopusltxt = 'Нет';
			
			
			
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode,$dgcode);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                          //  $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';            
            //////////////Страховка end
            $datetec=date("d.m.y");
        } else {
            return $this->error(404);                
            exit;
        }
        // exit;
        $this->view->uskey=$uskey;
        $this->view->hotelbool=$hotelbool;
        // $this->view->dlprname=$dlprname;
        // $this->view->hoteldicttext=$hoteldicttext;
        // $this->view->roompansiontxt=$roompansiontxt;
        $this->view->rastvsttxt=$rastvsttxt;
        $this->view->transfertxt=$transfertxt;
        $this->view->straxtxt=$straxtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->turbegin=$turbegin;
        $this->view->turend=$turend;
        $this->view->dgcode=$dgcode;
        $this->view->exurstxt=$exurstxt;
        $this->view->datetec=$datetec;
        $this->view->dlprnamearr=$dlprnamearr;
        $this->view->hoteldicttextarr=$hoteldicttextarr;
        $this->view->roompansiontxtarr=$roompansiontxtarr;
		$this->view->hotelnamearr = $hotelnamearr;
		$this->view->hotelfreearr = $hotelfreearr;
		$this->view->hoteladdrarr = $hoteladdrarr;
		$this->view->hotelconditionarr = $hotelconditionarr;
		
        
        $this->view->turbeginarr=$turbeginarr;
        $this->view->turendarr=$turendarr;
        $this->view->nnigtharr=$nnigtharr;
        $this->view->daysarr=$daysarr;
        $this->view->turistlistarr=$turistlistarr;
        if (is_array($turist)) {
            foreach ($turist as $key=>$row) {
                $stline=$row['TU_NAMERUS'];
                if (strlen($row['TU_FNAMERUS'])>0) {
                    $stline.=' '.$row['TU_FNAMERUS'];
                }
                if (strlen($row['TU_SNAMERUS'])>0) {
                    $stline.=' '.$row['TU_SNAMERUS'];
                }
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $stline.=' '.date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                if (strlen($row['TU_PASPORTTYPE'])>0) {
                    $stline.=' '.$row['TU_PASPORTTYPE'];
                }
                if (strlen($row['TU_PASPORTNUM'])>0) {
                    $stline.=' '.$row['TU_PASPORTNUM'];
                }
				
				$fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turist[$key]['fio']=$fio;
  

                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turist[$key]['birthday']=$birthday;

  
				
				
                $turist[$key]['stline']=$stline;
            }
        }

        $this->view->turist=$turist;
        $this->view->type=$type;
        $this->view->countryname=$countryname;
		$this->view->cityname = $cityname;
		$this->view->rasscharrZ	  = $rasscharrZ;
		$this->view->rasscharrV	  = $rasscharrV;
		$this->view->vstoimostarr = $vstoimostarr;
		$this->view->dopusltxt =  $dopusltxt;
		$this->view->pansiontxtarr = $pansiontxtarr;
		$this->view->roomtxtarr = $roomtxtarr;

		$filename = 'voucher' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }

		
		
		
    }
//

public function changedstatusesAction() 
	{
openlog('[cron:privateoffice/changedstatuses]', LOG_ODELAY | LOG_PID, LOG_LOCAL0);
        $TimeOffset =  5; /// За кокаое прошедщее время брать статусы в минутах
		$this->setCfgLayout('empty');
        $privateofficemodel=$this->getModel('Privateoffice');
		$time =  mktime(date("H"), (date("i")-$TimeOffset) ,0,date("m"),date("j"),date("Y"));
//		$time =  mktime(0, 0,0,5,23,2012);
		$chstst  =  $privateofficemodel->getchangedstatuses($time);
		foreach($chstst as $sts)
		{
		$dgcode =  $sts['HI_DGCOD'];
		$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
if (!$dogovorinfo)  // Если путевка какая то левая то пропускаем
			{
             continue;
            }

            $masteruseremail=$dogovorinfo['DG_MAINMENEMAIL'];
            $fiomaster=$dogovorinfo['DG_MAINMEN'];

if ($masteruseremail) {
// Если есть старший по путевки то отправляем ему сообщение об изменении статуса
			$datasend=date("d.m.Y, H:i:s",time());
            $subject = 'Уведомление от компании МУЛЬТИТУР. Изменение статуса путевки № '.$dgcode;
            $ip=$_SERVER['REMOTE_ADDR'];
			
			$sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">';
            
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;Изменение статуса путевки № '.$dgcode.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время изменения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.date("d.m.Y H:i", strtotime($sts['HI_DATE'])).'</td></tr>'."\r\n";
			$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Старый статус:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$sts['HD_ValueOld'].'</td></tr>'."\r\n";
			$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Новый статус статус:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$sts['HD_ValueNew'].'</td></tr>'."\r\n";
		
			if($sts['HD_IntValueNew'] == 2)
			{
			$sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Причина аннуляции:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$dogovorinfo['AR_NAME'].'</td></tr>'."\r\n";
			}
		   $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время отправки</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>'."\r\n";
           $sendhtml.='</table>';
		   
		   echo 'Сообщение отправлено на адрес: '.$masteruseremail;
		   echo $sendhtml.'<hr>';
			
			
			
			$emaillist =  array();
            $emaillist[]= $masteruseremail;
			
            
            $subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
             
            
            if ($emaillist!=null) {
//			print_r($emaillist);
//			continue;
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
				/*	echo $emaillist[$i].'<br>';
					echo $subjectmail.'<br>';
					echo $sendhtml.'<br>';
					echo $headers.'<br>';*/
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            syslog(LOG_ERR, 'ERROR: При отправке сообщения возникла ошибка. Mail: '.$emaillist[$i]);
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                            syslog(LOG_ERR, 'OK: Сообщение на E-mail успешно отправлено. Mail: '.$emaillist[$i]);
                    }
                }
            }
        }        			
		}
		
		
        closelog();
    }
    
    
public function adminmessdetailAction()
    {
		
	$crdate = 	(string)$this->_getParam('crdate','');
	if($crdate)
		{
		$crdate = strtotime($crdate);
		if($crdate) 
			{
				
				$crdate = date('d.m.Y',$crdate);
			}  else $crdate = '';
		
		}
	$filter = array(
	'crdate' => $crdate,
	'subject' => (string)$this->_getParam('subject',''),
	'dgcode' => (string)$this->_getParam('dgcode',''),
	'msgtxt' => (string)$this->_getParam('msgtxt','')
	);	
	
	
		
		
	$sadmin = false;
	$sendername = 'Администратор';
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager' && $usertype!='meneger') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        $privateofficemodel = $this->getModel('Privateoffice');
		if($usertype == 'meneger')
        {    
            if (isset($uslogin)) {
                preg_match('/^meneger_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $managermodel = $this->getModel('Managers');
                $managerinfo=$managermodel->getmanagerbylogin($uslogin);
                $uskey = $managerinfo['manag_usid'];
				$sendername = $managerinfo['cur_fio_position'];
				
				
            }
        } elseif($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey = $curatorinfo['cur_usid'];
				$sendername = $curatorinfo['cur_fio_position'];
				
				
            }
        }
        else
        {
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
        $login = (string)$this->_getParam('login','');
        
		if (!preg_match("/^[a-zA-Z0-9]{1,20}$/", $login)) {
            $login='';
        }
		
        if ($login=='') {
            if (!headers_sent()) {
                header('Location: /privateoffice/logout');
            }
            exit;
        }
		//
	
	
	
	if($usertype == 'manager') 
	{
	
		$admins =  array(323,446); // Кураторы имеющие возможность редактировать минифорум
		if($this->domen == 'ua') $admins =  array(503,489);
		if(in_array($uskey , $admins)) $sadmin =  true;
	} else
	{
		$admins =  $admins =  array(1,3,4,15,17);// Администраторы имеющие возможность редактировать минифорум
		if($this->domen == 'ua') $admins =  array(1,3,4,15,17);
		if(in_array($uskey , $admins)) $sadmin =  true;
	}
		
		
		
		
		
        //сделать просмотренными
        $viewed = (string)$this->_getParam('viewed', 0);
        if ($viewed != 1) $viewed=0;
        // if ($viewed) {
            // $privateofficemodel->setmesslistbyusidviewedadm($login);
        // }
        $userinfo = $privateofficemodel->getuserinfobylogin($login);
        if (!$userinfo) {
            if (!headers_sent()) {
                header('Location: /privateoffice/adminmess/');
            }
            exit;
        }
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
		
			$postaction = (string)$this->_getParam('postaction', '');
            $id_parent=(int)$this->_getParam('id_parent', '');
            $subject = (string)$this->_getParam('subject', '');
            $message = (string)$this->_getParam('message', '');
			$subject = htmlspecialchars(strip_tags(trim(substr($subject, 0, 1024))));
            $message = htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))));
            $message = str_replace('\'', '', $message);
            $subject = str_replace('\'', '', $subject);
            $subject = str_replace("\n", '', $subject);
            $subject = str_replace("\r", '', $subject);
  
            $usid = $userinfo['US_ID'];
            $params = array();
            $params['usidfrom'] = $uslogin; //'admin';
            $params['usidto'] = $usid;
            $ip_int = $this->ip2int($_SERVER['REMOTE_ADDR']);
            $params['ip'] = $ip_int;
            $timestamp = time();
            $params['time'] = $timestamp;
            $params['idmess_parent'] = $id_parent;
            $params['status'] = 1;
            $params['subject'] = $subject;
            $params['message'] = $message;
            $params['remark']='';
            $params['messtype'] = 'MTC';
			
		// Получить корневое сообщение и определить а не к путевке ли оно?
		$parentmess = $privateofficemodel->getmessagebyid($id_parent);
		
		$subject = ($subject == '')?$parentmess['subject']:$subject;
			
			
		// Отправка сообщения	
		$site = 'www.multitour.ru';
		if($this->domen=='ua') $site = 'www.multitur.ua';
			$datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
			$emailfrom='noreply@multitour.ru';
            
			 $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение из личного кабинета от компании МУЛЬТИТУР</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;';
				   //<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a>
			$sendhtml.=  $sendername;
			$sendhtml.='	   </td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.
				   (($parentmess['numb'])?'<a href="http://'.$site.'/privateoffice/userinfo/dogovor?code='.$parentmess['numb'].'">'
				   .stripslashes($subject).'</a>':stripslashes($subject)).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($message).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table>';
			$sendhtml.= $this->mail_text_bottom;
			
			
			
            $emaillist[]= $usemail;
			
            
            $subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
             
            $exit = false;
            if ($emaillist!=null) {
                for ($i=0;$i<count($emaillist);$i++) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
                            $exit = true;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                    }
                }
            }
			
			
			if($postaction == 'add')
			{
			$privateofficemodel->addmess($params);
            //$privateofficemodel->setmesslistbyusidviewedadmbyparentid($login,$id_parent);
			$privateofficemodel->setmessreadbyparent($id_parent, 'usidfrom');
            if (!headers_sent()) {
            // zend_debug::dump($message);
            // exit;
                header('Location: /privateoffice/adminmessdetail/?login=' . $login);
            }
		    $exit = true;
			}
			if($postaction == 'del' && $sadmin)
			{
                

			if($id_parent)
				{
				$privateofficemodel->deletemess($params);
				if (!headers_sent()) {
                header('Location: /privateoffice/adminmessdetail/?login=' . $login);
				}
				$exit = true;
				}
			} 
			
			if($postaction == 'save' && $sadmin)
			{
			if($id_parent)
				{
				$privateofficemodel->savemess($params);
				if (!headers_sent()) {
                header('Location: /privateoffice/adminmessdetail/?login=' . $login);
				}
				$exit = true;
				}
			} 
			
		if($exit){
		    exit;
		}
        }
		$this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('kol', 10);
        
		$messlist = $privateofficemodel->getmesslistbyusidadm($login,	$this->view->page, $this->view->kol, 'p0', $filter);
		$this->view->messlist = $messlist['mess'];
		$this->view->messcount = $messlist['count'];
		
		
        $this->view->userinfo = $userinfo;
        $this->view->login = $login;
        $this->view->sadmin = $sadmin; // Супер админ.	
		$this->view->filter = $filter;
    }
	
	//
	public function votesAction()
    {
	$this->setCfgLayout('page');
	$this->authsecure();
    $uskey=$this->getuskeyinsession();
    $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
		
	
		 
	if($usertype != 'user') {
	$disp = 'admin';
	$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
    Zend_Registry::set('page_actives', $page_actives);
	} else 
	{
	$type  = 1;
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
	}
	
	
        $position = (string)$this->_getParam('position');

		


         

		if ($_SERVER['REQUEST_URI']=='/votes/') $typesend=2;
        else $typesend=0;


        $VotesModel = $this->getModel('Votes');
        $data = $VotesModel->getByParams(Array('whr'=>Array('vis'=>1, 'start'=>Array('<='=>date('Y-m-d')))));
        if (!$data) return $this->clear();

		$this->view->ustype = $usertype;
        $this->view->data = $data;
        $this->view->typesend = $typesend;
    }
	//
	 public function voteAction() {
	$this->authsecure();
    $uskey=$this->getuskeyinsession();
	
    $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
		
    $disp = '';
	if($usertype != 'user') {
	$disp = 'admin';
	}
	
	
	
	
    $typesend = (int)$this->_getParam('typesend');
		$vote = (Object)$this->_getParam('vote');
        if (!isset($vote->id))
        {
            $voteId = (int)$this->_getParam('voteId');
            if (!$voteId) return $this->clear();
            $VotesModel = $this->getModel('Votes');
            $vote = (Object)$VotesModel->getOneById($voteId);
            if (!isset($vote->id)) return $this->clear();
        }
        $voteId = $vote->id;

      
        $dcr = $this->_getParam('dcr');

        $VoteModel = $this->getModel('Vote');
        $variants = $VoteModel->getByParams(Array('whr'=>Array('parent_id'=>$voteId, 'vis'=>1)));

		$log = $this->getModel('Log');
		$usansw = $log->checkUser($voteId,$uskey);

		//isset($_COOKIE['vote_'.$voteId]) || 
        if( $usansw !=0 || $disp=='admin' || strtotime($vote->finish) < time()) 
		{ 
		$data = $log->getManAnswers($voteId);
		if($data) $variants[] = array("counter"=>$data[0]['count'], "name"=> "Свой вариант");
		$this->setView('voteview');
		}
		
		$this->view->voteid = $voteId; 
        $this->view->vote = $vote;
        $this->view->variants = $variants;
        $this->view->dcr = $dcr;
        $this->view->disp = $disp;
    }
	///
	public function votesendAction()
    {
	$this->authsecure();
    $uskey=$this->getuskeyinsession();
    $boss=$this->getbossinsession();
    $status=$_SESSION['s_status'];
    $usertype = $this->getusertypeinsession();
	
	
		if (isset($_POST['parent_id']) && $usertype=='user')
        {
            $voteId = $_POST['parent_id'];
			$vote =   $_POST['vote'];
			$description =   $_POST['description'];
			$LogModel = $this->getModel('Log');
			$usansw = $LogModel->checkUser($voteId,$uskey);
			
            if ($usansw == 0)
            {	

                $info = Array(
					'sid' =>$_COOKIE['sid'],
                    'parent_id'=>$voteId,
                    'description'=>'',
                    'date'=>date('Y-m-d H:i:s'),
					'uskey'=> (int) $uskey,
                );
				
				$VoteModel = $this->getModel('Vote');
                $variants = $VoteModel->getByParams(Array('whr'=>Array('parent_id'=>$voteId)));
				foreach($vote as $variant){
					$VoteModel->increase('counter', $variant);
					$info['variant'] = $variant;
					if(isset($description[$variant])){
						$info['description'] = $description[$variant];
					} else {
						$info['description'] = '';
					}
					$LogModel->add($info);
				}
				
                setcookie('vote_'.$voteId, 1, time()+60*60*24*3000, '/');
                
            }
			
			header('Location: /vote/?voteId='.$voteId);
            die();
         
        }
    }
	//
	public function voteviewadmAction()
    {
	
	$this->authsecure();
    $uskey=$this->getuskeyinsession();
    $boss=$this->getbossinsession();
    $status=$_SESSION['s_status'];
    $usertype = $this->getusertypeinsession();
    
	
	$this->setCfgLayout('page');
	
	$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
    Zend_Registry::set('page_actives', $page_actives);
	
		if ($usertype=='user') {header("Location:/votes/"); die;}
        
        $voteId = (int)$this->_getParam('voteid');
		
		if (!$voteId) return $this->clear();
		
	
            $VotesModel = $this->getModel('Votes');
            $vote = (Object)$VotesModel->getOneById($voteId);
	
            if (!isset($vote->id)) return $this->clear();
		
		
		/*
        $log = $this->getModel('Log');
        $data = $log->getGroupAnswers($voteId);*/
		
		$VoteModel = $this->getModel('Vote');
		$data = $VoteModel->getAllStat($voteId);
		
		$this->view->data = $data;
		$this->view->voteid = $voteId; 
        $this->view->vote = $vote;
    }
//////////// ANKETA 2012
public function anketa2012Action() {
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
        $res=$this->anketaform2012();
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
        else $posttemp=array();
        $this->view->posttemp=$posttemp;
        $this->view->data=array();
    }
    public function anketasend2012Action() {
         $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		
		
        $res=$this->anketaform2012();
        $vopros=$res['vopros'];
        $voprosvar=$res['voprosvar'];
        $voprosvarother=$res['voprosvarother'];
        $voprosvartype=$res['voprosvartype'];
        
        
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $_SESSION['posttemp']['error']=array();
            $_SESSION['posttemp']['errorex']=array();
            $valid=true;
            if (isset($_POST['company'])) {
                $company=htmlspecialchars(strip_tags(trim(substr($_POST['company'],0,1024))));
                if (strlen($company)>0)
                    $_SESSION['posttemp']['company']=$company;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['company']=$company;
                    $_SESSION['posttemp']['errorex']['company']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['company']=1;
            }
            if (isset($_POST['cityname'])) {
                $cityname=htmlspecialchars(strip_tags(trim(substr($_POST['cityname'],0,1024))));
                
                if (strlen($cityname)>0)
                    $_SESSION['posttemp']['cityname']=$cityname;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['cityname']=$cityname;
                    $_SESSION['posttemp']['errorex']['cityname']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['cityname']=1;
            }
            if (isset($_POST['fio'])) {
                $fio=htmlspecialchars(strip_tags(trim(substr($_POST['fio'],0,1024))));
                if (strlen($fio)>0)
                    $_SESSION['posttemp']['fio']=$fio;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['fio']=$fio;
                    $_SESSION['posttemp']['errorex']['fio']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['fio']=1;
            }
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,1024))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='radio') {
                                if (isset($_POST['vopros_'.$numvopros])) {
                                    $value=(int)$_POST['vopros_'.$numvopros];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,4048))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $checkbox1=array();  //Существующие chekbox
            $checkbox2=array();  //Заполненные checkbox
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } 
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            }                         
                        }
                    }
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (!isset($checkbox1[$numvopros])) $checkbox1[$numvopros]=1;
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    if (!isset($checkbox2[$numvopros][$numvar])) $checkbox2[$numvopros][$numvar]=1;
                                    
                                }
                            }
                        }
                    }
                }
            }
            foreach ($checkbox1 as $numvopros=>$row) {
                if (!isset($checkbox2[$numvopros])) {
                    if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                        $_SESSION['posttemp']['error'][$numvopros]=1;
                }
            }
//            zend_debug::dump($_GET);
//            zend_debug::dump($_POST);
            //if (isset($_POST['step2'])) {
            
                $galkavalid=false;
                $kolvoerr=0;
                if (isset($_SESSION['posttemp']['error'])) {
                    //echo 'count($_SESSION[ ='.$_SESSION['posttemp']['error'];
                    //exit;
                    if (count($_SESSION['posttemp']['error'])<26) $galkavalid=true;
                } else $galkavalid=true;
                if (isset($_SESSION['posttemp']['errorex']) ) {
                    if (count($_SESSION['posttemp']['errorex'])>0) $galkavalid=false;
                }
                if ($galkavalid && isset($_SESSION['posttemp']['error'])) {
                    $valid=true;
//                    echo 'Второй шаг = '.count($_SESSION['posttemp']['error']);
                }
            //}
            if (!$valid) {
                if (!headers_sent()) {
                    header('Location: /anketa2012/');
                    exit;
                }
            } else {
                $ip=$_SERVER['REMOTE_ADDR'];
                //$fieldvalue=$_POST;
                $fieldvalue=array();
                foreach ($_POST as $key=>$row) {
                    $fieldvalue[$key]=htmlspecialchars(strip_tags(trim(substr($row,0,4096))));
                }
                $senddb=serialize($fieldvalue);
                $senddb=addslashes($senddb);
                $timestamp=time();
//                echo 'Отправляем письмо';
                
                $datasend=date("d.m.Y, H:i:s");
                $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
                $send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                    <tr><th colspan="2">Анкета для агентств 2012</th></tr>
                ';         
                if (isset($fieldvalue['company']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Название вашей компании:</b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['company']).'</td></tr>';
                if (isset($fieldvalue['cityname']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Город: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['cityname']).'</td></tr>';
                if (isset($fieldvalue['fio']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Контактное лицо: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['fio']).'</td></tr>';
                        
                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Количество отвеченных вопросов: </b></td>'.
                    '<td>&nbsp;&nbsp;&nbsp;'.(26-count($_SESSION['posttemp']['error'])).'</td></tr>';
////////////////////////////////                        
//                zend_debug::dump($fieldvalue);
                        
                foreach ($vopros as $numvopros=>$textvopros) {
                    $send.='<tr><td width="49%">
                        <b>'.$numvopros.'. '.$textvopros.'</b></td><td>';
                    if (isset($voprosvar[$numvopros])) {
                        foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                            if (isset($voprosvartype[$numvopros][$numvar])) {
                                if (strpos($textvar,'%%inputother%%')!==false) {
                                    if (isset($voprosvarother[$numvopros][$numvar])) {
                                        $inputother='';
            //                            $inputother='<input name="vopros_'.$numvopros.'_'.$numvar.'_other" value="';
                                        
                                        if (isset($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                            if ($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']=='')
                                                $inputother='<u>не указано</u>';
                                            else 
                                                $inputother='<u>'.stripslashes($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']).'</u>';
                                        } 
                                        
                                        
                                        // if (isset($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']))
                                            // $inputother.=stripslashes($this->posttemp['vopros_'.$numvopros.'_'.$numvar.'_other']);
                                        // else 
                                            // $inputother.=$voprosvarother[$numvopros][$numvar]['value'];
                                            
                                        
                                        // $inputother.='" type="'.
                                            // $voprosvarother[$numvopros][$numvar]['type'].'" size="'.$voprosvarother[$numvopros][$numvar]['size'].'">';
                                        $textvar=str_replace('%%inputother%%',$inputother,$textvar);
                                    }
                                }
                                if ($voprosvartype[$numvopros][$numvar]['type']=='radio') $fieldname='vopros_'.$numvopros;
                                else $fieldname='vopros_'.$numvopros.'_'.$numvar;
                                
                                if ($voprosvartype[$numvopros][$numvar]['type']=='text') $size=' size="'.$voprosvartype[$numvopros][$numvar]['size'].'"';
                                else $size='';
                                $prefixid='';
                                $validate='';
                                if ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                    if (isset($fieldvalue[$fieldname]))
                                        if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                        else $send.='<u>не указано</u>';
                                    // $send.='<textarea name="'.$fieldname.'" style="width: 500px; height: 200px;">';
                                    // if (isset($this->posttemp[$fieldname])) $send.=stripslashes($this->posttemp[$fieldname]);
                                    // else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                    // $send.='</textarea><br/>'."\r\n";
                                }
                                else {
                                    if ($voprosvartype[$numvopros][$numvar]['type']!='text') {
                                        $send.='<input '.$validate.'name="'.$fieldname.'" value="';
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                $send.=stripslashes($fieldvalue[$fieldname]);
                //                                $send.=stripslashes($this->posttemp[$fieldname]);
                                            }
                                        } else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                        $send.='" type="'.$voprosvartype[$numvopros][$numvar]['type'].'"'.$size.$prefixid;
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='radio' 
                                            || $voprosvartype[$numvopros][$numvar]['type']=='checkbox') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                if ($fieldvalue[$fieldname]==$numvar) {
                                                    $send.=' checked="checked"';
                                                } else {
                                                    $send.=' disabled';
                                                }
                                            } else {
                                                $send.=' disabled';
                                            }
                                        }
                                        $send.='> '.$textvar.'<br/>'."\r\n";
                                    } else {
              //                          echo '$fieldname = '.$fieldname.'<br>';
                                        if (isset($fieldvalue[$fieldname])) {
                                            $fieldvalue[$fieldname]=trim($fieldvalue[$fieldname]);
            //                                echo 'strlen($fieldvalue[$fieldname]) = '.strlen($fieldvalue[$fieldname]).'<br>';
                                            if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                            else $send.='<i>Не заполнено</i>&nbsp;';
                                        } else $send.='<i>Не заполнено</i>&nbsp;';
                                    }
                                }
                            }
                        }
                    }
                    $send.=' </td></tr>';
                }                        
                        
                        
/////////////////////////////                        
                        
//                <tr><th>Тип</th><th>Поле</th></tr>
                
//                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>'.$fieldtype[$key1].'</b></td>';
//                $send.='<td>&nbsp;&nbsp;&nbsp;'.$val.'</td><td>&nbsp;&nbsp;&nbsp;'.$post[$key2].'</td></tr>';

                
                $send.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>';
                
                $send.='</table>';
                
//                echo $send;
//                exit;
                
                function utf8_to_cp12511($str) {
                    $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                    return $encoded_data;
                }        
                $send=utf8_to_cp12511($send);
        
                // $emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='agent@multitour.ru';
                $emaillist[]='semenov@multitour.ru';
                $emailfrom='noreply@multitour.ru';
                $subject=utf8_to_cp12511('Анкета для агентств');
                
                
      // $mail = new Zend_Mail();
      // $mail->setBodyText('This is the text of the mail.');
      // $mail->setFrom('noreply@multitour.ru', 'Some Sender');
      // $mail->addTo('elkin@multitour.ru', 'Some Recipient');
      // $mail->setSubject($subject);
      // $mail->send();                
//        echo 'Сообщение отправлено ';
                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        $headers="From: \"".utf8_to_cp12511('Анкета для агентств')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                        $headers.="Content-Type: text/html; charset=windows-1251\n";
                        $headers.="Content-Transfer-Encoding: 8bit";
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subject,$send,$headers);
                        if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                        } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        }
                    }
                }
                
                $othermodel=$this->getModel('Other');
                $othermodel->sendanketa2012($senddb,$timestamp,$ip);
                session_destroy();
          
                if (!headers_sent()) {
                    header('Location: /anketasend2012/');
                    exit;
                }
            }
            exit;
        } else {
         
        }
    }
    public function anketaresult2012Action() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
//        session_start();
//        $this->setCfgLayout('base');
        $res=$this->anketaform2012();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketares2012();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
    }

public function anketaform2012() {
        
$numvopros=1;
        $vopros[$numvopros]='Насколько удобен и понятен для Вас Личный кабинет на сайте компании «МУЛЬТИТУР»? Чтобы хотелось изменить/дополнить';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Неудобен. Есть значительные недоработки, хотелось бы внести дополнения/изменения (укажите какие) %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2 ; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
					
//
$numvopros=2;
        $vopros[$numvopros]='Насколько удобно и понятно для Вас новое on-line бронирование на сайте компании «МУЛЬТИТУР»? Чтобы хотелось изменить/дополнить';
            $voprosvar[$numvopros][1]='Вполне удобно';
            $voprosvar[$numvopros][2]='Неудобно. Есть значительные недоработки, хотелось бы внести дополнения/изменения (укажите какие) %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2 ; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
//
$numvopros=3;
        $vopros[$numvopros]='Пользуетесь ли Вы «Подбором туров» на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Постоянно';
            $voprosvar[$numvopros][2]='Редко, но пользуюсь';
            $voprosvar[$numvopros][3]='Пользуюсь ценовыми таблицами';
            $voprosvar[$numvopros][4]='Не пользуюсь, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
//

$numvopros=4;
        $vopros[$numvopros]='Пользуетесь ли Вы дополнительными параметрами при поиске необходимого тура в «Каталоге отелей» или «Подборе туров»?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Нет';
            $voprosvar[$numvopros][3]='Не знали, что есть подбор по дополнительным параметрам';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
        
$numvopros=5;
        $vopros[$numvopros]='Какими вариантами подбора санаторно-курортного лечения  Вы пользуетесь?';
            $voprosvar[$numvopros][1]='Дополнительными параметрами в подборе туров или в каталоге туров';
            $voprosvar[$numvopros][2]='Страница Санаторно-курортное лечение';
            $voprosvar[$numvopros][3]='Никакими';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                
$numvopros=6;
        $vopros[$numvopros]='Какими разделами сайта компании «МУЛЬТИТУР» Вы пользуетесь  для поиска туров чаще всего?';
            $voprosvar[$numvopros][1]='Подбор туров';
            $voprosvar[$numvopros][2]='Каталог отелей';
            $voprosvar[$numvopros][3]='Он-лайн бронирование';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
        
$numvopros=7;
        $vopros[$numvopros]='Насколько удобен и понятен для Вас формат спецпредложений  на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Неудобен';
            $voprosvar[$numvopros][3]='Есть значительные недоработки (укажите какие) %%inputother%%';
            
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
$numvopros=8;
        $vopros[$numvopros]='Пользуетесь ли Вы услугами наших авиа и ж/д касс?';
            $voprosvar[$numvopros][1]='Только авиа';
            $voprosvar[$numvopros][2]='Только ж/д';
            $voprosvar[$numvopros][3]='Да, и авиа и ж/д';
            $voprosvar[$numvopros][4]='Не пользуемся, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=9;
        $vopros[$numvopros]='Какой вид транспорта в основном был выбран Вашими туристами при бронировании летних туров в Крым в 2012 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт';
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)';
            $voprosvar[$numvopros][3]='Поезд';
            $voprosvar[$numvopros][4]='Личный автомобиль';
            $voprosvar[$numvopros][5]='Автобус компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][6]='Автобусы других компаний';
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                
$numvopros=10;
        $vopros[$numvopros]='Какой вид транспорта в основном  был выбран Вашими туристами при бронировании летних туров в Краснодарский край в 2012 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт'; 
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)'; 
            $voprosvar[$numvopros][3]='Поезд'; 
            $voprosvar[$numvopros][4]='Личный автомобиль'; 
            $voprosvar[$numvopros][5]='Автобус компании «МУЛЬТИТУР»'; 
            $voprosvar[$numvopros][6]='Автобусы других компаний'; 
                for ($i=1; $i<=6; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

///
$numvopros=11;
        $vopros[$numvopros]='Какой вид транспорта в основном  был выбран Вашими туристами при бронировании летних туров в Кавказские Минеральные воды в 2012 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт'; 
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)'; 
            $voprosvar[$numvopros][3]='Поезд'; 
            $voprosvar[$numvopros][4]='Личный автомобиль'; 
            
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

$numvopros=12;
        $vopros[$numvopros]='Какой вид транспорта в основном был выбран Вашими туристами при бронировании летних туров в Калининградскую область в 2012 г.? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Самолёт'; 
            $voprosvar[$numvopros][2]='Самолёт (гарантированные блоки мест компании «МУЛЬТИТУР»)'; 
            $voprosvar[$numvopros][3]='Поезд'; 
            $voprosvar[$numvopros][4]='Личный автомобиль'; 
            
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

$numvopros=13;
        $vopros[$numvopros]='Бронировали ли Вы туры по новым направлениям компании «МУЛЬТИТУР» - Краснодарский Край (Ейск, Темрюк)?';
            $voprosvar[$numvopros][1]='Да';
            $voprosvar[$numvopros][2]='Не бронировали, не знали о новых направлениях';
            $voprosvar[$numvopros][3]='Нет, потому что %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		

$numvopros=14;
        $vopros[$numvopros]='Присутствовали ли Вы на вебинарах, проведенных компанией «МУЛЬТИТУР» ?';
            $voprosvar[$numvopros][1]='Да, присутствовали в режиме он-лайн (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][2]='Смотрели в архиве (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][3]='Не знали, что их проводили';
			$voprosvar[$numvopros][4]='Не присутствовали, потому что %%inputother%%';
                $voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);					

$numvopros=15;
        $vopros[$numvopros]='Насколько были полезны и интересны для Вас наши вебинары?';
            $voprosvar[$numvopros][1]='Были полезны, информация подавалась доступно и интересно';
            $voprosvar[$numvopros][2]='Вебинары не понравились, потому что %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		

					
$numvopros=16;
        $vopros[$numvopros]='Вебинары по каким направлениям вы бы хотели  прослушать в 2013 году ?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

                    
$numvopros=17;
        $vopros[$numvopros]='Какой вариант «Договора реализации туристского продукта» Вы заключаете с Заказчиком туристского продукта (туристом)?';
            $voprosvar[$numvopros][1]='Вариант договора, рекомендованный компанией  «МУЛЬТИТУР» и размещённый на сайте компании';
            $voprosvar[$numvopros][2]='Вариант договора, рекомендованный иным (и) туроператором (и)  (укажите каким), по какой причине?  %%inputother%%';
            $voprosvar[$numvopros][3]='Вариант договора, разработанный самостоятельно';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=18;
        $vopros[$numvopros]='Насколько компетентными Вам показались ответы кураторов на телефонные звонки?';
                $voprosvar[$numvopros][1]='Достаточно компетентны';
                $voprosvar[$numvopros][2]='Компетентны, но хотелось бы подробнее';
                $voprosvar[$numvopros][3]='Абсолютно не компетентны';
                $voprosvar[$numvopros][4]='Не звонили, достаточно информации на сайте';
                $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
                    
$numvopros=19;
        $vopros[$numvopros]='Как долго приходилось ждать соединения с сотрудником «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Недолго';
            $voprosvar[$numvopros][2]='Приходилось ждать несколько минут';
            $voprosvar[$numvopros][3]='Очень долго, приходилось перезванивать по несколько раз';
            $voprosvar[$numvopros][4]='Ждали недолго, но часто неправильно соединяли';
            $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=20;
        $vopros[$numvopros]='Как Вы оцениваете ответы операторов компании «МУЛЬТИТУР» в Личном кабинете, по icq, skype, чат-вопрос?';
            $voprosvar[$numvopros][1]='Ни разу не прибегали к их помощи';
            $voprosvar[$numvopros][2]='Быстрые и оперативные ответы';
            $voprosvar[$numvopros][3]='Не получали ответов на поставленные вопросы';
            $voprosvar[$numvopros][4]='Другое %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=21;
        $vopros[$numvopros]='Как Вам наиболее удобно получать консультации кураторов компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='В Личном кабинете';
			$voprosvar[$numvopros][2]='По телефону';
            $voprosvar[$numvopros][3]='Консультируемся по icq';
            $voprosvar[$numvopros][4]='Используем в работе Skype';
            $voprosvar[$numvopros][5]='Общаемся только по электронной почте';
            $voprosvar[$numvopros][6]='Всю информацию видим на сайте';
            $voprosvar[$numvopros][7]='On-line переписка (чат)';
                for ($i=1; $i<=7; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=22;
        $vopros[$numvopros]='Что по Вашему мнению наиболее стимулирует работу Вашего агентства? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Повышение агентского вознаграждения';
            $voprosvar[$numvopros][2]='Личные призы менеджеру';
            $voprosvar[$numvopros][3]='Бонусные предложения';
            $voprosvar[$numvopros][4]='Надежность и четкость работы компании';
            $voprosvar[$numvopros][5]='Четкий документооборот';
            $voprosvar[$numvopros][6]='Удобный сайт';
            $voprosvar[$numvopros][7]='Удобная система on-line бронирования';
			$voprosvar[$numvopros][8]='Удобный Личный кабинет';
            $voprosvar[$numvopros][9]='Широкий ассортимент туров';
            $voprosvar[$numvopros][10]='Другое %%inputother%%';
                $voprosvarother[$numvopros][10]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=10; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
//
$numvopros=23;
        $vopros[$numvopros]='Участвуете ли вы в акции «Мультибонус»?';
            $voprosvar[$numvopros][1]='Участвуем';
            $voprosvar[$numvopros][2]='Не знали, что есть такая акция';
            $voprosvar[$numvopros][3]='Не участвуем, потому что %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
$numvopros=24;
        $vopros[$numvopros]='Участвуете ли вы в ежегодной традиционной для компании «МУЛЬТИТУР» акции «Раннее бронирование»? Влияет ли участие в данной акции на увеличение продаж Вашей компании?';
            $voprosvar[$numvopros][1]='Участвуем, повышенные скидки стимулируют наших клиентов на раннюю покупку летних туров';
            $voprosvar[$numvopros][2]='Участвуем только чтобы получить повышенное комиссионное вознаграждение, на увеличение продаж нашим клиентам летних туров акция не влияет';
            $voprosvar[$numvopros][3]='Не знали, что есть такая акция';
            $voprosvar[$numvopros][4]='Не участвуем, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);					
//
$numvopros=25;
        $vopros[$numvopros]='Какие новые направления или объекты размещения Вы хотели бы увидеть в наших предложениях?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

$numvopros=26;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с положительной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
$numvopros=27;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с отрицательной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
$numvopros=28;
        $vopros[$numvopros]='В каком формате вы хотели бы получать рассылку от компании «МУЛЬТИТУР» в сезоне 2013 г.?';
            $voprosvar[$numvopros][1]='Устраивает рассылка';
            $voprosvar[$numvopros][2]='Мы не получаем рассылку от компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][3]='Один информационный бюллетень по всем направлениям';
            $voprosvar[$numvopros][4]='Читать сообщения в twitter';
            $voprosvar[$numvopros][5]='Ваши пожелания %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
$numvopros=29;
        $vopros[$numvopros]='Как в целом Вы оцениваете работу компании «МУЛЬТИТУР» в сезоне 2012 г.?';
            $voprosvar[$numvopros][1]='Отлично';
            $voprosvar[$numvopros][2]='Хорошо';
            $voprosvar[$numvopros][3]='Удовлетворительно (укажите почему) %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
     
$numvopros=30;
        $vopros[$numvopros]='С какими еще операторами Вы работаете по направлениям внутреннего туризма? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Астравел';
			$voprosvar[$numvopros][2]='Дельфин';
            $voprosvar[$numvopros][3]='Звездный путь';
			$voprosvar[$numvopros][4]='Криптон';
			$voprosvar[$numvopros][5]='РВБ-Алеан';
            $voprosvar[$numvopros][6]='Роза ветров';
			$voprosvar[$numvopros][7]='Ориент';
			$voprosvar[$numvopros][8]='Русский Экспресс';
            $voprosvar[$numvopros][9]='СНП';
            $voprosvar[$numvopros][10]='Солвекс';
			$voprosvar[$numvopros][11]='Ориент';
            $voprosvar[$numvopros][12]='Орфей';
			$voprosvar[$numvopros][13]='Черри-тур';
            
            $voprosvar[$numvopros][14]='Другие %%inputother%%';
                $voprosvarother[$numvopros][14]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=14; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
                    
/*
$numvopros=32;
        $vopros[$numvopros]='Какие порталы Вы используете в Вашей профессиональной деятельности? (возможно несколько вариантов ответов)';
		
		$voprosvar[$numvopros][1]='Турдом tourdom.ru';
		$voprosvar[$numvopros][2]='Турпрофи tourprofi.ru';
		$voprosvar[$numvopros][3]='Тонкости tonkosti.ru';
		$voprosvar[$numvopros][4]='Рата rostourunion.ru';
		$voprosvar[$numvopros][5]='АТОР atorus.ru';
		
        $voprosvar[$numvopros][6]='Другое %%inputother%%';
                $voprosvarother[$numvopros][6]=array('size'=>'20','type'=>'text','value'=>'');
         for ($i=1; $i<=6; $i++) 
         $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
$numvopros=33;
        $vopros[$numvopros]='Какие печатные туристические издания Вы используете в Вашей профессиональной деятельности? (возможно несколько вариантов ответов)';
		
		
		$voprosvar[$numvopros][1]='Туринфо журнал';
		$voprosvar[$numvopros][2]='Travel Trade журнал';
		$voprosvar[$numvopros][3]='Тонкости журнал';
		$voprosvar[$numvopros][4]='Турбизнес журнал';
		
		$voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                
				for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);					
			*/
$numvopros=31;
        $vopros[$numvopros]='Если у Вас есть какие-то пожелания, вопросы или замечания укажите их: ';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'textarea','value'=>'','size'=>'70');					
						
			
        $res=array();
        $res['vopros']=$vopros;
        $res['voprosvar']=$voprosvar;
        $res['voprosvarother']=$voprosvarother;
        $res['voprosvartype']=$voprosvartype;
        return $res;
}
//
//////////// ANKETA 2013
public function anketa2013Action() {
        
		$this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		$change_doc = FALSE;
		if(in_array($this->view->userinfo['US_PRKEY'], $this->agent_change_doc)){
			$change_doc = TRUE;
		}
		$this->view->change_doc = $change_doc;
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
        $res=$this->anketaform2013();
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
        else $posttemp=array();
        $this->view->posttemp=$posttemp;
        $this->view->data=array();
    }
    public function anketasend2013Action() {
         $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		
		
        $res=$this->anketaform2013();
        $vopros=$res['vopros'];
        $voprosvar=$res['voprosvar'];
        $voprosvarother=$res['voprosvarother'];
        $voprosvartype=$res['voprosvartype'];
        
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $_SESSION['posttemp']['error']=array();
            $_SESSION['posttemp']['errorex']=array();
            $valid=true;
            if (isset($_POST['company'])) {
                $company=htmlspecialchars(strip_tags(trim(substr($_POST['company'],0,1024))));
                if (strlen($company)>0)
                    $_SESSION['posttemp']['company']=$company;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['company']=$company;
                    $_SESSION['posttemp']['errorex']['company']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['company']=1;
            }
            if (isset($_POST['cityname'])) {
                $cityname=htmlspecialchars(strip_tags(trim(substr($_POST['cityname'],0,1024))));
                
                if (strlen($cityname)>0)
                    $_SESSION['posttemp']['cityname']=$cityname;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['cityname']=$cityname;
                    $_SESSION['posttemp']['errorex']['cityname']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['cityname']=1;
            }
            if (isset($_POST['fio'])) {
                $fio=htmlspecialchars(strip_tags(trim(substr($_POST['fio'],0,1024))));
                if (strlen($fio)>0)
                    $_SESSION['posttemp']['fio']=$fio;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['fio']=$fio;
                    $_SESSION['posttemp']['errorex']['fio']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['fio']=1;
            }
			
			$count_question = array();
			foreach($_POST as $key=>$value){
				if($value && strstr($key, 'vopros_')){
					$count_arr = explode('_',$key);
					if (isset($count_arr[1])){
						$count_question[$count_arr[1]] = 1;
					}
				}
			}

            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,1024))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='radio') {
                                if (isset($_POST['vopros_'.$numvopros])) {
                                    $value=(int)$_POST['vopros_'.$numvopros];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,4048))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $checkbox1=array();  //Существующие chekbox
            $checkbox2=array();  //Заполненные checkbox
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } 
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            }                         
                        }
                    }
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (!isset($checkbox1[$numvopros])) $checkbox1[$numvopros]=1;
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    if (!isset($checkbox2[$numvopros][$numvar])) $checkbox2[$numvopros][$numvar]=1;
                                    
                                }
                            }
                        }
                    }
                }
            }
            foreach ($checkbox1 as $numvopros=>$row) {
                if (!isset($checkbox2[$numvopros])) {
                    if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                        $_SESSION['posttemp']['error'][$numvopros]=1;
                }
            }
//            zend_debug::dump($_GET);
//            zend_debug::dump($_POST);
            //if (isset($_POST['step2'])) {
            
                $galkavalid=false;
                $kolvoerr=0;
                if (isset($_SESSION['posttemp']['error'])) {
                    //echo 'count($_SESSION[ ='.$_SESSION['posttemp']['error'];
                    //exit;
                    if (count($_SESSION['posttemp']['error'])<26) $galkavalid=true;
                } else $galkavalid=true;
                if (isset($_SESSION['posttemp']['errorex']) ) {
                    if (count($_SESSION['posttemp']['errorex'])>0) $galkavalid=false;
                }
                if ($galkavalid && isset($_SESSION['posttemp']['error'])) {
                    $valid=true;
//                    echo 'Второй шаг = '.count($_SESSION['posttemp']['error']);
                }
            //}
            if (!$valid) {
                if (!headers_sent()) {
                    header('Location: /anketa2013/');
                    exit;
                }
            } else {
                $ip=$_SERVER['REMOTE_ADDR'];
                //$fieldvalue=$_POST;
                $fieldvalue=array();
                foreach ($_POST as $key=>$row) {
                    $fieldvalue[$key]=htmlspecialchars(strip_tags(trim(substr($row,0,4096))));
                }
                $senddb=serialize($fieldvalue);
                $senddb=addslashes($senddb);
                $timestamp=time();
//                echo 'Отправляем письмо';
                
                $datasend=date("d.m.Y, H:i:s");
                $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
                $send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                    <tr><th colspan="2">Анкета для агентств 2013</th></tr>
                ';         
                if (isset($fieldvalue['company']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Название вашей компании:</b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['company']).'</td></tr>';
                if (isset($fieldvalue['cityname']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Город: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['cityname']).'</td></tr>';
                if (isset($fieldvalue['fio']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Контактное лицо: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['fio']).'</td></tr>';
                        
                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Количество отвеченных вопросов: </b></td>'.
                    '<td>&nbsp;&nbsp;&nbsp;'.count($count_question).'</td></tr>';
////////////////////////////////                        
//                zend_debug::dump($fieldvalue);
                        
                foreach ($vopros as $numvopros=>$textvopros) {
                    $send.='<tr><td width="49%">
                        <b>'.$numvopros.'. '.$textvopros.'</b></td><td>';
                    if (isset($voprosvar[$numvopros])) {
                        foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                            if (isset($voprosvartype[$numvopros][$numvar])) {
                                if (strpos($textvar,'%%inputother%%')!==false) {
                                    if (isset($voprosvarother[$numvopros][$numvar])) {
                                        $inputother='';
            //                            $inputother='<input name="vopros_'.$numvopros.'_'.$numvar.'_other" value="';
                                        
                                        if (isset($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                            if ($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']=='')
                                                $inputother='<u>не указано</u>';
                                            else 
                                                $inputother='<u>'.stripslashes($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']).'</u>';
                                        } 

                                        $textvar=str_replace('%%inputother%%',$inputother,$textvar);
                                    }
                                }
                                if ($voprosvartype[$numvopros][$numvar]['type']=='radio') $fieldname='vopros_'.$numvopros;
                                else $fieldname='vopros_'.$numvopros.'_'.$numvar;
                                
                                if ($voprosvartype[$numvopros][$numvar]['type']=='text') $size=' size="'.$voprosvartype[$numvopros][$numvar]['size'].'"';
                                else $size='';
                                $prefixid='';
                                $validate='';
                                if ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                    if (isset($fieldvalue[$fieldname]))
                                        if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                        else $send.='<u>не указано</u>';
                                }
                                else {
                                    if ($voprosvartype[$numvopros][$numvar]['type']!='text') {
                                        $send.='<input '.$validate.'name="'.$fieldname.'" value="';
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                $send.=stripslashes($fieldvalue[$fieldname]);
                //                                $send.=stripslashes($this->posttemp[$fieldname]);
                                            }
                                        } else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                        $send.='" type="'.$voprosvartype[$numvopros][$numvar]['type'].'"'.$size.$prefixid;
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='radio' 
                                            || $voprosvartype[$numvopros][$numvar]['type']=='checkbox') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                if ($fieldvalue[$fieldname]==$numvar) {
                                                    $send.=' checked="checked"';
                                                } else {
                                                    $send.=' disabled';
                                                }
                                            } else {
                                                $send.=' disabled';
                                            }
                                        }
                                        $send.='> '.$textvar.'<br/>'."\r\n";
                                    } else {
              //                          echo '$fieldname = '.$fieldname.'<br>';
                                        if (isset($fieldvalue[$fieldname])) {
                                            $fieldvalue[$fieldname]=trim($fieldvalue[$fieldname]);
            //                                echo 'strlen($fieldvalue[$fieldname]) = '.strlen($fieldvalue[$fieldname]).'<br>';
                                            if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                            else $send.='<i>Не заполнено</i>&nbsp;';
                                        } else $send.='<i>Не заполнено</i>&nbsp;';
                                    }
                                }
                            }
                        }
                    }
                    $send.=' </td></tr>';
                }                        
                
                $send.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>';
                
                $send.='</table>';
                
//                echo $send;
//                exit;
                
                function utf8_to_cp12511($str) {
                    $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                    return $encoded_data;
                }        
                $send=utf8_to_cp12511($send);
        
                // $emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='agent@multitour.ru';
                $emaillist[]='semenov@multitour.ru';
				$emaillist[]='kreidich@multitour.ru';
                $emailfrom='noreply@multitour.ru';
                $subject=utf8_to_cp12511('Анкета для агентств');

                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        $headers="From: \"".utf8_to_cp12511('Анкета для агентств')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                        $headers.="Content-Type: text/html; charset=windows-1251\n";
                        $headers.="Content-Transfer-Encoding: 8bit";
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subject,$send,$headers);
                        if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                        } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        }
                    }
                }
                
                $othermodel=$this->getModel('Other');
                $othermodel->sendanketa2013($senddb,$timestamp,$ip);
                unset($_SESSION['posttemp']);
          
                if (!headers_sent()) {
                    header('Location: /anketasend2013/');
                    exit;
                }
            }
            exit;
        } else {
         
        }
    }
    public function anketaresult2013Action() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
//        session_start();
//        $this->setCfgLayout('base');
        $res=$this->anketaform2013();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketares2013();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
    }

public function anketaform2013() {
 
$numvopros=1;
        $vopros[$numvopros]='Какое из направлений  внутреннего туризма было особенно популярно у Ваших туристов в этом сезоне и как Вы думаете почему';
            $voprosvar[$numvopros][1]='Россия (Краснодарский край, Ейск, Темрюк) %%inputother%%';
            $voprosvar[$numvopros][2]='Россия (КМВ, Средняя полоса, Селигер, Калининградская обл.) %%inputother%%';
            $voprosvar[$numvopros][3]='Абхазия %%inputother%%';
			$voprosvar[$numvopros][4]='Украина (Крым, Одесса, Бердянск) %%inputother%%';
			$voprosvar[$numvopros][5]='Украина (Трускавец, Моршин, Карпаты) %%inputother%%';
			$voprosvar[$numvopros][6]='Беларусь %%inputother%%';
			$voprosvar[$numvopros][7]='Прибалтика %%inputother%%';
			$voprosvar[$numvopros][8]='Экскурсионные туры Россия (Золотое кольцо, Карелия, Санкт-Петербург, Казань и др.) %%inputother%%';
			$voprosvar[$numvopros][9]='Экскурсионные туры Украина (Киев, Одесса, Львов и др.) %%inputother%%';
			$voprosvar[$numvopros][10]='Экскурсионные туры Абхазия %%inputother%%';
			$voprosvar[$numvopros][11]='Экскурсионные туры Беларусь %%inputother%%';
			$voprosvar[$numvopros][12]='Эккскурсионные туры Прибалтика %%inputother%%';
			$voprosvar[$numvopros][13]='Экскурсионные туры Армения, Узбекистан, Грузия %%inputother%%';
			$voprosvar[$numvopros][14]='Другое %%inputother%%';
                $voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][6]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][7]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][8]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][10]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][11]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][12]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][13]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][14]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=14; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
//

$numvopros=2;
        $vopros[$numvopros]='Достаточно ли информации на страницах с описаниями отелей';
            $voprosvar[$numvopros][1]='Вполне достаточно';
			$voprosvar[$numvopros][2]='не хватает  важных параметров (укажите какие) %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
//

 
$numvopros=3;
        $vopros[$numvopros]='Насколько удобен и понятен для Вас Личный кабинет на сайте компании «МУЛЬТИТУР»? Чтобы хотелось изменить/дополнить';
            $voprosvar[$numvopros][1]='Вполне удобен';
            $voprosvar[$numvopros][2]='Неудобен. Есть значительные недоработки, хотелось бы внести дополнения/изменения (укажите какие) %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2 ; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
					
//
$numvopros=4;
        $vopros[$numvopros]='Насколько удобно и понятно для Вас новое on-line бронирование на сайте компании «МУЛЬТИТУР»? Чтобы хотелось изменить/дополнить';
            $voprosvar[$numvopros][1]='Вполне удобно';
            $voprosvar[$numvopros][2]='Неудобно. Есть значительные недоработки, хотелось бы внести дополнения/изменения (укажите какие) %%inputother%%';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2 ; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
//
$numvopros=5;
        $vopros[$numvopros]='Пользуетесь ли Вы «Подбором туров» на сайте компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Постоянно';
            $voprosvar[$numvopros][2]='Редко, но пользуюсь';
            $voprosvar[$numvopros][3]='Пользуюсь ценовыми таблицами';
            $voprosvar[$numvopros][4]='Не пользуюсь, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
//

$numvopros=6;
        $vopros[$numvopros]='Какими разделами сайта компании «МУЛЬТИТУР» Вы пользуетесь  для поиска туров чаще всего?';
            $voprosvar[$numvopros][1]='Подбор туров';
            $voprosvar[$numvopros][2]='Каталог отелей';
            $voprosvar[$numvopros][3]='Он-лайн бронирование';
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=7;
        $vopros[$numvopros]='Присутствовали ли Вы на вебинарах, проведенных компанией «МУЛЬТИТУР» ?';
            $voprosvar[$numvopros][1]='Да, присутствовали в режиме он-лайн (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][2]='Смотрели в архиве (укажите направления) %%inputother%%';
            $voprosvar[$numvopros][3]='Не знали, что их проводили';
			$voprosvar[$numvopros][4]='Не присутствовали, потому что %%inputother%%';
                $voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
$numvopros=8;
        $vopros[$numvopros]='Вебинары по каким направлениям вы бы хотели  прослушать в 2015 году?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1); 
			
$numvopros=9;
        $vopros[$numvopros]='Workshop в каких городах Вы собираетесь посетить в 2013-2014 году';
            $voprosvar[$numvopros][1]='Алма-Ата';
			$voprosvar[$numvopros][2]='Астана';
            $voprosvar[$numvopros][3]='Астрахань';
			$voprosvar[$numvopros][4]='Архангельск';
			$voprosvar[$numvopros][5]='Белгород';
            $voprosvar[$numvopros][6]='Брянск';
			$voprosvar[$numvopros][7]='Воронеж';
			$voprosvar[$numvopros][8]='Волгоград';
            $voprosvar[$numvopros][9]='Екатеринбург';
            $voprosvar[$numvopros][10]='Иваново';
			$voprosvar[$numvopros][11]='Ижевск';
            $voprosvar[$numvopros][12]='Казань';
			$voprosvar[$numvopros][13]='Киров';
			$voprosvar[$numvopros][14]='Краснодар';
			$voprosvar[$numvopros][15]='Красноярск';
			$voprosvar[$numvopros][16]='Курск';
			$voprosvar[$numvopros][17]='Магнитогорск';
			$voprosvar[$numvopros][18]='Мурманск';
			$voprosvar[$numvopros][19]='Нижний Новгород';
			$voprosvar[$numvopros][20]='Омск';
			$voprosvar[$numvopros][21]='Орел';
			$voprosvar[$numvopros][22]='Пермь';
			$voprosvar[$numvopros][23]='Пятигорск';
			$voprosvar[$numvopros][24]='Петрозаводск';
			$voprosvar[$numvopros][25]='Ростов-на-Дону';
			$voprosvar[$numvopros][26]='Самара';
			$voprosvar[$numvopros][27]='Саратов';
			$voprosvar[$numvopros][28]='Санкт-Петербург';
			$voprosvar[$numvopros][29]='Смоленск';
			$voprosvar[$numvopros][30]='Ставрополь';
			$voprosvar[$numvopros][31]='Сургут';
			$voprosvar[$numvopros][32]='Тюмень';
			$voprosvar[$numvopros][33]='Улан-Уде';
			$voprosvar[$numvopros][34]='Уфа';
			$voprosvar[$numvopros][35]='Челябинск';
			$voprosvar[$numvopros][36]='Чита';
			$voprosvar[$numvopros][37]='Ярославль';
			$voprosvar[$numvopros][38]='Не посещаем Workshop';
            $voprosvar[$numvopros][39]='Другое %%inputother%%';
			$voprosvarother[$numvopros][39]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=39; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);	

$numvopros=10;
        $vopros[$numvopros]='Какие выставки Вы планируете посетить в 2013-2014 году';
            $voprosvar[$numvopros][1]='MITT-2014 ( Москва)';
			$voprosvar[$numvopros][2]='Интурмаркет-2014 ( Москва)';
            $voprosvar[$numvopros][3]='KITS-2014 (Казань)';
			$voprosvar[$numvopros][4]='Лето-2014 (Екатеринбург)';
			$voprosvar[$numvopros][5]='Мир без границ (Ростов-на-Дону)';
            $voprosvar[$numvopros][6]='Туризм.Спорт.Отдых.  Здравницы-2013 (Уфа)';
			$voprosvar[$numvopros][7]='СамараТурЭкспо-2014 (Самара)';
			$voprosvar[$numvopros][8]='Отдых.Туризм.Спорт-2014 (Воронеж)';
            $voprosvar[$numvopros][9]='Курорты и туризм – 2014 (Сочи)';
            $voprosvar[$numvopros][10]='Королевство отдыха (Санкт-Петербург)';
			$voprosvar[$numvopros][11]='UITT-2014 (Киев)';
            $voprosvar[$numvopros][12]='Анапа – самое яркое солнце России 2014 (Анапа )';
			$voprosvar[$numvopros][13]='Крым. Курорты и Туризм- 2014 (Ялта)';
			$voprosvar[$numvopros][14]='Беларусь';
			$voprosvar[$numvopros][15]='Не посещаем выставки';
			$voprosvar[$numvopros][16]='Другое %%inputother%%';
			
			$voprosvarother[$numvopros][16]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=16; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
					
$numvopros=11;
        $vopros[$numvopros]='Знаете ли Вы, что у компании «МУЛЬТИТУР» есть группа в соц.сети «ВКонтакте»? Являетесь ли Вы ее участником?';
            $voprosvar[$numvopros][1]='Знаю, являюсь участником';
            $voprosvar[$numvopros][2]='Знаю, не являюсь участником (укажите почему) %%inputother%%';
            $voprosvar[$numvopros][3]='Не знаю';
            
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=12;
        $vopros[$numvopros]='Знаете ли Вы, что у компании «МУЛЬТИТУР» есть группа в соц.сети «Фэйсбук»? Являетесь ли Вы ее участником?';
            $voprosvar[$numvopros][1]='Знаю, являюсь участником';
            $voprosvar[$numvopros][2]='Знаю, не являюсь участником (укажите почему) %%inputother%%';
            $voprosvar[$numvopros][3]='Не знаю';
            
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
			
$numvopros=13;
        $vopros[$numvopros]='Какая информация на Ваш взгляд была бы интересна для Вас и других участников групп «ВКонтакте» и «Фэйсбук» компании «МУЛЬТИТУР» в соц.сетях?';
            $voprosvar[$numvopros][1]='Рассказы о достопримечательностях на родных курортах';
			$voprosvar[$numvopros][2]='Юмор: смешные фотографии, анекдоты, случаи из жизни тур.компании и т.п.';
            $voprosvar[$numvopros][3]='Интересные ссылки: что происходит в мире туризма';
			$voprosvar[$numvopros][4]='Фотоальбомы с фотографиями о родных курортах';
			$voprosvar[$numvopros][5]='Фотоальбомы с сотрудниками компании "МУЛЬТИТУР"';
            $voprosvar[$numvopros][6]='Фотоальбомы о жизни компании "МУЛЬТИТУР"';
			$voprosvar[$numvopros][7]='Видео о родных курортах';
			$voprosvar[$numvopros][8]='Акции в отелях, специальные предложения, горящие туры';
			$voprosvar[$numvopros][9]='Другое %%inputother%%';
			
			$voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=16; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

$numvopros=14;
        $vopros[$numvopros]='Какой вариант «Договора реализации туристского продукта» Вы заключаете с Заказчиком туристского продукта (туристом)?';
            $voprosvar[$numvopros][1]='Вариант договора, рекомендованный компанией  «МУЛЬТИТУР» и размещённый на сайте компании';
            $voprosvar[$numvopros][2]='Вариант договора, рекомендованный иным (и) туроператором (и)  (укажите каким), по какой причине?  %%inputother%%';
            $voprosvar[$numvopros][3]='Вариант договора, разработанный самостоятельно';
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
		
$numvopros=15;
        $vopros[$numvopros]='Насколько компетентными Вам показались ответы кураторов на телефонные звонки?';
                $voprosvar[$numvopros][1]='Достаточно компетентны';
                $voprosvar[$numvopros][2]='Компетентны, но хотелось бы подробнее';
                $voprosvar[$numvopros][3]='Абсолютно не компетентны';
                $voprosvar[$numvopros][4]='Не звонили, достаточно информации на сайте';
                $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=16;
        $vopros[$numvopros]='Как долго приходилось ждать соединения с сотрудником «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='Недолго';
            $voprosvar[$numvopros][2]='Приходилось ждать несколько минут';
            $voprosvar[$numvopros][3]='Очень долго, приходилось перезванивать по несколько раз';
            $voprosvar[$numvopros][4]='Ждали недолго, но часто неправильно соединяли';
            $voprosvar[$numvopros][5]='Другое %%inputother%%';
                $voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=5; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=17;
        $vopros[$numvopros]='Как Вы оцениваете ответы операторов компании «МУЛЬТИТУР» в Личном кабинете, по icq, skype, чат-вопрос?';
            $voprosvar[$numvopros][1]='Ни разу не прибегали к их помощи';
            $voprosvar[$numvopros][2]='Быстрые и оперативные ответы';
            $voprosvar[$numvopros][3]='Не получали ответов на поставленные вопросы';
            $voprosvar[$numvopros][4]='Другое %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);

$numvopros=18;
        $vopros[$numvopros]='Как Вам наиболее удобно получать консультации кураторов компании «МУЛЬТИТУР»?';
            $voprosvar[$numvopros][1]='В Личном кабинете';
			$voprosvar[$numvopros][2]='По телефону';
            $voprosvar[$numvopros][3]='Консультируемся по icq';
            $voprosvar[$numvopros][4]='Используем в работе Skype';
            $voprosvar[$numvopros][5]='Общаемся только по электронной почте';
            $voprosvar[$numvopros][6]='Всю информацию видим на сайте';
            $voprosvar[$numvopros][7]='On-line переписка (чат)';
                for ($i=1; $i<=7; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=19;
        $vopros[$numvopros]='Что по Вашему мнению наиболее стимулирует работу Вашего агентства? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Повышение агентского вознаграждения';
            $voprosvar[$numvopros][2]='Личные призы менеджеру';
            $voprosvar[$numvopros][3]='Бонусные предложения';
            $voprosvar[$numvopros][4]='Надежность и четкость работы компании';
            $voprosvar[$numvopros][5]='Четкий документооборот';
            $voprosvar[$numvopros][6]='Удобный сайт';
            $voprosvar[$numvopros][7]='Удобная система on-line бронирования';
			$voprosvar[$numvopros][8]='Удобный Личный кабинет';
            $voprosvar[$numvopros][9]='Широкий ассортимент туров';
            $voprosvar[$numvopros][10]='Другое %%inputother%%';
                $voprosvarother[$numvopros][10]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=10; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
					
$numvopros=20;
        $vopros[$numvopros]='Участвуете ли вы в акции «Мультибонус»?';
            $voprosvar[$numvopros][1]='Участвуем';
            $voprosvar[$numvopros][2]='Не знали, что есть такая акция';
            $voprosvar[$numvopros][3]='Не участвуем, потому что %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=21;
        $vopros[$numvopros]='Участвуете ли вы в ежегодной традиционной для компании «МУЛЬТИТУР» акции «Раннее бронирование»? Влияет ли участие в данной акции на увеличение продаж Вашей компании?';
            $voprosvar[$numvopros][1]='Участвуем, повышенные скидки стимулируют наших клиентов на раннюю покупку летних туров';
            $voprosvar[$numvopros][2]='Участвуем только чтобы получить повышенное комиссионное вознаграждение, на увеличение продаж нашим клиентам летних туров акция не влияет';
            $voprosvar[$numvopros][3]='Не знали, что есть такая акция';
            $voprosvar[$numvopros][4]='Не участвуем, потому что %%inputother%%';
                $voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=4; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=22;
        $vopros[$numvopros]='Какие новые направления или объекты размещения Вы хотели бы увидеть в наших предложениях?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
			
$numvopros=23;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с положительной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
     
$numvopros=24;
        $vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с отрицательной стороны и почему?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
			
$numvopros=25;
        $vopros[$numvopros]='Укажите сильные стороны компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
			
$numvopros=26;
        $vopros[$numvopros]='Укажите слабые стороны компании компании «МУЛЬТИТУР»';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

$numvopros=27;
        $vopros[$numvopros]='Как в целом Вы оцениваете работу компании «МУЛЬТИТУР» в сезоне 2013 г.?';
            $voprosvar[$numvopros][1]='Отлично';
            $voprosvar[$numvopros][2]='Хорошо';
            $voprosvar[$numvopros][3]='Удовлетворительно (укажите почему) %%inputother%%';
                $voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=3; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
			
$numvopros=28;
        $vopros[$numvopros]='С какими еще операторами Вы работаете по направлениям внутреннего туризма? (возможно несколько вариантов ответов)';
            $voprosvar[$numvopros][1]='Астравел';
			$voprosvar[$numvopros][2]='Дельфин';
            $voprosvar[$numvopros][3]='Звездный путь';
			$voprosvar[$numvopros][4]='Криптон';
			$voprosvar[$numvopros][5]='РВБ-Алеан';
            $voprosvar[$numvopros][6]='Роза ветров';
			$voprosvar[$numvopros][8]='Русский Экспресс';
            $voprosvar[$numvopros][9]='СНП';
            $voprosvar[$numvopros][10]='Солвекс';
			$voprosvar[$numvopros][11]='Интурист';
			$voprosvar[$numvopros][12]='7-тур';
			$voprosvar[$numvopros][13]='Кандагар';
            $voprosvar[$numvopros][15]='Орфей';
            $voprosvar[$numvopros][16]='Другие %%inputother%%';
                $voprosvarother[$numvopros][16]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=16; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
	
$numvopros=29;
        $vopros[$numvopros]='Имеет ли Ваша компания повышенную комиссию у других операторов?';
            $voprosvar[$numvopros][1]='Нет';
            $voprosvar[$numvopros][2]='Да (укажите у кого и какую) %%inputother%%';
            
                $voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
                for ($i=1; $i<=2; $i++) 
                    $voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
					
$numvopros=30;
        $vopros[$numvopros]='On-line бронирование какого оператора Вам кажется наиболее удобным (укажите почему)?';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
					
$numvopros=31;
        $vopros[$numvopros]='Если у Вас есть какие-то пожелания, вопросы или замечания укажите их: ';
            $voprosvar[$numvopros][1]='';
            $voprosvartype[$numvopros][1]=array('type'=>'textarea','value'=>'','size'=>'70');

        $res=array();
        $res['vopros']=$vopros;
        $res['voprosvar']=$voprosvar;
        $res['voprosvarother']=$voprosvarother;
        $res['voprosvartype']=$voprosvartype;
        return $res;
}
//
public function printvoucherhtmlAction() 
    {

        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype=='meneger') && $uskey==0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            if ($this->view->dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }            
            // zend_debug::dump($this->view->dogovorinfo);
            // exit;
            $dgkey=$this->view->dogovorinfo['DG_Key'];
			$this->view->turname = $this->view->dogovorinfo['turname'];
            $turist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            
			//
			
			if(in_array($this->view->dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$this->view->agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$this->view->agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
			$this->view->pr_fullname=$this->view->agentinfo['PR_FULLNAME'];
			//
			
			// Определение страны
            $countryid=(int)$this->view->dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
			$country=$countriesmodel->getcountrybyid($countryid);            
            if ($country) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
			//  Определение города
            $cityid=(int)$this->view->dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
			$city=$citiesmodel->getcitybyid($cityid);            
            if ($city) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			
			$city_legal = $citiesmodel->getcitybyid($this->view->agentinfo['PR_CTKEY']);
			
			$this->view->legal_id=$city_legal['legal_id'];
			
			if(strtotime($this->view->dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $this->view->dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
			
            $nday=(int)$this->view->dogovorinfo['DG_NDAY'];
            $nnigth=$nday-1;
            $status=(int)$_SESSION['s_status'];
            $turbegin=date("d.m.Y", strtotime($this->view->dogovorinfo['DG_TURDATE']));
            $turend = date("d.m.Y",strtotime('+'.$nnigth.' days', strtotime($this->view->dogovorinfo['DG_TURDATE'])));
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {

                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
            
            $this->view->dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgcode);
            
            $hotelbool=false;
            $dlpartnerkey=0;
            $dlhotelkey=0;
            $subcode1=0;
            $subcode2=0;
            $dlprnamearr=array();
            $hoteldicttextarr=array();
			$hotelnamearr =  array();
			$hotelfreearr =  array();
			$hoteladdrarr =  array();
            $roompansiontxtarr=array();
			$pansiontxtarr = array();
            $turbeginarr=array();
            $turendarr=array();
            $nnigtharr=array();
            $daysarr=array();
			$hotelconditionarr =  array();
            
			$turistlistarr=array();
			$turistlistnarr=array();
			
			$roomtxtarr = array();
			
  // ["DL_DATEBEG"] => string(19) "2011-04-21 00:00:00"
  // ["DL_DATEEND"] => string(19) "2011-04-21 00:00:00"
  // ["DL_Long"] => string(1) "3"
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='3') {
                        $dlkey=$row['DL_KEY'];
//                        $turistlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey,$dgcode);
                        // $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
                        
                        if (is_array($turistlist)) {
                            foreach ($turistlist as $key=>$row1) {
                                $stline=$row1['TU_NAMERUS'];
                                if (strlen($row1['TU_FNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_FNAMERUS'];
                                }
                                if (strlen($row1['TU_SNAMERUS'])>0) {
                                    $stline.=' '.$row1['TU_SNAMERUS'];
                                }
                                if (strlen($row1['TU_BIRTHDAY'])>0) {
                                    $stline.=' '.date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                                }
                                if (strlen($row1['TU_PASPORTTYPE'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTTYPE'];
                                }
                                if (strlen($row1['TU_PASPORTNUM'])>0) {
                                    $stline.=' '.$row1['TU_PASPORTNUM'];
                                }
								
								
                                $turistlist[$key]['stline']=$stline;
								
								$fio=$row1['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row1['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row1['TU_SNAMERUS'];
                $turistlist[$key]['fio']=$fio;
  

                $pasport=$row1['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row1['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row1['TU_PASPORTNUM'];
                $turistlist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row1['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row1['TU_BIRTHDAY']));
                }
                $turistlist[$key]['birthday']=$birthday;
 
								
				        }
                        }
                        
                        $turistlistarr[]=$turistlist;
                        // zend_debug::dump($turistlist);
                        // zend_debug::dump($row);
                        // exit;
                        $hotelbool=true;
                        $dlpartnerkey=$row['DL_PARTNERKEY'];
                        $dlhotelkey=(int)$row['DL_CODE'];
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        
                       /////////////////Принимающая сторона start
                        $dlprname=''; 
                        if ($dlpartnerkey) {
                            $dlagentinfo=$privateofficemodel->getagentinfo($dlpartnerkey);
                            if (is_array($dlagentinfo)) {
                                if (isset($dlagentinfo['PR_NAME'])) {
                                    $dlprname=$dlagentinfo['PR_NAME'];
                                }
                            }
                        } else {
                            $dlprname=$this->view->agentinfo['PR_NAME'];
                        }
                        $dlprnamearr[]=$dlprname;
                        /////////////////Принимающая сторона end
                       
                        ////////////////Отель start
                        if ($dlhotelkey) {
                            $hoteldictionary=$privateofficemodel->gethoteldictionary($dlhotelkey);
                            
                        } else $hoteldictionary=false;
                        $hoteldicttext='';
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hoteldicttext.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hoteldicttext.=' '.$hoteldictionary['HD_STARS'];
                            }
                             
                            if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hoteldicttext.=', '.$hoteldictionary['HD_ADDRESS'];
                            }
							
							$hotelsmodel=$this->getModel('Hotels');
							
                        }
                        if (strlen($hoteldicttext)==0) $hoteldicttext='Нет';
                        ////////////////Отель end
						$hoteldicttextarr[]=$hoteldicttext;
						//
						$hotel_name = ''; //  Имя и тип отеля 
						$hotel_free = '';
						$hotel_condition = '';
						$hoteloptions = array();
						if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotel_name.=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                $hotel_name.=' '.$hoteldictionary['HD_STARS'];
							}

							$hoteloptions=$hotelsmodel->getOptions($hoteldictionary['HD_KEY']);
						}
						if(	$hotel_name == '') $hotel_name =  'Нет';
						
						$hotelnamearr[] = $hotel_name;
						
						if(isset($hoteloptions['option_204'])){
							$hotel_free = $hoteloptions['option_204']['ru'].': '.$hoteloptions['option_204']['val'];
						}
						$hotelfreearr[]=$hotel_free;
						
						if(isset($hoteloptions['option_217'])){
							$hotel_condition = strip_tags($hoteloptions['option_217']['val']);
						}
						$hotelconditionarr[]=$hotel_condition;
		
						$hotel_addr = ''; // Адрес отеля
						   if (isset($hoteldictionary['HD_ADDRESS'])) {
                                $hotel_addr.= $hoteldictionary['HD_ADDRESS'];
                            }
						$hoteladdrarr[] = $hotel_addr;
						
                        
                        
                        //////////////Тип номера  /  тип питания start
                        $room=NULL;
                        $accmd=NULL;
                        $pansion=NULL;
                        // echo '$subcode1 = '.$subcode1.'<br>';
                        // echo '$subcode2 = '.$subcode2.'<br>';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                            }
                        }
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                        }
                        $roompansiontxt='';
						$roomtxt = '';
                        if ($room) {
                            if (is_array($room)) {
                                $roompansiontxt.=$room['Room'].', '.$room['RoomsCategory'];
								$roomtxt .= $room['Room'].', '.$room['RoomsCategory'];
                            }
                        }
                        if ($accmd) {
                            if (is_array($accmd)) {
                                $roompansiontxt.=', '.$accmd['Code'];
								$roomtxt .=(($roomtxt)?', ':'').$accmd['Code'];
                            }
                        }
                        if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
            
						if (strlen($roompansiontxt)==0) $roompansiontxt='Нет';
                        $roompansiontxtarr[]=$roompansiontxt;
						
						
						$roomtxt = (strlen($roomtxt) == 0)?'Нет':$roomtxt;
						$roomtxtarr[]  = $roomtxt;
			//				
						if ($pansion) {
                            if (is_array($pansion)) {
                                $roompansiontxt.=', '.$pansion['Name'].',';
                            }
                        }
						
						$pansiontxtarr[] = $pansion['Name'];
                        //////////////Тип номера  /  тип питания end
                        
                        $turbegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $turend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $nnigth=(int)$row['DL_NDAYS'];                
                        $turbeginarr[]=$turbegin;
                        $turendarr[]=$turend;
                        $nnigtharr[]=$nnigth;
                        $daysarr[]=$nnigth+1;
                        
                        // break;
                    }
                }
            }
            // zend_debug::dump($dlprnamearr);
            // exit;
            // zend_debug::dump($dateendarr);
            // zend_debug::dump($nnigtharr);
            // exit;
            // if (!$hotelbool) {
                // $nnigth='Нет';
                // $turbegin='Нет';
                // $turend='Нет';
            // }
            
            
            //////////////В стоимость входит/ расчётный час start
            $rastcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $rastcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }
            $vstcode=0;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1119') {
                        $vstcode=(int)$row['DL_CODE'];
                        break;
                    }
                }
            }            
            $rasttxt='';
            if ($rastcode>0) {
                $rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
                if (is_array($rast)) {
                    if (isset($rast['SL_NAME'])) $rasttxt=$rast['SL_NAME'];
                }
            }
            $vsttxt='';
            if ($vstcode>0) {
                $vst=$privateofficemodel->getservicelist(1119,$vstcode,$dgcode);
                if (is_array($vst)) {
                    if (isset($vst['SL_NAME'])) $vsttxt=$vst['SL_NAME'];
                }
            }
            $rastvsttxt='';
			
			$rasscharrZ = array();
			$rasscharrV = array();
			$vstoimostarr = array();
			
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1112') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgkey,$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($rasttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='Расчетный час '.$rasttxt.'('.$turistlist_size.'),';
                        $tmpa = explode(",",$rasttxt);
						$rasttxtZ=$tmpa[0];
						$rasttxtV=$tmpa[1];
						
						}
						
						
						
						$rasscharrZ[] =  $rasttxtZ;
						$rasscharrV[] =  $rasttxtV;
                    }
                    if ($row['DL_SVKEY']=='1119') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgkey,$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                        if (strlen($vsttxt)>0) {
                            if (strlen($rastvsttxt)>0) $rastvsttxt.=' ';
                            $rastvsttxt.='В стоимость входит  '.$vsttxt.'('.$turistlist_size.'),';
                        }
						$vstoimostarr[] = $vsttxt;
						
                    }
                }
            }
            if (strlen($rastvsttxt)==0) $rastvsttxt='Нет'; 
            //////////////В стоимость входит/ расчётный час end
            
            //////////////Трансфер / транспорт start
            $transfercode=0;
            $transfersubcode1=0;
            $transferbool=false;            
            $transferdate='';
            $transfertxt='';
            $transfer=false;
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgkey,$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }
                    
                        $transferbool=true;
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transferdate=$row['DL_DATEBEG'];
                        if ($transferdate=='') $transferdate='1900-01-09 00:00:00';
                        if (strlen($transferdate)>0) {
                            $transferdate=date("d.m.Y", strtotime($transferdate));
                        } 
                        if ($transferbool) {
                            if (strlen($transfertxt)>0) $transfertxt.='<br/>';
                            $transfertxt.=$transferdate.' : ';
                            $transfer=$privateofficemodel->gettransfer($transfercode);
                            $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                            if (is_array($transfer)) {
                                $transfertxt.=$transfer['TF_NAME'];
                            }
                            if( is_array($transpost)) {
                                $transfertxt.=' / '.$transpost['TR_NAME'];
								
								/*$transfertxt.= '(';
                                if ($transpost['TR_NMEN']) {
                                    $transfertxt.=$transpost['TR_NMEN'];
                                } else $transfertxt.=$turistlist_size;
                                $transfertxt.=')';*/
                            }
                            if (is_array($transfer)) {
                                $transfertxt.= ' / '.$transfer['TF_PLACEFROM'];
								
								$transfer_partner = $privateofficemodel->getagentinfo($row['DL_PARTNERKEY']);
								
								if($transfer_partner['PR_FAX']){
									$tel_arr = explode('-',$transfer['TF_NAMELAT']);
									if($tel_arr){
										switch(strtolower($tel_arr[0])){
											case 'встреча':
												$tel_text = 'Телефон встречающей стороны:';
												break;
											case 'проводы':
												$tel_text = 'Телефон провожающей стороны:';
												break;
										}
										$transfertxt.= ' / '.$tel_text.' '.$transfer_partner['PR_FAX'];
									}
								}
							
                            }

                        }
                    }                    
                }
            }            
            if (strlen($transfertxt)==0) $transfertxt='Нет';
            //////////////Трансфер / транспорт end
            
            //////////////Экскурсии start
            $exurscode=0;
            $exursbool=false;            
            $exursdate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='4') {
                        $exursbool=true;
                        $exurscode=(int)$row['DL_CODE'];
                        $exursdate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $exurstxt='';
            if (strlen($exursdate)>0) {
                //$exursdate=date("d.m.Y G:i:s", strtotime($exursdate));
				$exursdate=date("d.m.Y", strtotime($exursdate));
            }
            if ($exursbool) {
                $exurstxt.=$exursdate.' ';
                $exurs=$privateofficemodel->getexurs($exurscode);
                if (is_array($transfer)) {
                    $exurstxt.=$exurs['ED_NAME'];
                }
                //$exurstxt.='('.count($turist).')';
            }
            if (strlen($exurstxt)==0) $exurstxt='Нет';
            //////////////Экскурсии end

			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='8' || $row['DL_SVKEY']=='8') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_SUBCODE2'];
                        $dopusldate=$row['DL_DATEBEG'];
                        break;
                    }                    
                }
            }   
            $dopusltxt='';
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt.=$dopusldate.' ';
                $dopusl=$privateofficemodel->gethoteldopusl($dopuslcode);
                if (is_array($dopusl)) {
                    $dopusltxt.=$dopusl['A2_NAME'];
                }
                //$dopusltxt.='('.count($turist).')';
            }
            
			//if (strlen($dopusltxt)==0) $dopusltxt='Нет';
            //////////////Доп услуга end
			//////////////Доп услуга start
            $dopuslcode=0;
            $dopuslbool=false;            
            $dopusldate='';
			$dopusltxt1='';
            if (is_array($this->view->dogovorlist)) {
			reset($this->view->dogovorlist);
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='1032' || $row['DL_SVKEY']=='1032') {
                        $dopuslbool=true;
                        $dopuslcode=(int)$row['DL_CODE'];
						$dopusldate=$row['DL_DATEBEG'];
                        //break;
                
            
            if (strlen($dopusldate)>0) {
                $dopusldate=date("d.m.Y", strtotime($dopusldate));
            }
            if ($dopuslbool) {
                $dopusltxt1.= (($dopusltxt1!='')?'<br>':'').$dopusldate.' ';
                $dopusl=$privateofficemodel->getdopusl($dopuslcode);
				
                
                    $dopusltxt1.=$dopusl['SL_NAME'];
                
             
            }
			    }                    
                }
            }   
            //if (strlen($dopusltxt1)==0) $dopusltxt1='Нет';
			$dopusltxt .= ((strlen($dopusltxt) > 0 && strlen($dopusltxt1) > 0)?'<br>':'').$dopusltxt1;
			//echo  $dopusltxt; exit;
			if(strlen($dopusltxt) == 0) $dopusltxt = 'Нет';
			
			
			
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])),$dgkey,$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode,$dgcode);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                          //  $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';            
            //////////////Страховка end
            $datetec=date("d.m.y");
        } else {
            return $this->error(404);                
            exit;
        }
        // exit;
        $this->view->uskey=$uskey;
        $this->view->hotelbool=$hotelbool;
        // $this->view->dlprname=$dlprname;
        // $this->view->hoteldicttext=$hoteldicttext;
        // $this->view->roompansiontxt=$roompansiontxt;
        $this->view->rastvsttxt=$rastvsttxt;
        $this->view->transfertxt=$transfertxt;
        $this->view->straxtxt=$straxtxt;
        $this->view->nday=$nday;
        $this->view->nnigth=$nnigth;
        $this->view->turbegin=$turbegin;
        $this->view->turend=$turend;
        $this->view->dgcode=$dgcode;
        $this->view->exurstxt=$exurstxt;
        $this->view->datetec=$datetec;
        $this->view->dlprnamearr=$dlprnamearr;
        $this->view->hoteldicttextarr=$hoteldicttextarr;
        $this->view->roompansiontxtarr=$roompansiontxtarr;
		$this->view->hotelnamearr = $hotelnamearr;
		$this->view->hoteladdrarr = $hoteladdrarr;
		$this->view->hotelfreearr = $hotelfreearr;
		$this->view->hotelconditionarr = $hotelconditionarr;
		
        
        $this->view->turbeginarr=$turbeginarr;
        $this->view->turendarr=$turendarr;
        $this->view->nnigtharr=$nnigtharr;
        $this->view->daysarr=$daysarr;
        $this->view->turistlistarr=$turistlistarr;
        if (is_array($turist)) {
            foreach ($turist as $key=>$row) {
                $stline=$row['TU_NAMERUS'];
                if (strlen($row['TU_FNAMERUS'])>0) {
                    $stline.=' '.$row['TU_FNAMERUS'];
                }
                if (strlen($row['TU_SNAMERUS'])>0) {
                    $stline.=' '.$row['TU_SNAMERUS'];
                }
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $stline.=' '.date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                if (strlen($row['TU_PASPORTTYPE'])>0) {
                    $stline.=' '.$row['TU_PASPORTTYPE'];
                }
                if (strlen($row['TU_PASPORTNUM'])>0) {
                    $stline.=' '.$row['TU_PASPORTNUM'];
                }
				
				$fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turist[$key]['fio']=$fio;
  

                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turist[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turist[$key]['birthday']=$birthday;

  
				
				
                $turist[$key]['stline']=$stline;
            }
        }
		
        $this->view->turist=$turist;
        $this->view->type=$type;
        $this->view->countryname=$countryname;
		$this->view->cityname = $cityname;
		$this->view->rasscharrZ	  = $rasscharrZ;
		$this->view->rasscharrV	  = $rasscharrV;
		$this->view->vstoimostarr = $vstoimostarr;
		$this->view->dopusltxt =  $dopusltxt;
		$this->view->pansiontxtarr = $pansiontxtarr;
		$this->view->roomtxtarr = $roomtxtarr;
        $filename = 'voucher' .$dgcode. '.html';
        $this->view->filename=$filename;
        
    }

public function dogovorinfoAction()
    {
	

	 //error_reporting(E_ALL | E_STRICT);
	//$privateofficemodel=$this->getModel('Privateoffice');
	// echo 'fsdfsdfsdfsdfsdfsdfsdfsdfsdfsd'; exit;
	
	
	$paymenttype = (string)$this->_getParam('paymenttype',0);
	    $this->setCfgLayout('full_admin');
        $this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        $this->view->close_print_wrongcity = false;
        $status=(int)$_SESSION['s_status'];
        if($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        } elseif($usertype == 'admin') $uslogin='admin';
        else $uslogin='';
        //$uskey = (int)$this->_getParam('uskey',0);
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
                    
        //$vaucher=(int)$this->_getParam('vaucher',0);
        //if ($vaucher!=1 && $vaucher!=0) $vaucher=0;
        //echo '$vaucher = '.$vaucher.'<br>';
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
///        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        // zend_debug::dump($alldogpriv);
        // zend_debug::dump($boss);
        // exit;
        if (($usertype=='manager' || $usertype=='admin'|| $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                
				return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
			
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
            $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
            $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
            $uslogin = $this->view->userinfo['US_ID'];
        }

	 if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
	 
            $this->view->dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);


			
            if (!$this->view->dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			$this->view->bookerinfo =  null;
			if($this->view->dogovorinfo['DG_PARTNERKEY'] == 21371)
			{
			$pbi = $privateofficemodel->getPrivateBookerInfo($dgcode);
			if($pbi) $this->view->bookerinfo = $pbi;
			}
			
			
            
            $agent = $privateofficemodel->getagentinfo($this->view->dogovorinfo['DG_PARTNERKEY']);
            if( $agent['PR_KEY'] != 28466 && $agent['PR_KEY'] != 24599)
            {
            $pos  = strpos($agent['PR_CITY'],'ФО');
            if($pos === false) $this->view->close_print_wrongcity = true;
            }



            $allowedExtensions = array("jpg","jpeg","gif","png");
            $error = '';
            $del_dgpolis = (int)$this->_getParam('del_polisid',0);
                if($del_dgpolis)
                {
                    $privateofficemodel->deldogovorpolis($dgcode, $del_dgpolis);
                    if (!headers_sent()) {
                        header('Location: /privateoffice/userinfo/dogovor/?type=' . $type . '&code=' . $dgcode);
                    }
                    exit;
                }
            if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['uploadpilish']) && $_POST['uploadpilish'] == 1) {
                if (isset($_FILES)) {
                    if ($usertype=='manager' || $usertype=='admin') {
                        if(count($_FILES)>10) $error = "Загружать можно максимум 10 файлов.\n";
                        else foreach( $_FILES as $file ) {
                            if(!$file['error'])
                            {
                                if (!in_array(end(explode(".", strtolower($file['name']))), $allowedExtensions)) 
                                    $error .= "Загружать разрешается только изображения (jpg, jpeg, gif, png)";
                                elseif ($file['size'] > 1024*1024*10)
                                    $error .= $file['name']." - файл превышает допустимые размеры.";
                                else {
                                    $filename = time().md5($file['name']).'.'.end(explode(".", strtolower($file['name'])));
                                    $uploadfile = $this->upload_path.$filename;
                                    move_uploaded_file($file['tmp_name'], $_SERVER['DOCUMENT_ROOT'].$uploadfile);
                                    $privateofficemodel->adddogovornewpolis($dgcode, $uskey, $filename, mb_convert_encoding($file['name'], 'Windows-1251', 'UTF-8'));
                                }
                            }
                        }
                    }
                    else $error = "Загружать файлы могут только менеджеры и администраторы";
                }
			$_SERVER['REQUEST_METHOD'] = 'GET';	
            }        

            $this->view->error=$error;
			
            $this->view->polises=$privateofficemodel->getdogovorpolis($dgcode);
			
			$allowedExtensions = array("pdf");
            $error_avia = '';
            $del_dgavia = (int)$this->_getParam('del_aviaid',0);
                if($del_dgavia)
                {
                    $privateofficemodel->deldogovoravia($dgcode, $del_dgavia);
                    if (!headers_sent()) {
                        header('Location: /privateoffice/userinfo/dogovor/?type=' . $type . '&code=' . $dgcode);
                    }
                    exit;
                }
            if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['uploadavia']) && $_POST['uploadavia'] == 1) {
                if (isset($_FILES)) {
                    if ($usertype=='manager' || $usertype=='admin' || $usertype=='meneger') {
                        if(count($_FILES)>10) $error_avia = "Загружать можно максимум 10 файлов.\n";
                        else foreach( $_FILES as $file ) {
                            if(!$file['error'])
                            {
                                if (!in_array(end(explode(".", strtolower($file['name']))), $allowedExtensions)) 
                                    $error_avia .= "Загружать разрешается только PDF файлы";
                                elseif ($file['size'] > 1024*1024*10)
                                    $error_avia .= $file['name']." - файл превышает допустимые размеры.";
                                else {
                                    $filename = time().md5($file['name']).'.'.end(explode(".", strtolower($file['name'])));
                                    $uploadfile = $this->upload_path.$filename;
                                    move_uploaded_file($file['tmp_name'], $_SERVER['DOCUMENT_ROOT'].$uploadfile);
                                    $privateofficemodel->adddogovornewavia($dgcode, $uskey, $filename, mb_convert_encoding($file['name'], 'Windows-1251', 'UTF-8'));
                                }
                            }
                        }
                    }
                    else $error_avia = "Загружать файлы могут только менеджеры, администраторы и кураторы";
                }
			$_SERVER['REQUEST_METHOD'] = 'GET';	
            }        

            $this->view->error_avia=$error_avia;
			
            $this->view->avias=$privateofficemodel->getdogovoravia($dgcode);
			
			$allowedExtensions = array("pdf");
            $error_vaucher = '';
            $del_dgvaucher = (int)$this->_getParam('del_vaucherid',0);
                if($del_dgvaucher)
                {
                    $privateofficemodel->deldogovorvaucher($dgcode, $del_dgvaucher);
                    if (!headers_sent()) {
                        header('Location: /privateoffice/userinfo/dogovor/?type=' . $type . '&code=' . $dgcode);
                    }
                    exit;
                }
            if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['uploadvaucher']) && $_POST['uploadvaucher'] == 1) {
                if (isset($_FILES)) {
                    if ($usertype=='manager' || $usertype=='admin'  || $usertype=='meneger') {
                        if(count($_FILES)>10) $error_avia = "Загружать можно максимум 10 файлов.\n";
                        else foreach( $_FILES as $file ) {
                            if(!$file['error'])
                            {
                                if (!in_array(end(explode(".", strtolower($file['name']))), $allowedExtensions)) 
                                    $error_vaucher .= "Загружать разрешается только PDF файлы";
                                elseif ($file['size'] > 1024*1024*10)
                                    $error_avia .= $file['name']." - файл превышает допустимые размеры.";
                                else {
                                    $filename = time().md5($file['name']).'.'.end(explode(".", strtolower($file['name'])));
                                    $uploadfile = $this->upload_path.$filename;
                                    move_uploaded_file($file['tmp_name'], $_SERVER['DOCUMENT_ROOT'].$uploadfile);
                                    $privateofficemodel->adddogovornewvaucher($dgcode, $uskey, $filename, mb_convert_encoding($file['name'], 'Windows-1251', 'UTF-8'));
                                }
                            }
                        }
                    }
                    else $error_vaucher = "Загружать файлы могут только менеджеры, администраторы и кураторы";
                }
			$_SERVER['REQUEST_METHOD'] = 'GET';	
            }        

            $this->view->error_vaucher=$error_vaucher;
			
            $this->view->vauchers=$privateofficemodel->getdogovorvaucher($dgcode);

            $dgkey=$this->view->dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgcode);
			
            $dg_prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            $dupuserkey=(int)$this->view->dogovorinfo['DG_DUPUSERKEY'];
            $status=(int)$_SESSION['s_status'];
			
			
			
			
			
            if ( $usertype!='admin' && $usertype!='manager' && $usertype!='meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
				
				
				if($dgcode[0] == 'W')
				{
					$partners_new_arr =  array();
					$prkey = $privateofficemodel->getPrKey2014($prkey);
								for($prkeyi = 0; $i < sizeof($partner_arr); $i++)
									{
									$partners_new_arr[] = array('key'=>$privateofficemodel->getPrKey2014($partner_arr[$prkeyi]['key']));
									}
									$partner_arr = $partners_new_arr;
					//echo   '<div class="hidiv" style="display:none;">'.$prkey.'</div>';
					//exit;
				}
				
				
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }
			
			$transfer['start'] = array();
			$transfer['finish'] = array();

			$transfer_list = $privateofficemodel->gettransferlist($dgcode);
			
			foreach($transfer_list as $item) {
				$arr = explode('-',$item['TF_NAMELAT']);
				if($arr){
					switch(strtolower($arr[0])){
						case 'встреча':
							$transfer['start'][$item['TF_KEY']] = $item;
							break;
						case 'проводы':
							$transfer['finish'][$item['TF_KEY']]  = $item;
							break;
					}
				}
			}
			$dogoror_transfers = $privateofficemodel->getdogovortransfers($dgcode);
			
			$transfer_show = TRUE;
			$transfer_date_start = '';
			$transfer_date_finish = '';
			foreach($dogoror_transfers as $item){
				$arr = explode('-',$item['TF_NAMELAT']);
				if($arr){
					switch(strtolower($arr[0])){
						case 'встреча':
							$transfer['start'] = array();
							$transfer['start'][$item['TF_KEY']]  = $item;
							if($transfer_date_start && $transfer_date_start != $item['DL_DATEBEG']){
								$transfer_show = FALSE;
							}
							$transfer_date_start = $item['DL_DATEBEG'];
							break;
						case 'проводы':
							$transfer['finish'] = array();
							$transfer['finish'][$item['TF_KEY']]  = $item;
							if($transfer_date_finish && $transfer_date_finish != $item['DL_DATEBEG']){
								$transfer_show = FALSE;
							}
							$transfer_date_finish = $item['DL_DATEBEG'];
							break;
					}
				}
			}

			$this->view->transfer = $transfer;
			$this->view->transfer_show = $transfer_show;
			
			$close_print = FALSE;
			$close_vaucher = FALSE;
			$turist_main = array();
			
            $this->view->dogovorlist=$privateofficemodel->getdogovorlist($dgkey,  date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])));
			if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $key=>$row) {
					if($row['DL_SVKEY'] == 1182)
					{
						if($row['DL_COST'] != 0) $paymenttype = 1182;  else  $paymenttype = 0;
						
					
					}
					$dlkey=$row['DL_KEY'];
                    $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($this->view->dogovorinfo['DG_CRDATE'])), $dgkey, $dgcode);
					
					if($row['DL_SVKEY'] == 3 && $turistlist) {
						foreach($turistlist as $item) {
							if($item['TU_ISMAIN']){
								$turist_main = $item;
							}
						}
					}
                    $this->view->dogovorlist[$key]['turistlist']=$turistlist;
                    $citiesmodel = $this->getModel('Cities');
                    $cityid=$row['DL_CTKEY'];
                    $city=$citiesmodel->getcitybyid($cityid);
                    $cityname='';
                    if (is_array($city)) {
                        if (isset($city['Name'])) {
                            $cityname=$city['Name'];
                        }
                    }
                    $this->view->dogovorlist[$key]['cityname']=$cityname;
                    
                    $hotelkey=(int)$row['DL_CODE'];
                    $hotelname='';
					$hotel_address = '';
                    $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                    
                    if (is_array($hoteldictionary)) {
						$hotel_info = $privateofficemodel->gethotelinfo($hotelkey);

						if ($hotel_info['close_print'] && $usertype!='admin' && $usertype!='manager' && $usertype!='meneger'){
							$close_print = TRUE;
						}
						if ($hotel_info['close_print']){
							$close_vaucher = TRUE;
						}
                        if (isset($hoteldictionary['HD_NAME'])) {
                            $hotelname=$hoteldictionary['HD_NAME'];
                        }
						if (isset($hoteldictionary['HD_ADDRESS'])) {
                            $hotel_address=$hoteldictionary['HD_ADDRESS'];
                        }
                        if (isset($hoteldictionary['HD_STARS'])) {
                            if (strlen($hoteldictionary['HD_STARS'])>0) {
                                $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                            }
                        }
                    }

                    $this->view->dogovorlist[$key]['hotelname']=$hotelname;
					$this->view->dogovorlist[$key]['hotel_address']=$hotel_address;

                    //номер
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $roomname='';
                    if ($subcode1>0) {
                        $room=$privateofficemodel->getroom($subcode1);
                        if (is_array($room)) {
                            $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                            $accmdkey=(int)$room['AccmdMenTypeKey'];
                            $accmd=$privateofficemodel->getaccmd($accmdkey);
                            if (is_array($accmd)) {
                                $roomname.=', '.trim($accmd['Code']);
                            }
                        }
                    }
                    $roomstxt='';
                    if (strlen($roomstxt)>0) $roomstxt.='; ';
                    $roomstxt.=$roomname;
                    $this->view->dogovorlist[$key]['roomname']=$roomname;
                    //питание
                    $subcode2=(int)$row['DL_SUBCODE2'];
                    $pansionname='';
                    if ($subcode2>0) {
                        $pansion=$privateofficemodel->getpansion($subcode2);
                        if (is_array($pansion)) {
                            $pansionname=$pansion['Code'].' '.$pansion['Name'];
                        }
                    }
                    $pansiontxt='';
                    if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                    $pansiontxt.=$pansionname;
                    $this->view->dogovorlist[$key]['pansionname']=$pansionname;
					if ($row['DL_SVKEY']==2){
						$this->view->is_transfer = true; //Проверка на трансфер
					}
				}
            }
			$this->view->hotel_address = $hotel_address;
			$this->view->turist_main = $turist_main;
			$this->view->close_print = $close_print;
			$this->view->close_vaucher = $close_vaucher;
            $page_actives=array(200 =>'200');
            Zend_Registry::set('page_actives', $page_actives);
            // zend_debug::dump($this->view->dogovorlist);
            // exit;
            // exit;
        } else {
            return $this->error(404);                
            exit;
        }
        if ($usertype!='admin' && $usertype!='manager' && $usertype!='meneger') 
            $usid=$this->view->userinfo['US_ID'];
        else $usid=0;
        if(!$this->view->userinfo){$this->view->userinfo=$privateofficemodel->getuserinfo((int)$this->view->dogovorinfo['DG_DUPUSERKEY']);
            if ($this->view->userinfo) {
                $prkey=(int)$this->view->userinfo['US_PRKEY'];
            }
            else {
                $prkey=(int)$this->view->dogovorinfo['DG_PARTNERKEY'];
            }
            $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);
            $this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);}
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        
		if($userinfopriv['us_all_msg_priv']===null)  $allmsgpriv = 1;
        else $allmsgpriv = $userinfopriv['us_all_msg_priv'];
        //if($allmsgpriv==0 && $boss === 0) $type=0;
		
			
			
			
        $this->view->messages=$privateofficemodel->getmesslistbyusiddgid($usid,$dgcode,(($allmsgpriv)?$prkey:0));
		
        //$messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        //$this->view->messnotread=$messnotread;
            // zend_debug::dump($this->view->dogovorlist);
			
			
			
			//  Опреление типа тура
			$bustur  = false;
			$dogtype = $privateofficemodel->getdogovortype($dgkey);
			
			
			$dogtypename = $dogtype[0]['TP_NAME'];
				
					
			if(strpos($dogtypename,'Автобусные туры') !== false) $bustur = true;
			//
	
		///
		if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['setnewpaymenttype']) &&   $_POST['setnewpaymenttype'] == 1) // Меняем тип оплаты
		{
		$privateofficemodel->setpaymenttype($dgcode,$_POST['formpaymenttype']);
		$urlredirect = '/privateoffice/userinfo/dogovor?code='.$dgcode;
		if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
        exit;
		}
		//

		if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['addpolishurl']) &&   $_POST['addpolishurl'] == 1) // Добавляем урл  к договору
		{
		if (($usertype=='manager')||($usertype=='admin')){
                $link=(string)$this->_getParam('link');
                if (!empty($link)){
                    $privateofficemodel->addPolisLink($dgcode, $link);
                }
            }
		//
		$urlredirect = '/privateoffice/userinfo/dogovor?code='.$dgcode;
		if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
        exit;
		}
		
		$city_legal = $citiesmodel->getcitybyid($this->view->agentinfo['PR_CTKEY']);
		$legal_id=$city_legal['legal_id'];
		
		switch($legal_id){
			case 1:
				$filialkey = 27229;
				break;
			case 2:
				$filialkey = 27231;
				break;
			case 3:
				$filialkey = 27232;
				break;
			case 5:
				$filialkey = 1;
				break;
			case 6:
				$filialkey = 28720;
				break;
			default:
				$filialkey = '';
		}
		$update_filial = $this->_getParam('update_filial',0);
		if($update_filial || $filialkey){
			$privateofficemodel->updatefilial($this->view->dogovorinfo['DG_CODE'], $filialkey);
		}
		$is_update_filial = FALSE;
		if(($usertype=='manager' || $usertype=='meneger' || $usertype=='admin') && $filialkey<>$this->view->dogovorinfo['DG_FilialKey']){
			$is_update_filial = TRUE;
		}
		$this->view->is_update_filial = $is_update_filial;	
		
		$change_doc = FALSE;
		if(in_array($this->view->dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
			$change_doc = TRUE;
		}
		$this->view->change_doc = $change_doc;	
		
		if ($_SERVER['REQUEST_METHOD']=='POST' && !$update_filial){
            
			$idfrom=(string)$this->_getParam('idfrom', '');
            $message=(string)$this->_getParam('message', '');
			$sendadm =(string)$this->_getParam('sendadm', '');
			$id_parent =(string)$this->_getParam('id_parent', '');
            $userinfo=$privateofficemodel->getuserinfo($uskey);
			$userinfo_dogovor = $privateofficemodel->getuserinfo($this->view->dogovorinfo['DG_DUPUSERKEY']);
            $urlredirect = '/privateoffice/userinfo/dogovor?code='.$dgcode;
			
			if($userinfo === false){
				
			   $userinfo = $userinfo_dogovor;
            }

			if($userinfo === false){
				
			   if (!headers_sent()) {
                    header('Location: ' . $urlredirect);
                }
                exit;
            }
			

            $subject_title = "dogovorrequest";
            $message=htmlspecialchars(strip_tags(trim(substr($message, 0, 30024))));
            $message=str_replace('\'', ' ', $message);
            $subject = "Вопрос из личного кабинета по заявке №".$dgcode;

            $timestamp=time();
            $ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
            $params=array();
            $prkey=(int)$userinfo['US_PRKEY'];
            $usid=$userinfo['US_ID'];
            $uskey=$userinfo['US_KEY'];
            if(!$sendadm)
			{
				$params['usidfrom']=$usid;
				$params['usidto']='admin';
				$params['remark']='От агента: ';
				$sendername = '<a target="_blank" href="http://www.multitour.ru/privateoffice/userinfo/?uskey='.$uskey.'">'.$usid.'</a>';
            } else 
			{
				$params['usidto']= $userinfo['US_ID'];//$usid;
				$sendername = 'Администратор';
				if($usertype == 'manager' || $usertype == 'meneger')
				{    
					preg_match('/^'.$usertype.'_(.*)$/', $idfrom, $matches);
					$idfrom=$matches[1];
				}
				if ($usertype == 'manager') {
					$curatorsmodel = $this->getModel('Curators');
					$curatorinfo=$curatorsmodel->getcuratorbylogin($idfrom);
					$sendername = $curatorinfo['cur_fio_position'];
				}
				if ($usertype == 'meneger') {
					$managermodel = $this->getModel('Managers');
					$managerinfo=$managermodel->getmanagerbylogin($idfrom);
					$sendername = $managerinfo['cur_fio_position'];
				}
				$params['usidfrom']=$idfrom;
            }
			$params['idmess_parent']=$id_parent;
			$params['ip']=$ip_int;
            $params['time']=$timestamp;
            $params['status']=1;
            $params['subject']=$subject;
            $params['subject_eng']=$subject_title;
            $params['numb']=$dgcode;
            $params['message']=$message;
            $params['messtype']='WWW';
			$params['userid_master']=0;
			
			$masteruser=$privateofficemodel->getmasteruser($this->view->dogovorinfo['TL_OpKey']);
			
			if(isset($masteruser['US_KEY'])){
				$params['userid_master']=$masteruser['US_KEY'];
			}
			
			$privateofficemodel->addmess($params);
			
			// Помечаем как Отвеченные. если есть сообщения
			if ($id_parent){
				if($sendadm) {
					//$privateofficemodel->setmesslistbyusidviewedadmbyparentid($usid,$id_parent);
					$privateofficemodel->setmessreadbyparent($id_parent, 'usidfrom');
				} else {
					if ($userinfo_dogovor['US_ID'] == $userinfo['US_ID']){
						$privateofficemodel->setmessreadbyparent($id_parent, 'usidto');
					} else {
						$privateofficemodel->setmessreadbyid($id_parent, $usid, 'usidto');
					}
				}
			}
		
            //Формируем сообщение для отправки на емайл
            $datasend=date("d.m.Y, H:i:s",$timestamp);
            $uscompanyname=$userinfo['US_COMPANYNAME'];
            $usprkey=$userinfo['US_PRKEY'];
            $usemail=$userinfo['US_EMAIL'];
            $usfullname=$userinfo['US_FULLNAME'];
            $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024);
            $ip=$_SERVER['REMOTE_ADDR'];
            
            $sendhtml='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                <tr><th colspan="2">Сообщение из личного кабинета</th></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Отправитель:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;';
		    $sendhtml.=  $sendername;
			$sendhtml.='	   </td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Имя компании:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a target="_blank" href="http://www.multitour.ru/privateoffice/agentlist/?prkey='.$usprkey.'">'.$uscompanyname.'</a></td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Полное имя:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.$usfullname.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>E-mail:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;<a href="mailto:'.$usemail.'">'.$usemail.'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Тема сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($subject).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Текст сообщения:</b></td>'.
                   '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($message).'</td></tr>'."\r\n";
            $sendhtml.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Время</b></td><td>&nbsp;&nbsp;&nbsp;'.$datasend.'</td></tr>'."\r\n";
            $sendhtml.='</table></center>';
			$sendhtml.= $this->mail_text_bottom;
            $emailfrom='noreply@multitour.ru';
            
			if($sendadm) {
				$emaillist[] = $userinfo['US_EMAIL'];
				$emaillist[]='semenov@multitour.ru';
			} else {
				$emaillist = array();
				$agentinfo=$privateofficemodel->getagentinfo($prkey);
				if($agentinfo['PR_OWNER']) {
					$curatorsmodel=$this->getModel('Curators');
					$curator=$curatorsmodel->getcuratorlistbyownerreg($agentinfo['PR_OWNER']);
					if ($curator){
						foreach($curator as $cur) if(!in_array($cur['cur_email_group'], $emaillist)){
							$emaillist[]=$cur['cur_email_group'];
						}
					}
					$curator=$curatorsmodel->getcuratorinfo($agentinfo['PR_OWNER']);
					
					if ($curator) {
						$emaillist[]=$curator['cur_email'];
					} 
				}
				$emaillist[]='semenov@multitour.ru';
				
				$mainmenemail=$this->view->dogovorinfo['DG_MAINMENEMAIL'];
				
				if ($mainmenemail) {
					$emaillist[]=$mainmenemail;
				}
				
				//$masteruser=$privateofficemodel->getmasteruser($this->view->dogovorinfo['TL_OpKey']);

				if (isset($masteruser['US_MAILBOX'])) {
					$masteruseremail=$masteruser['US_MAILBOX'];
					// zend_debug::dump($masteruser);
					$fiomaster=$masteruser['US_NAME'];
					if (strlen($masteruser['US_FNAME'])) {
						$fiomaster.=' '.$masteruser['US_FNAME'];
					}
					if (strlen($masteruser['US_SNAME'])) {
						$fiomaster.=' '.$masteruser['US_SNAME'];
					}
				} else {
					$masteruseremail='';
					$fiomaster='';
				}
				if ($masteruseremail) {
					$emaillist[]=$masteruseremail;
				}
			}
			$emaillist = array_unique($emaillist);
            $subjectmail=$subject;
            $subjectmail=$this->utf8_to_cp1251($subjectmail);
            // function utf8_to_cp12511($str) {
                // $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                // return $encoded_data;
            // }        
            $sendhtml=$this->utf8_to_cp1251($sendhtml);
            // echo 'Отправляем сообщение<br>';
            // echo '$subject = '.$subject.'<br>';
            // echo '$message = '.$message.'<br>';
            
            // echo $sendhtml;
//            openlog('[privateoffice/userinfo/dogovor]', LOG_ODELAY | LOG_PID, LOG_LOCAL0);

            if ($emaillist!=null) {
                 // zend_debug::dump($emaillist);
                 // exit;
				foreach ($emaillist as $email) {
                    $headers="From: \"".$this->utf8_to_cp1251('Сообщение из личного кабинета')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                    $headers.="Content-Type: text/html; charset=windows-1251\n";
                    $headers.="Content-Transfer-Encoding: 8bit";
                    if ($email!='') $se=mail($email,$subjectmail,$sendhtml,$headers);
                    if (!$se) {
                            echo "При отправке сообщения возникла ошибка";
//                            syslog(LOG_ERR, 'При отправки сообщения возникла ошибка');
                            exit;
                    } else {
                            echo 'Сообщение на E-mail успешно отправлено: '.$email.'<br>';
//                            syslog(LOG_ERR, 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i]."\nSubject:".$subject);
                    }
                }
            } else {
//                syslog(LOG_ERR, 'emaillist is null');
            }
//            closelog();
            
            // exit;
            
          
            if (!headers_sent()) {
                header('Location: ' . $urlredirect);
            }
            exit;
        }


		$citizens = $privateofficemodel->getCitizens();
		$this->view->citizens=$citizens;

		///	
		$this->view->strahovkaCodes=$privateofficemodel->fetchallStrahovka($dgcode);
		$this->view->dateBronirovanie=$this->view->dogovorinfo['DG_CRDATE'];
		$this->view->dateANN=$privateofficemodel->getDateANN($dgcode);
        $this->view->links=$privateofficemodel->getPolisLinks($dgcode);
		$this->view->bustur = $bustur;	
        $this->view->login=$uslogin;
        $this->view->uskey=$uskey;
        $this->view->ustype=$usertype;
        $this->view->dgcode=$dgcode;
        $this->view->status=$status;
        $this->view->allbool=$allbool;
        $this->view->turlist=$turlist;
        $this->view->upload_path=$this->upload_path;
        $this->view->type=$type;
		$this->view->paymenttype = $paymenttype;

    }
	/////////////


	public function printconfirmationhtmlAction() 
    {
        $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
		
		$paymenttype =  0;
		$paymenttypeval = 0;
		
					
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin'  || $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		

        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
		
		
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
		
		
		
        
        $logintxt=$_SESSION['s_login'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			
            if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }
            
			//Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            $agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
			
			if(in_array($dg_prkey, $this->agent_change_doc)){
				$userinfo = $privateofficemodel->getuserinfo($dogovorinfo['DG_DUPUSERKEY']);
				$pr_fullname=$userinfo['US_FULLNAME'];
				$this->setView('printconfirmationhtml2'); 
			}

			
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            $turlisttxt='';
            foreach ($turlist as $key=>$row) {
                // zend_debug::dump($row);
                $turlisttxt.=$row['TU_NAMERUS'];
                if (strlen($turlisttxt)>0 && strlen($row['TU_SHORTNAME'])>0) $turlisttxt.=' ';
                $turlisttxt.=$row['TU_SHORTNAME'];
                break;
            }
            if (count($turlist)>1) {
                $turlisttxt.='+'.(count($turlist)-1);
            }
            // zend_debug::dump($turlisttxt);
            // exit;
            
            $turlistview=array();
			$turist_main = '';
            foreach ($turlist as $key=>$row) {
				if($row['TU_ISMAIN']){
					$turist_main = $row['TU_NAMERUS'].' '.$row['TU_FNAMERUS'].' '.$row['TU_SNAMERUS'];
				}
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey,$dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                $turlistview[$key]['strax']=$strax;
            }
            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);//
            // zend_debug::dump($dogovorlist);
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
			
			$visalistview = array();
            foreach ($dogovorlist as $key=>$row)  {
			if($row['DL_SVKEY'] == 1182)
					{
						if($row['DL_COST'] != 0) {
						$paymenttype = 1182; 
						$paymenttypeval = $row['DL_COST'];
						}
						
					
					}
			
			
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
				if ($row['DL_SVKEY']=='5') {
					$visalistview[] = $row;
				}
            }

            //Таблица с проживаниями
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
            }       
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$datebeginint = '.$datebeginint.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // echo '$dateendint = '.$dateendint.'<br>';
            // exit;
            // echo 'hotelstxt='.$hotelstxt.'<br>';
            // exit;            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $row['DL_DGCOD']);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode, $row['DL_DGCOD']);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';

            //Расчетный час
            $rastcode=0;
            $rasttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $row['DL_DGCOD']);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }
            if (strlen($rasttxt)==0) $rasttxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }
            
            
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($dogovorinfo['DG_CRDATE'])),'',$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode, $row['DL_DGCOD']);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                            $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';              
            

            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;
            //скидка
            $discount=$dogovorinfo['DG_DISCOUNT'];
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->paymenttype = $paymenttype;
		$this->view->paymenttypeval =  $paymenttypeval;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        $this->view->turlistview=$turlistview;
        $this->view->airview=$airview;
        $this->view->hotellistview=$hotellistview;
        $this->view->vsttxt=$vsttxt;
        $this->view->doptxt=$doptxt;
        $this->view->rasttxt=$rasttxt;
        $this->view->tranferlistview=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        $this->view->discount=$discount;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->turlisttxt=$turlisttxt;
		$this->view->visalistview=$visalistview;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        $this->view->turist_main =  $turist_main;
        
        $filename = 'confirmation' .$dgcode. '.doc';
        $this->view->filename=$filename;
        
    }
	
	
	  public function printconfirmationAction() 
    {
               $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
		
		$paymenttype =  0;
		$paymenttypeval = 0;
		
					
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin'  || $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		

        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
		
		
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
		
		
		
        
        $logintxt=$_SESSION['s_login'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			
            if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }
            
			//Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            $agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;

            $pr_fullname=$agentinfo['PR_FULLNAME'];
			
			if(in_array($dg_prkey, $this->agent_change_doc)){
				$userinfo = $privateofficemodel->getuserinfo($dogovorinfo['DG_DUPUSERKEY']);
				$pr_fullname=$userinfo['US_FULLNAME'];
				$this->setView('printconfirmation2'); 
			}
			
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}

            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            $turlisttxt='';
            foreach ($turlist as $key=>$row) {
                // zend_debug::dump($row);
                $turlisttxt.=$row['TU_NAMERUS'];
                if (strlen($turlisttxt)>0 && strlen($row['TU_SHORTNAME'])>0) $turlisttxt.=' ';
                $turlisttxt.=$row['TU_SHORTNAME'];
                break;
            }
            if (count($turlist)>1) {
                $turlisttxt.='+'.(count($turlist)-1);
            }
            // zend_debug::dump($turlisttxt);
            // exit;
            
            $turlistview=array();
			$turist_main = '';
            foreach ($turlist as $key=>$row) {
				if($row['TU_ISMAIN']){
					$turist_main = $row['TU_NAMERUS'].' '.$row['TU_FNAMERUS'].' '.$row['TU_SNAMERUS'];
				}
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey,$dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                $turlistview[$key]['strax']=$strax;
            }
            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);//
            // zend_debug::dump($dogovorlist);
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
			$visalistview = array();
            foreach ($dogovorlist as $key=>$row)  {
			if($row['DL_SVKEY'] == 1182)
					{
						if($row['DL_COST'] != 0) {
						$paymenttype = 1182; 
						$paymenttypeval = $row['DL_COST'];
						}
						
					
					}
			
			
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
				if ($row['DL_SVKEY']=='5') {
					$visalistview[] = $row;
				}
            }

            //Таблица с проживаниями
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда

                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
            }       
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$datebeginint = '.$datebeginint.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // echo '$dateendint = '.$dateendint.'<br>';
            // exit;
            // echo 'hotelstxt='.$hotelstxt.'<br>';
            // exit;            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $row['DL_DGCOD']);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode, $row['DL_DGCOD']);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';

            //Расчетный час
            $rastcode=0;
            $rasttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $row['DL_DGCOD']);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }
            if (strlen($rasttxt)==0) $rasttxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }
            
            
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($dogovorinfo['DG_CRDATE'])),'',$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode, $row['DL_DGCOD']);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                            $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';              
            

            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;
            //скидка
            $discount=$dogovorinfo['DG_DISCOUNT'];
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->turist_main = $turist_main;
		
		$this->view->paymenttype = $paymenttype;
		$this->view->paymenttypeval =  $paymenttypeval;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        $this->view->turlistview=$turlistview;
        $this->view->airview=$airview;
        $this->view->hotellistview=$hotellistview;
        $this->view->vsttxt=$vsttxt;
        $this->view->doptxt=$doptxt;
        $this->view->rasttxt=$rasttxt;
        $this->view->tranferlistview=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        $this->view->discount=$discount;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->turlisttxt=$turlisttxt;
        $this->view->visalistview=$visalistview;
		
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        
        $filename = 'confirmation' .$dgcode. '.doc';
        $this->view->filename=$filename;
        if (!headers_sent()) {
            header("Content-Type: application/msword");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
    }    
 
	
	
 public function printconfirmationpdfAction() 
    {
              $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
		
		$paymenttype =  0;
		$paymenttypeval = 0;
		
					
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin'  || $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		

        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
		
		
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
		
		
		
        
        $logintxt=$_SESSION['s_login'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			
            if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }
            
			//Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
            $agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
			
			if(in_array($dg_prkey, $this->agent_change_doc)){
				$userinfo = $privateofficemodel->getuserinfo($dogovorinfo['DG_DUPUSERKEY']);
				$pr_fullname=$userinfo['US_FULLNAME'];
				$this->setView('printconfirmationpdf2'); 
			}
			
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
			
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            $turlisttxt='';
            foreach ($turlist as $key=>$row) {
                // zend_debug::dump($row);
                $turlisttxt.=$row['TU_NAMERUS'];
                if (strlen($turlisttxt)>0 && strlen($row['TU_SHORTNAME'])>0) $turlisttxt.=' ';
                $turlisttxt.=$row['TU_SHORTNAME'];
                break;
            }
            if (count($turlist)>1) {
                $turlisttxt.='+'.(count($turlist)-1);
            }
            // zend_debug::dump($turlisttxt);
            // exit;
            
            $turlistview=array();
			$turist_main = '';
            foreach ($turlist as $key=>$row) {
				if($row['TU_ISMAIN']){
					$turist_main = $row['TU_NAMERUS'].' '.$row['TU_FNAMERUS'].' '.$row['TU_SNAMERUS'];
				}
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey,$dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                $turlistview[$key]['strax']=$strax;
            }
            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);//
            // zend_debug::dump($dogovorlist);
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
            
			$visalistview = array();
            foreach ($dogovorlist as $key=>$row)  {
			if($row['DL_SVKEY'] == 1182)
					{
						if($row['DL_COST'] != 0) {
						$paymenttype = 1182; 
						$paymenttypeval = $row['DL_COST'];
						}
						
					
					}
			
			
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
				if ($row['DL_SVKEY']=='5') {
					$visalistview[] = $row;
				}
            }

            //Таблица с проживаниями
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
            }       
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$datebeginint = '.$datebeginint.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // echo '$dateendint = '.$dateendint.'<br>';
            // exit;
            // echo 'hotelstxt='.$hotelstxt.'<br>';
            // exit;            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $row['DL_DGCOD']);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode, $row['DL_DGCOD']);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';

            //Расчетный час
            $rastcode=0;
            $rasttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $row['DL_DGCOD']);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }
            if (strlen($rasttxt)==0) $rasttxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }
            
            
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($dogovorinfo['DG_CRDATE'])),'',$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode, $row['DL_DGCOD']);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                            $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';              
            

            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;
            //скидка
            $discount=$dogovorinfo['DG_DISCOUNT'];
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
		
        $this->view->turist_main = $turist_main;
		
		$this->view->paymenttype = $paymenttype;
		$this->view->paymenttypeval =  $paymenttypeval;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        $this->view->turlistview=$turlistview;
        $this->view->airview=$airview;
        $this->view->hotellistview=$hotellistview;
        $this->view->vsttxt=$vsttxt;
        $this->view->doptxt=$doptxt;
        $this->view->rasttxt=$rasttxt;
        $this->view->tranferlistview=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        $this->view->discount=$discount;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->turlisttxt=$turlisttxt;
		$this->view->visalistview=$visalistview;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        
        
        $filename = 'confirmation' .$dgcode. '.pdf';
        $this->view->filename=$filename;
		
        if (!headers_sent()) {
            header("Content-Type: application/pdf");
            header('Content-Disposition: attachment; filename="'.$filename.'"');
        }
		
        
    }

    public function linkdeleteAction() {
        $privateofficemodel=$this->getModel('Privateoffice');
        $id = (int)$this->_getParam('id',0);
        $privateofficemodel->linkDelete($id);

        $dgcode = (string)$this->_getParam('code','');
        $urlredirect = '/privateoffice/userinfo/dogovor?code='.$dgcode;
        if (!headers_sent()) {
            header('Location: ' . $urlredirect);
        }
    }
	
	public function addstrahovkaAction() {
        $dgcode = (string)$this->_getParam('code','');
        $strahovka = (string)$this->_getParam('strahovka','');
        $action = (string)$this->_getParam('act','');
        $turist = (string)$this->_getParam('turist','');
		
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
		$privateofficemodel->disableDLTrigers();
		
		
		if ($action=='add'){
		
            $privateofficemodel->addStrahovka($dgcode, $strahovka, $turist);
			
        } else {
            $privateofficemodel->deleteStrahovka($dgcode, $strahovka, $turist);
        }
	  
		
		$privateofficemodel->recalcDogovor($dgcode);
		
		$privateofficemodel->enableDLTrigers();
		
		die();
    }
	private function getStrahovkaByAge($age){
		$strahovkaB=0;
		if ($age>=3&&$age<71){
			$strahovkaB=27;
		}else if ($age>=71&&$age<76){
			$strahovkaB=20;
		}else if ($age>=76&&$age<=80){
			$strahovkaB=22;
		}

		$strahovkaC=0;
		if ($age>=3&&$age<71){
			$strahovkaC=18;
		}else if ($age>=71&&$age<76){
			$strahovkaC=34;
		}
		$result = array('B' => $strahovkaB, 'C' => $strahovkaC);
		return $result;
	}
	public function roominglistAction()  {
	
		$date=date('d.m.y');
		$date_from1 = $this->_getParam('date_from1',$date);
		$date_to1 = $this->_getParam('date_to1',$date);
		$date1 = $this->_getParam('date1','dl_datebeg');
		$status = $this->_getParam('status',2);
		$date_from2 = $this->_getParam('date_from2',$date);
		$date_to2 = $this->_getParam('date_to2',$date);
        $country_id =(int)$this->_getParam('country_id',0);
		$resort_id =(int)$this->_getParam('resort_id',0);
		$city_id =(int)$this->_getParam('city_id',0);
		$app_all =(int)$this->_getParam('app_all',1);
		$app_id = $this->_getParam('app_id',array());
		$partner_all =(int)$this->_getParam('partner_all',0);
		$partner_id = $this->_getParam('partner_id',array());
		$partner_search = $this->_getParam('partner_search','');
		$hotel_all =(int)$this->_getParam('hotel_all',0);
		$hotel_id = $this->_getParam('hotel_id',array());
		$hotel_search = $this->_getParam('hotel_search','');
		$tur_all =(int)$this->_getParam('tur_all',1);
		$tur_id = $this->_getParam('tur_id',array());
		$tur_search = $this->_getParam('tur_search','');
		$active_tab = $this->_getParam('active_tab','#tab-1');
		$netto = $this->_getParam('netto',0);
		$brutto = $this->_getParam('brutto',0);
		$profit = $this->_getParam('profit',0);
		$netto_partner = $this->_getParam('netto_partner',0);
		$pansion = $this->_getParam('pansion',0);
		$dopusl = $this->_getParam('dopusl',0);
		$notes = $this->_getParam('notes',0);
		$tur_show = $this->_getParam('tur_show',0);
		$bottom_show = $this->_getParam('bottom_show',0);
		$cur = $this->_getParam('cur','rub');
		$tpl = $this->_getParam('tpl',1);
		$year = $this->_getParam('year',FALSE);

		if (!$_REQUEST){
			$netto = 1;
			$brutto = 1;
			$profit = 1;
			$netto_partner = 1;
			$pansion = 1;
			$dopusl = 1;
			$notes = 1;
		}
		
		$CountriesModel=$this->getModel('Countries');
        $HotelsModel=$this->getModel('Hotels');
		$CitiesModel=$this->getModel('Cities');
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$countries=$CountriesModel->getlist(array('vis'=>1));
		
		if ($country_id){
			$resorts=$HotelsModel->resortlist($country_id);
		} else {
			$resorts = array();
		}
		
		if ($country_id && $resort_id){
			$cities = $CitiesModel->get4Country($country_id,'all',array('0'=>$resort_id));
		} else {
			$cities = array();
		}

		$orderfield= 'crdate';
		$ordertype='desc';
		$params = array();
		if ($city_id){
			$params['city_id'] = $city_id;
		}
		
		if ($year){
			$params['year'] = $year;
		}
		
		if ($status==1 || $status==2){
			$db_date_from1 = $this->getDbDate($date_from1);
			$db_date_to1 = $this->getDbDate($date_to1);
			$params['statusok'] = 1;
			if($status==2){
				$params['statusok'] = 2;
			}
			switch($date1){
				case 'dl_datebeg':
					$params['dl_datebeg_from'] = $db_date_from1;
					$params['dl_datebeg_to'] = $db_date_to1;
					break;
				case 'dg_crdate':
					$params['dg_crdate_from'] = $db_date_from1;
					$params['dg_crdate_to'] = $db_date_to1;
					break;
				case 'dg_turdateend':
					$params['dg_turdateend_from'] = $db_date_from1;
					$params['dg_turdateend_to'] = $db_date_to1;
					break;
				case 'dl_dateend':
					$params['dl_dateend_from'] = $db_date_from1;
					$params['dl_dateend_to'] = $db_date_to1;
					break;
				case 'all_date1':
					$params['dl_datebeg_from'] = $db_date_from1;
					$params['dl_datebeg_to'] = $db_date_to1;
					$params['dg_crdate_from'] = $db_date_from1;
					$params['dg_crdate_to'] = $db_date_to1;
					$params['dg_turdateend_from'] = $db_date_from1;
					$params['dg_turdateend_to'] = $db_date_to1;
					$params['dl_dateend_from'] = $db_date_from1;
					$params['dl_dateend_to'] = $db_date_to1;
					break;
			}
		} else {
			$db_date_from2 = $this->getDbDate($date_from2);
			$db_date_to2 = $this->getDbDate($date_to2);
			$params['dg_crdate_from'] = $db_date_from2;
			$params['dg_crdate_to'] = $db_date_to2;
			$params['statusnull'] = 1;
		}
		
		$list = array();
		if ($cities && array_key_exists($city_id, $cities)) {
			$list=$privateofficemodel->getapplistall($params,$orderfield,$ordertype);
		}
		
		$applist = array();
		$turlist = array();
		$hotellist = array();
		$partnerlist = array();
		if ($list){
			foreach($list as $row){
				if (!array_key_exists($row['PR_KEY'], $partnerlist)){
					$partnerlist[$row['PR_KEY']] = $row['PR_NAME'];
				}
				if (!array_key_exists($row['HD_KEY'], $hotellist)){
					if (!$partner_id){
						$hotellist[$row['HD_KEY']] = $row['HD_NAME'];
					} else {
						if (in_array($row['PR_KEY'], $partner_id)){
							$hotellist[$row['HD_KEY']] = $row['HD_NAME'];
						}
					}
				}
				if (!array_key_exists($row['TL_KEY'], $turlist)){
					if (!$hotel_id && !$partner_id){
						$turlist[$row['TL_KEY']] = $row['TL_NAME'];
					} else {
						if ($hotel_id){
							if (in_array($row['HD_KEY'], $hotel_id)){
								$turlist[$row['TL_KEY']] = $row['TL_NAME'];
							}
						} elseif($partner_id) {
							if (in_array($row['PR_KEY'], $partner_id)){
								$turlist[$row['TL_KEY']] = $row['TL_NAME'];
							}
						}
					}
					
				}
				if (!array_key_exists($row['DG_CODE'], $applist)){
					if (!$hotel_id && !$partner_id && !$tur_id){
						$applist[$row['DG_CODE']] = $row['DG_CODE'];
					} else {
						if ($tur_id) {
							if (in_array($row['TL_KEY'], $tur_id)){
								$applist[$row['DG_CODE']] = $row['DG_CODE'];
							}
						} elseif($hotel_id) {
							if (in_array($row['HD_KEY'], $hotel_id)){
								$applist[$row['DG_CODE']] = $row['DG_CODE'];
							}
						} elseif($partner_id){
							if (in_array($row['PR_KEY'], $partner_id)){
								$applist[$row['DG_CODE']] = $row['DG_CODE'];
							}
						}
					}
				}
			}
		}
		
		//print_r($partnerlist);exit();
		$this->view->date_from1=$date_from1;
		$this->view->date_to1=$date_to1;
		$this->view->date1=$date1;
		$this->view->date_from2=$date_from2;
		$this->view->date_to2=$date_to2;
		$this->view->status=$status;
		$this->view->country_id=$country_id;
		$this->view->countries=$countries;
		$this->view->resort_id=$resort_id;
		$this->view->resorts=$resorts;
		$this->view->city_id=$city_id;
		$this->view->cities=$cities;
		$this->view->partnerlist=$partnerlist;
		$this->view->partner_all=$partner_all;
		$this->view->partner_id=$partner_id;
		$this->view->partner_search=$partner_search;
		$this->view->hotellist=$hotellist;
		$this->view->hotel_all=$hotel_all;
		$this->view->hotel_id=$hotel_id;
		$this->view->hotel_search=$hotel_search;
		$this->view->turlist=$turlist;
		$this->view->tur_all=$tur_all;
		$this->view->tur_id=$tur_id;
		$this->view->tur_search=$tur_search;
		$this->view->applist=$applist;
		$this->view->app_id=$app_id;
		$this->view->app_all=$app_all;
		$this->view->active_tab = $active_tab;
		$this->view->netto = $netto;
		$this->view->brutto = $brutto;
		$this->view->profit = $profit;
		$this->view->netto_partner = $netto_partner;
		$this->view->pansion = $pansion;
		$this->view->dopusl = $dopusl;
		$this->view->notes = $notes;
		$this->view->tur_show = $tur_show;
		$this->view->bottom_show = $bottom_show;
		$this->view->cur = $cur;
		$this->view->tpl = $tpl;
		$this->view->year = $year;
	}
	private function getDbDate($str){
		$result = date('Y-m-d H:i:s');
		if (strlen($str)>0) {
		    $str_arr = explode('.', $str);
            if (sizeof($str_arr)!=3) $str='';
            else {
                $day=(int)$str_arr[0];
                $mon=(int)$str_arr[1];
                $year=(int)$str_arr[2];
                if (!checkdate ($mon, $day, $year)) $result = '';
                else {
                    $timestamp = mktime(0, 0, 0, $mon, $day, $year);
                    $result = date('Y-m-d H:i:s', $timestamp);
                }
            }
        }
		return $result;
	}
	public function printroominglistAction(){
		
		set_time_limit(0);
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$report = $privateofficemodel->getreporttoprint();
		
		if (!$report){
			exit();
		}
		
		$params = unserialize($report['params']);
		
		$this->setCfgLayout('empty');
		
		$app_id = $params['app_id'];
		
		$netto = 0;
		if (isset($params['netto'])){
			$netto = $params['netto'];
		}
		
		$brutto = 0;
		if (isset($params['brutto'])){
			$brutto = $params['brutto'];
		}
		
		$profit = 0;
		if (isset($params['profit'])){
			$profit = $params['profit'];
		}
		
		$pansion = 0;
		if (isset($params['pansion'])){
			$pansion = $params['pansion'];
		}
		
		$dopusl = 0;
		if (isset($params['dopusl'])){
			$dopusl = $params['dopusl'];
		}
		
		$notes = 0;
		if (isset($params['notes'])){
			$notes = $params['notes'];
		}

		$cur = $params['cur'];
		$tpl = $params['tpl'];
		
		$date=date('d.m.y');
		$date_from1 = $params['date_from1'];
		$date_to1 = $params['date_to1'];
		$date1 = $params['date1'];
		$date_status = $params['status'];
		$date_from2 = $params['date_from2'];
		$date_to2 = $params['date_to2'];
		
		//$app_id = array('0'=>'V62063');
		
		$filter_date = array();
		if (!$date_status){
			$filter_date = array('value' => 'canceled', 'date_from' => $date_from2, 'date_to' => $date_to2);
		} else {
			$filter_date = array('value' => $date1, 'date_from' => $date_from1, 'date_to' => $date_to1);
		}
		
		$orderfield= 'crdate';
		$ordertype='desc';
		$params = array();
		$fields = array('netto'=>$netto, 'brutto'=>$brutto, 'profit'=>$profit, 'pansion'=>$pansion, 'dopusl'=>$dopusl, 'notes'=>$notes, 'cur'=>$cur);
		$data = array();
		$partner = array();
		$partner_fax = array();
		$hotels = array();
		$turs = array();
		if ($app_id){
		
			$params_report = array();
			$params_report['status'] = 1;
			$params_report['creation_date'] = date('Y-m-d H:i:s');
			$privateofficemodel->updatereport($params_report, $report['report_id']);
			
			$file_name = $report['login'].' '.$params_report['creation_date'].'.xlsx';
		
			$messages = $privateofficemodel->getmessagebydgarray($app_id);
			$turists = $privateofficemodel->getturistbydgarray($app_id);
			$params['app_arr'] = $app_id;
			$list=$privateofficemodel->getroominglist($params,$orderfield,$ordertype);
			if ($list){
				foreach ($list as $row){
					if (!array_key_exists($row['PR_KEY'], $partner)){
						$partner[$row['PR_KEY']]  = $row['PR_FULLNAME'];
					}
					if (!array_key_exists($row['PR_KEY'], $partner_fax)){
						$partner_fax[$row['PR_KEY']]  = $row['PR_FAX'];
					}
					if (!array_key_exists($row['TL_KEY'], $turs)){
						$turs[$row['TL_KEY']] = $row['TL_NAME'];
					}
					if (!array_key_exists($row['HD_KEY'], $hotels)){
						$hotels[$row['HD_KEY']] = $row['HD_NAME'].', '.$row['HD_STARS'];
					}

					$data[$row['DL_KEY']]['DG_CODE'] = $row['DG_CODE'];
					$data[$row['DL_KEY']]['DL_DATEBEG'] = date("d.m.Y", strtotime($row['DL_DATEBEG']));
					$data[$row['DL_KEY']]['DL_DATEEND'] = date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
					$data[$row['DL_KEY']]['days'] = (string)$row['DL_NDAYS'].'/'.(string)($row['DL_NDAYS']+1);
					$data[$row['DL_KEY']]['DL_NMEN'] = $row['DL_NMEN'];
					$data[$row['DL_KEY']]['room_type'] = $row['RM_NAME'].' '.$row['RC_NAME'].' '.$row['AC_CODE'];
					$data[$row['DL_KEY']]['SL_NAME'] = $row['SL_NAME'];
					if (isset($turists[$row['DL_KEY']])){
						$data[$row['DL_KEY']]['turists'] = $turists[$row['DL_KEY']];
					}
					$data[$row['DL_KEY']]['PN_NAME'] = $row['PN_NAME'];
					$data[$row['DL_KEY']]['A2_NAME'] = $row['A2_NAME'];
					if (isset($messages[$row['DG_CODE']])){
						$data[$row['DL_KEY']]['notes'] = $messages[$row['DG_CODE']];
					} else {
						$data[$row['DL_KEY']]['notes'] = array();
					}
					$netto_val = $row['DL_COST'];
					$brutto_val = $row['DL_BRUTTO'];
					$cur_format = $row['RA_FORMAT'];
					if ($row['CS_RATE'] != $row['RA_CODE'] && $row['CR_COURSE'] && $cur!='rub'){
						$netto_val = $netto_val/$row['CR_COURSE'];
						$brutto_val = $brutto_val/$row['CR_COURSE'];
						$cur_format = $row['CS_RATE'];
					}
					$data[$row['DL_KEY']]['netto_val'] = round($netto_val,0);
					$data[$row['DL_KEY']]['brutto_val'] = round($brutto_val,0);
					$data[$row['DL_KEY']]['cur_format'] = $cur_format;
					$data[$row['DL_KEY']]['CS_RATE'] = $row['CS_RATE'];
					$data[$row['DL_KEY']]['RA_CODE'] = $row['RA_CODE'];
					$data[$row['DL_KEY']]['CR_COURSE'] = $row['CR_COURSE'];
				}

			}
		} 

		$this->view->data=$data;
		$this->view->fields=$fields;
		$this->view->partner=$partner;
		$this->view->partner_fax=$partner_fax;
		$this->view->turs=$turs;
		$this->view->hotels=$hotels;
		$this->view->filter_date=$filter_date;
		$this->view->cur=$cur;
		$this->view->tpl=$tpl;
		$this->view->file_name=$file_name;
		$this->view->report_id=$report['report_id'];
		
	}
	public function addreportAction(){

		$params = $_REQUEST;
		$type = $this->_getParam('report_type',1);
		$usertype = $this->getusertypeinsession();
		
		$login = 'admin';
		if($usertype == 'manager' || $usertype == 'meneger') {
			preg_match('/^'.$usertype.'_(.*)$/', $idfrom, $matches);
			$login=$matches[1];
		}

		$privateofficemodel=$this->getModel('Privateoffice');
		$report_id = $privateofficemodel->addreport($params, $type, $login);
		
		$json['report_id'] = FALSE;
		if ($report_id){
			$json['report_id'] = $report_id;
		}
		
		echo json_encode($json); exit();
	}
	public function getreportbyidAction(){
	
		$report_id = $this->_getParam('report_id',0);
		
		$privateofficemodel=$this->getModel('Privateoffice');
		$report = $privateofficemodel->getreportbyid($report_id);
		
		$json['report'] = FALSE;
		
		if ($report){
			$json['report'] = $report;
		}
		
		echo json_encode($json); exit();
	}
	public function updatereportAction(){

		$params = $this->_getParam('params',array());
		
		$report_id = $this->_getParam('report_id',0);
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$privateofficemodel->updatereport($params, $report_id);
		
		exit();
	}
	///
	public function paymentlistAction()
    {
	
		$this->setCfgLayout('full_admin');
		$this->authsecure();
        $uskey = $this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $usertype = $this->getusertypeinsession();
		$error = '';
		
		if($usertype != 'admin') 
		{
		if (!headers_sent()) {
                    header('Location: /privateoffice/');
                }
                exit;
		}
		$page_actives=array(200 =>'200');
        Zend_Registry::set('page_actives', $page_actives);
		
		
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
			if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['delpaylist']) && $_POST['delpaylist'] == 1) {
            $privateofficemodel->delpaymentslist($_POST['pl_id'],$this->upload_plist_path);
									if (!headers_sent()) {
									header('Location: /privateoffice/paymentlist/');
									}
									exit;
			
			}
		
		
            if ($_SERVER['REQUEST_METHOD']=='POST' && isset($_POST['uploadpaylist']) && $_POST['uploadpaylist'] == 1) {
                if (isset($_FILES)) {
                    if ($usertype=='admin') {
                        foreach( $_FILES as $file ) {
                            if(!$file['error'])
                            {
							$tmpa  = explode(".", strtolower($file['name']));
							$ext = $tmpa[sizeof($tmpa)-1];
							if($ext == 'txt')
							{
                                
                                    $filename = time().md5($file['name']).'.'.$ext;
                                    $uploadfile = $this->upload_plist_path.$filename;
                                    move_uploaded_file($file['tmp_name'], $_SERVER['DOCUMENT_ROOT'].$uploadfile);
									chmod($_SERVER['DOCUMENT_ROOT'].$uploadfile, 0777); // Задать права на файл
									$ares  = $privateofficemodel->addpaymentslist($filename, $file['name'], $this->upload_plist_path);
									
									if ($ares == 'ok') {
									header('Location: /privateoffice/paymentlist/');
									exit;
									} else
									{
									unlink($_SERVER['DOCUMENT_ROOT'].$uploadfile);
									
									$error = $ares;
									}
									
							} else 		$error = "Недопустимое расширение файла. Файл должен иметь расширение .txt !";
                                
                            } else $error = "Ошибка файла";
                        }
                    }   else $error = "Загружать файлы могут только администраторы";
                }
			$_SESSION['payment_error'] = $error;
			header('Location: /privateoffice/paymentlist/');
			exit;
            }        

		if(isset($_SESSION['payment_error']) && $_SESSION['payment_error'] != '')
		{
		$error = $_SESSION['payment_error'];
		$_SESSION['payment_error'] = '';
		}		
			
		$data = $privateofficemodel->getpaymentslist();	
		$this->view->data = $data;
        $this->view->error=$error;
		$this->view->ustype=$usertype;
        
    }
    public function traininglistAction()
	{
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		$type = (string)$this->_getParam('type', FALSE);

		$privateofficemodel=$this->getModel('Privateoffice');
		 
		if($usertype != 'user') {
			
			//Вывод для админов
			$type = 'admin';
			$data = $privateofficemodel->gettrainingslist($type);
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);
			$this->setView('traininglist-admin'); 
		} else {
			//Вывод для агентов, архивный или активный
			if ($type != 'archive'){
				$type = 'active';
			} else {
				$this->setView('traininglist-archive'); 
			}
			$data = $privateofficemodel->gettrainingslist($type);
			$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			if (!$this->view->userinfo) {
				return $this->error(404);                
				exit;
			}
		}

		$this->view->pagetype=$type;
		$this->view->usertype=$usertype;
        $this->view->data = $data;

	}
	public function trainingAction(){
	
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
		
		$privateofficemodel=$this->getModel('Privateoffice');
		$userinfo = $privateofficemodel->getuserinfo($uskey);
		if (!$userinfo) {
			return $this->error(404);                
			exit;
		}
		
		$training_id = $this->_getParam('training_id',0);
		
		$is_finish = FALSE;
		$params['uskey'] = $uskey;
		$params['status'] = 1;
		$params['training_id'] = $training_id;
		$training_info = $privateofficemodel->getagenttraininglog($params);
		if($training_info){
			$is_finish = TRUE;
			$training_info = $training_info[0];
		}
		
		$error = FALSE;
		if(!$is_finish) {
			$params = array();
			$params['status'] = 1;
			$params['use_date'] = TRUE;
			$training_info = $privateofficemodel->getalltraininginfo($training_id, $params);
			if (!$training_info) {
				return $this->error(404);                
				exit;
			}
			
			 //Проверка ответов
			 if ($_SERVER['REQUEST_METHOD']=='POST'){
			 
				$question_arr = (array)$this->_getParam('question', array());
				$answer_arr = (array)$this->_getParam('answer', array());
				$level_id = (int)$this->_getParam('level_id');

				foreach($training_info['levels'][$level_id]['questions'] as $question) {
					if (!isset($question_arr[$question['question_id']])){
						$error = TRUE;
					}
					if($error){
						break;
					}
					foreach($question['answers'] as $answer){
						if($answer['correct'] == 1){
							if(!in_array($answer['answer_id'], $question_arr[$question['question_id']])){
								$error = TRUE;
							} else {
								if($answer['text']){
									if(isset($answer_arr[$answer['answer_id']])){
										if($answer['text'] != $answer_arr[$answer['answer_id']]){
											$error = TRUE;
										}
									} else {
										$error = TRUE;
									}
								}
								unset($question_arr[$question['question_id']][array_search($answer['answer_id'], $question_arr[$question['question_id']])]);
							}
						}
					}
				}
				//Проверка на лишние ответы
				foreach($question_arr as $item){
					if(count($item)){
						$error = TRUE;
					}
				}
				if (!$error){
					$privateofficemodel->addtraininglevellog($level_id, $uskey);
				}
				$status = 0;
				$privateofficemodel->addtraininglog($training_id, $uskey, $status);
			}
			
			$levels = $privateofficemodel->getagenttraininglevels($training_id, $uskey);
			$levels_agent = array();
			if($levels){
				foreach($levels as $item){
					$levels_agent[] = $item['level_id'];
				}
			}
			
			$level_current = 0;
			foreach($training_info['levels'] as $key=>$value){
				if(!in_array($key, $levels_agent)) {
					$level_current = $key;
					break;
				} 
			}
			if(!$level_current){
			
				$is_finish = TRUE;
				$status = 1;
				$privateofficemodel->addtraininglog($training_id, $uskey, $status);
			}
			$this->view->level_current = $level_current;
			
		} 
		$this->view->training_info = $training_info;
		$this->view->is_finish = $is_finish;
		$this->view->error = $error;
		$this->view->training_id = $training_id;
		$this->view->user_id = $uskey;
	}
	public function printtraininghtmlAction(){
	
		$this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		
		$training_id = (int)$this->_getParam('training_id', 0);
		$user_id = (int)$this->_getParam('user_id', 0);
		
		if($usertype == 'user' & $uskey != $user_id){

			return $this->error(404);                
			exit;
		}
		
		if (!$training_id || !$user_id){
				
			return $this->error(404);                
			exit;
		}
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$params['uskey'] = $user_id;
		$params['status'] = 1;
		$params['training_id'] = $training_id;
		$training_info = $privateofficemodel->getagenttraininglog($params);

		if(!$training_info){
			return $this->error(404);                
			exit;
		} 
		$training_info = $training_info[0];
		
		$this->view->training_info=$training_info;

	}
	public function trainingstatAction(){
		$this->setCfgLayout('page');
		$this->authsecure();
        $usertype = $this->getusertypeinsession();
		
		$training_id = (int)$this->_getParam('training_id', 0);
		$type = (string)$this->_getParam('type', FALSE);
		
		if (!$training_id || !$type){
				
			return $this->error(404);                
			exit;
		}
		
		if ($type != 'start' && $type != 'finish'){
				
			return $this->error(404);                
			exit;
		}
		
		if ($usertype == 'user' && $type != 'finish'){
			
			return $this->error(404);                
			exit;
		}
		
		if ($usertype != 'user'){
			
			$this->setView('trainingstat-admin');
			
		}

		$privateofficemodel=$this->getModel('Privateoffice');
		
		$data = array();
		
		if($type == 'start'){
			$data = $privateofficemodel->gettraininglevelsstat($training_id);
		} else {
			$params['training_id'] = $training_id;
			$params['status'] = 1;
			$data = $privateofficemodel->getagenttraininglog($params);
		}

		$training_info = $privateofficemodel->gettrainingsinfo(array('training_id' => $training_id));

		if (!$training_info){
			return $this->error(404);                
			exit;
		}
		
		$training_info = $training_info[0];
		
		$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
		Zend_Registry::set('page_actives', $page_actives);
		
		if ($usertype == 'user'){
		
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			
			if (date('Y-m-d', strtotime($training_info['finish'])) >= date('Y-m-d') || $training_info['status'] != 1){
				return $this->error(404);                
				exit;
			}
		}

        $this->view->data = $data;
		$this->view->training_info = $training_info;
		$this->view->type = $type;
	}
	public function trainingviewAction(){
	
		$this->setCfgLayout('page');
		
        $this->authsecure();
        $usertype = $this->getusertypeinsession();
		
		$training_id = (int)$this->_getParam('training_id', 0);
		
		if (!$training_id){
			return $this->error(404);                
			exit;
		}
		
		$privateofficemodel=$this->getModel('Privateoffice');
		$training_info = $privateofficemodel->getalltraininginfo($training_id);
		if (!$training_info) {
			return $this->error(404);                
			exit;
		}
		
		if($usertype == 'user'){
		
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			
			if (date('Y-m-d', strtotime($training_info['finish'])) >= date('Y-m-d') || $training_info['status'] != 1){
				return $this->error(404);                
				exit;
			}

		} else {
			$this->setView('trainingview-admin');
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);
		}

		$this->view->training_info = $training_info;
		
	}
	
	public function transportlistAction(){
	
		$dg_code = $this->_getParam('dg_code', 0);
		$tf_key = (int)$this->_getParam('tf_key', 0);
		$type = $this->_getParam('type', 'start');
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$transfer_info = $privateofficemodel->gettransferbyid($tf_key);

		$type_fields = 0;
		if($transfer_info){
			$transfer_params = explode('-',$transfer_info['TF_NAMELAT']);
			if ($transfer_params){
				switch($transfer_params[1]){
					case 'ж/д':
						$type_fields = 1;
						break;
					case 'а/п':
						$type_fields = 2;
						break;
				}
			}
		}
		
		$transfer_params =  $privateofficemodel->gettransferinfobydg($dg_code);
		$params = array();
		if($transfer_params){
			$params = unserialize($transfer_params['params']);
			if(!$type_fields && isset($params[$type]['type_fields'])){
				$type_fields = $params[$type]['type_fields'];
			}
		}
		
		$dogovorinfo = $privateofficemodel->getdogovorinfo($dg_code);
		$dogovorlist=$privateofficemodel->getdogovorlist($dogovorinfo['DG_Key'],  date("Y", strtotime($dogovorinfo['DG_CRDATE'])));

		$dogovor_transport = array();
		foreach($dogovorlist as $item){
			if($item['DL_SVKEY'] == 2 && $item['DL_CODE']== $tf_key){
				$transport = $privateofficemodel->gettranspost($item['DL_SUBCODE1']);
				if($transport){
					if(isset($dogovor_transport[$transport['TR_KEY']])){
						$dogovor_transport[$transport['TR_KEY']]['count']++;
					} else {
						$dogovor_transport[$transport['TR_KEY']] = $transport;
						$dogovor_transport[$transport['TR_KEY']]['count'] = 1;
					}
				}
			}
		}

		if(!$dogovor_transport){
			$transportlist = $privateofficemodel->gettransportlist($dg_code, $tf_key);
		} else {
			$transportlist = array();
		}

		$this->view->dogovor_transport = $dogovor_transport;
		$this->view->transportlist = $transportlist;
		$this->view->tf_key = $tf_key;
		$this->view->type = $type;
		$this->view->type_fields = $type_fields;
		$this->view->params = $params;
	}
	public function addtransferAction(){
		
		$dgcode = (string)$this->_getParam('dg_code','');
		$hotel_name = (string)$this->_getParam('hotel_name','');
		$hotel_address = (string)$this->_getParam('hotel_address','');
		
		$date = date('d.m.y');
		$date_start = $this->_getParam('date_start',$date);
		$date_start_db = $this->getDbDate($date_start);
		$date_finish = $this->_getParam('date_finish',$date);
		$date_finish_db = $this->getDbDate($date_finish);
		
		$transport_start = $this->_getParam('transport_start',array());
		$transport_finish = $this->_getParam('transport_finish',array());
		
		$tf_key_start = $this->_getParam('tf_key_start',0);
		$tf_key_finish = $this->_getParam('tf_key_finish',0);
		
		$transfer_fields = $this->_getParam('transfer_fields',array());
		
		$turist_main = $this->_getParam('turist_main',array());
	
        $privateofficemodel=$this->getModel('Privateoffice');
		
		$dogovorinfo = $privateofficemodel->getdogovorinfo($dgcode);
		$agentinfo = $privateofficemodel->getagentinfo($dogovorinfo['DG_PARTNERKEY']);
		
		$transfer_start = $privateofficemodel->gettransferbyid($tf_key_start);
		$transfer_finish = $privateofficemodel->gettransferbyid($tf_key_finish);
		
		//Информация по стране
		$countryid=(int)$dogovorinfo['DG_CNKEY'];
		$countriesmodel = $this->getModel('Countries');
		$country=$countriesmodel->getcountrybyid($countryid);
		if (isset($country['Name'])) {
			$countryname=$country['Name'];
		} else {
			$countryname='';
		}
		
		//Информация по городу
		$cityid=(int)$dogovorinfo['DG_CTKEY'];
		$citiesmodel = $this->getModel('Cities');
		$city=$citiesmodel->getcitybyid($cityid);
		if (isset($city['Name'])) {
			$cityname=$city['Name'];
		} else {
			$cityname='';
		}

		if($turist_main){
			$privateofficemodel->editTurist($turist_main);
		}
		
		$transfer_fields_result = array();
		if($transfer_fields){
			if(isset($transfer_fields['start']['fields'])) {
				foreach ($transfer_fields['start']['fields'] as $key=> $value) {
					if($value){
						$transfer_fields_result['start'] = $transfer_fields['start'];
					}
				}
			}
			if(isset($transfer_fields['finish']['fields'])) {
				foreach ($transfer_fields['finish']['fields'] as $key=> $value) {
					if($value){
						$transfer_fields_result['finish'] = $transfer_fields['finish'];
					}
				}
			}
		}
		
		if($transfer_fields_result){
			$privateofficemodel->addTransferParams($dgcode, $transfer_fields_result);
		}

		$privateofficemodel->disableDLTrigers();
		
		$is_transfer = FALSE;
		$transport_start_arr = array();
		foreach($transport_start as $key => $value) {
			if($value['count'] && $value['nmen']){
				$is_transfer = TRUE;
				$transport_start_arr[] = $value['name'].' ('.$value['count'].')';
				for($i=1;$i<=$value['count'];$i++){
					$privateofficemodel->addTransfer($dgcode, $tf_key_start, $key, $value['nmen'], $date_start_db, $turist_main);
				}
			}
		}

		$transport_finish_arr = array();
		foreach($transport_finish as $key => $value) {
			if($value['count'] && $value['nmen']){
				$is_transfer = TRUE;
				$transport_finish_arr[] = $value['name'].' ('.$value['count'].')';
				for($i=1;$i<=$value['count'];$i++){
					$privateofficemodel->addTransfer($dgcode, $tf_key_finish, $key, $value['nmen'], $date_finish_db, $turist_main);
				}
			}
		}
		
		$privateofficemodel->recalcDogovor($dgcode);
		
		$privateofficemodel->enableDLTrigers();
		
		if(!$is_transfer){
			
			session_start();
			$uskey = $this->getuskeyinsession();
			$usertype = $this->getusertypeinsession();
			
			$params=array();
			
			$uslogin='';
			if($usertype == 'manager' || $usertype == 'meneger') {
				if (isset($_SESSION['s_login'])) {
					preg_match('/^'.$usertype.'_(.*)$/', $_SESSION['s_login'], $matches);
					$uslogin=$matches[1];
				}
			} elseif($usertype == 'admin') $uslogin='admin';

			if ($usertype!='manager' && $usertype!='admin' && $usertype!='meneger' && $uskey != 0) {
				$userinfo=$privateofficemodel->getuserinfo($uskey);
				$params['usidfrom']=$userinfo['US_ID'];
				$params['usidto']='admin';
			} else {
				$userinfo= $privateofficemodel->getuserinfo($dogovorinfo['DG_DUPUSERKEY']);
				$params['usidfrom']=$uslogin;
				$params['usidto']=$userinfo['US_ID'];
			}

			$timestamp=time();
			$ip_int=$this->ip2int($_SERVER['REMOTE_ADDR']);
			$params['ip']=$ip_int;
			$params['time']=$timestamp;
			$params['status']=1;
			$params['idmess_parent']=0;
			$params['subject']= "Вопрос из личного кабинета по заявке №".$dgcode;
			$params['subject_eng']='dogovorrequest';
			$params['numb']=$dgcode;
			$params['message']='Были изменены данные по трансферу.';
			$params['remark']='';
			$params['messtype']='MTM';
			$privateofficemodel->addmess($params);
		}
		
		// Отправка сообщения
		$emaillist = array();
		
		if ($city['emails']) {
			$emaillist = explode(',', $city['emails']);
			foreach($emaillist as $key=>$value){$emaillist[$key] = trim($value);}
		} else {
			$mainmenemail=$dogovorinfo['DG_MAINMENEMAIL'];
			if ($mainmenemail) {
				$emaillist[]=$mainmenemail;
			}
		}

		$emaillist[]='semenov@multitour.ru';
		$emaillist[]='kredich@multitour.ru';
		$emaillist[]='sharov@multitour.ru';
		
		//$emaillist = array(1=>'inettman@gmail.com', 2=>'semenov@multitour.ru');
		
		
		$send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
        <tr><th>Тип</th><th>Поле</th><th>Значение</th></tr>
        ';
		
		$rows[] = array(
			'title'	  => 'Данные турагентства',
			'fields'  => array(
				'0' => array('field' => 'Наименование', 'value' => $agentinfo['PR_FULLNAME']),
				'1' => array('field' => 'Контактное лицо', 'value' => $agentinfo['PR_BOSSNAME']),
				'2' => array('field' => 'Номер телефона', 'value' => $agentinfo['PR_PHONES']),
				'3' => array('field' => 'Адрес электронной почты', 'value' => $agentinfo['PR_EMAIL']),
			)
		);
		if($turist_main){
			$rows[] = array(
				'title'	  => 'Данные о туристах',
				'fields'  => array(
					'0' => array('field' => 'ФИО', 'value' => $turist_main['name']),
					'1' => array('field' => 'Контактный телефон', 'value' => $turist_main['phone']),
					'2' => array('field' => 'Номер брони', 'value' => $dgcode),
					'3' => array('field' => 'Направление', 'value' => $countryname),
					'4' => array('field' => 'Город', 'value' => $cityname),
					'5' => array('field' => 'Отель', 'value' => $hotel_name),
					'6' => array('field' => 'Адрес отеля', 'value' => $hotel_address),
				)
			);
		}
		
		if(!$transport_start_arr || !$transport_finish_arr){
			
			$transfer['start'] = array();
			$transfer['finish'] = array();
			$transport['start'] = array();
			$transport['finish'] = array();
			
			$dogoror_transfers = $privateofficemodel->getdogovortransfers($dgcode);
			
			foreach($dogoror_transfers as $item){
				$arr = explode('-',$item['TF_NAMELAT']);
				if($arr){
					switch(strtolower($arr[0])){
						case 'встреча':
							$transfer['start'][$item['TF_KEY']]  = $item;
							if(isset($transport['start'][$item['TR_KEY']])){
								$transport['start'][$item['TR_KEY']]['count']++;
							} else {
								$transport['start'][$item['TR_KEY']]['count'] = 1;
								$transport['start'][$item['TR_KEY']]['name'] = $item['TR_NAME'];
							}
							break;
						case 'проводы':
							$transfer['finish'][$item['TF_KEY']]  = $item;
							if(isset($transport['finish'][$item['TR_KEY']])){
								$transport['finish'][$item['TR_KEY']]['count']++;
							} else {
								$transport['finish'][$item['TR_KEY']]['count'] = 1;
								$transport['finish'][$item['TR_KEY']]['name'] = $item['TR_NAME'];
							}
							break;
					}
				}
			}
			
			if($transfer['start']){
				foreach($transfer['start'] as $transfer_item) {
					
				}
			}
		}
		$is_send = FALSE;
		if($transport_start_arr || isset($transfer_fields['start'])){
			$is_send = TRUE;
			$row_fields = array();
			if($transport_start_arr){
				$start_str = 'Встреча';
				$row_fields[] = array('field'=>'Место назначения (откуда-куда)', 'value' => $transfer_start['TF_NAME']);
				$row_fields[] = array('field'=>'Вид транспорта', 'value' => implode($transport_start_arr, ', '));
				$row_fields[] = array('field'=>'Дата', 'value' => $date_start);
			} else {
				$start_str = 'Встреча (изменение)';
				$transfer_start_str = '';
				$transport_start_str = '';
				if($transfer['start']){
					foreach($transfer['start'] as $transfer_item){
						$transfer_start_str .= $transfer_item['TF_NAME'].', ';
						$transfer_start_date = date("d.m.Y", strtotime($transfer_item['DL_DATEBEG']));
					}
					$transfer_start_str = trim($transfer_start_str, ', ');
					$row_fields[] = array('field'=>'Место назначения (откуда-куда)', 'value' => $transfer_start_str);
					if($transport['start']){
						foreach($transport['start'] as $transport_item){
							$transport_start_str .= $transport_item['name'].'('.$transport_item['count'].'), ';
						}
						$transport_start_str = trim($transport_start_str, ', ');
						$row_fields[] = array('field'=>'Вид транспорта', 'value' => $transport_start_str);
					}
					$row_fields[] = array('field'=>'Дата', 'value' => $transfer_start_date);
				}
			}
		
			if($transfer_fields['start']['type_fields'] == 1){
				$row_fields[] = array('field'=>'Поезд/самолет', 'value' => 'Поезд');
				$row_fields[] = array('field'=>'Номер поезда', 'value' => $transfer_fields['start']['fields']['train']);
				$row_fields[] = array('field'=>'Номер вагона', 'value' => $transfer_fields['start']['fields']['wagon']);
				$row_fields[] = array('field'=>'Время прибытия', 'value' => $transfer_fields['start']['fields']['time']);
			}
			if($transfer_fields['start']['type_fields'] == 2){
				$row_fields[] = array('field'=>'Поезд/самолет', 'value' => 'Самолет');
				$row_fields[] = array('field'=>'Номер рейса', 'value' => $transfer_fields['start']['fields']['plane']);
				$row_fields[] = array('field'=>'Время прилета', 'value' => $transfer_fields['start']['fields']['time']);
			}

			$rows[] = array(
				'title'	  => $start_str,
				'fields'  => $row_fields
			);
		}
		
		if($transport_finish_arr || isset($transfer_fields['finish'])){
			$is_send = TRUE;
			$row_fields = array();
			if($transport_finish_arr){
				$finish_str = 'Проводы';
				$row_fields[] = array('field'=>'Место назначения (откуда-куда)', 'value' => $transfer_finish['TF_NAME']);
				$row_fields[] = array('field'=>'Вид транспорта', 'value' => implode($transport_finish_arr, ', '));
				$row_fields[] = array('field'=>'Дата', 'value' => $date_finish);
			} else {
				$finish_str = 'Проводы (изменения)';
				$transfer_finish_str = '';
				$transport_finish_str = '';
				if($transfer['finish']){
					foreach($transfer['finish'] as $transfer_item){
						$transfer_finish_str .= $transfer_item['TF_NAME'].', ';
						$transfer_finish_date = date("d.m.Y", strtotime($transfer_item['DL_DATEBEG']));
					}
					$transfer_finish_str = trim($transfer_finish_str, ', ');
					$row_fields[] = array('field'=>'Место назначения (откуда-куда)', 'value' => $transfer_finish_str);
					if($transport['finish']){
						foreach($transport['finish'] as $transport_item){
							$transport_finish_str .= $transport_item['name'].'('.$transport_item['count'].'), ';
						}
						$transport_finish_str = trim($transport_finish_str, ', ');
						$row_fields[] = array('field'=>'Вид транспорта', 'value' => $transport_finish_str);
					}
					$row_fields[] = array('field'=>'Дата', 'value' => $transfer_finish_date);
				}
			}
			
			if($transfer_fields['finish']['type_fields'] == 1){
				$row_fields[] = array('field'=>'Поезд/самолет', 'value' => 'Поезд');
				$row_fields[] = array('field'=>'Номер поезда', 'value' => $transfer_fields['finish']['fields']['train']);
				$row_fields[] = array('field'=>'Время отправления', 'value' => $transfer_fields['finish']['fields']['time']);
			}
			if($transfer_fields['finish']['type_fields'] == 2){
				$row_fields[] = array('field'=>'Поезд/самолет', 'value' => 'Самолет');
				$row_fields[] = array('field'=>'Номер рейса', 'value' => $transfer_fields['finish']['fields']['plane']);
				$row_fields[] = array('field'=>'Время вылета', 'value' => $transfer_fields['finish']['fields']['time']);
			}
			$rows[] = array(
				'title'	  => $finish_str,
				'fields'  => $row_fields
			);
		}

		foreach($rows as $row){
			$send .= '<tr><td rowspan='.count($row['fields']).'>'.$row['title'].'</td>';
			foreach($row['fields'] as $key => $item){
				if($key != 0){
					$send .= '<tr>'."\r\n";
				}
				$send .= '<td>'.$item['field'].'</td><td>'.$item['value'].'</td></tr>';
			}
		}
		
		$send.='<tr><td><b>Получатели</b></td><td colspan="2">'.implode(', ', $emaillist).'</td></tr>';
        $send.='<tr><td><b>Время</b></td><td colspan="2">'.date("d.m.Y, H:i:s").'</td></tr>';
        $send.='<tr><td><b>IP-адрес</b></td><td colspan="2">'.$_SERVER['REMOTE_ADDR'].'</td></tr>';
        $send.='<tr><td><b>User-agent</b></td><td colspan="2">'.substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'])),0,1024).'</td></tr>';
        $send.='</table>';
		$send.= $this->mail_text_bottom;
		
		function utf8_to_cp12511($str) {
            $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
            return $encoded_data;
        }        
        $send=utf8_to_cp12511($send);

		if($is_transfer){
			$subject = "Добавление трансфера по заявке №".$dgcode;
		} else {
			$subject = "Изменение информации о трансфере по заявке №".$dgcode;
		}
		
		
		$fromEmail = 'noreply@multitour.ru';
		$headers="From: <".$fromEmail.">\n";
		$headers.="X-Sender: <".$fromEmail.">\n";
		$headers.="Content-Type: text/html; charset=windows-1251\n";
		$headers.="Content-Transfer-Encoding: 8bit";
					
		if ($emaillist!=null && $is_send) {
			$se=mail(implode(', ', $emaillist), $subject, $send, $headers);
		}

		$json['success'] = 'Трансфер добавлен';
		echo json_encode($json);
		die();
	}
	public function documentsAction()
	 {
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		
		$privateofficemodel = $this->getModel('Privateoffice');
		$legals_arr = $privateofficemodel->getLegals();
		foreach($legals_arr as $item){
			$legals[$item['id']] = $item;
		}
		$legal_agent = array();
		
		if($usertype == 'admin' || $usertype == 'meneger' || $usertype == 'manager') {
			//Вывод для админов
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);

		} else {
			//Вывод для агентов
			$userinfo=$privateofficemodel->getuserinfo($uskey);
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			if (!$userinfo) {
				return $this->error(404);                
				exit;
			}
			
			$agentinfo=$privateofficemodel->getagentinfo($userinfo['US_PRKEY']);
			$citiesmodel = $this->getModel('Cities');
            $city = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$legal_agent = $privateofficemodel->getLegalById($city['legal_id']);
			$this->view->legal_id = $city['legal_id'];
		}
		$this->view->usertype = $usertype;
		$this->view->legals = $legals;
		$this->view->legal_agent = $legal_agent;
	 }
	 
	 public function financeAction()
	 {
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		
		$privateofficemodel = $this->getModel('Privateoffice');
		$legals = $privateofficemodel->getLegals();
		$legal_agent = array();
		
		if($usertype == 'admin' || $usertype == 'meneger' || $usertype == 'manager') {
			//Вывод для админов
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);

		} else {
			//Вывод для агентов
			$userinfo=$privateofficemodel->getuserinfo($uskey);
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			if (!$userinfo) {
				return $this->error(404);                
				exit;
			}
			
			$agentinfo=$privateofficemodel->getagentinfo($userinfo['US_PRKEY']);
			$citiesmodel = $this->getModel('Cities');
            $city = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$legal_agent = $privateofficemodel->getLegalById($city['legal_id']);
		}
		$this->view->usertype = $usertype;
		$this->view->legals = $legals;
		$this->view->legal_agent = $legal_agent;
	 }
	public function bonusAction()
	 {
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		
		$privateofficemodel = $this->getModel('Privateoffice');
		$legals = $privateofficemodel->getLegals();
		$legal_agent = array();
		
		if($usertype == 'admin' || $usertype == 'meneger' || $usertype == 'manager') {
			//Вывод для админов
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);

		} else {
			//Вывод для агентов
			$userinfo=$privateofficemodel->getuserinfo($uskey);
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			if (!$userinfo) {
				return $this->error(404);                
				exit;
			}
			
			$agentinfo=$privateofficemodel->getagentinfo($userinfo['US_PRKEY']);
			$citiesmodel = $this->getModel('Cities');
            $city = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$legal_agent = $privateofficemodel->getLegalById($city['legal_id']);
		}
		$this->view->usertype = $usertype;
		$this->view->legals = $legals;
		$this->view->legal_agent = $legal_agent;
	 } 
	public function printrequestmtmtoAction() 
	{
	$dgcode = (string)$this->_getParam('code','');
	$type=(int)$this->_getParam('type',0);


			$this->setCfgLayout('docxempty');
			$this->authsecure();
			$uskey=$this->getuskeyinsession();
			$boss=$this->getbossinsession();
			$status=(int)$_SESSION['s_status'];
			
			
			
			
			$usertype = $this->getusertypeinsession();
			if ($type!=1 && $type!=0) $type=0;
			//if ($boss===0) $type=0;
			if ($dgcode=='') {
				return $this->error(404);
				exit;
			}

			$privateofficemodel=$this->getModel('Privateoffice');
			
			
			
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
			if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
			else $alldogpriv = $userinfopriv['us_all_dog_priv'];
			if($alldogpriv==0 && $boss === 0) $type=0;
			
			if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
				$allbool = true;
			} else {
				$allbool = false;
			}
			$prkey=0;
			
			
			
			if (!$allbool) {
				if (!$uskey) {
					return $this->error(404);
					exit;
				}
				$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
				if (!$this->view->userinfo) {
					return $this->error(404);                
					exit;
				}
				$prkey=(int)$this->view->userinfo['US_PRKEY'];
			}
			
			$logintxt=$_SESSION['s_login'];
			if($usertype == 'meneger'){
					preg_match('/^meneger_(.*)$/', $logintxt, $matches);
					// zend_debug::dump($matches);
					// exit;
					$logintxt = $matches[1];
				}
			$creator = $privateofficemodel->getmenegerbylogin($logintxt);
			if ($creator){
				$logintxt = $creator[0]['cur_fio'];
			}
			
			
			
			//$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
				
			
				//Информация по договору
				$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
				$dgkey=$dogovorinfo['DG_Key'];
				
				$dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


			
				if (!$dogovorinfo) {
					return $this->error(404);                
					exit;
				}


				
				//Информация по агентству
				$dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
				
				$status=(int)$_SESSION['s_status'];
				if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
					if ($dg_prkey!=$prkey) {
						return $this->error(404);                
						exit;
					}
					if ($boss===0 && $alldogpriv==0) {
						if ($uskey!=$dupuserkey) {
							return $this->error(404);                
							exit;
						}
					}
				}            
				
			
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
				if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
				else $prbossname='';
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
				
				$dognumview='';
				$dogdateview='';
				$daydog='';
				$mondogtxt='';
				$yeardog='';
				if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
				if (isset($anegtdoginfo['PD_DateBeg'])) {
					$daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
					$yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondogtxt='';
					$mondog=(int)$mondog;
					$mondogtxt=$this->getmontxt($mondog);
				
				}
				
				
				$pr_fullname=$agentinfo['PR_FULLNAME'];
				$agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
				$pr_phones=$agentinfo['PR_PHONES'];
				$pr_fax=$agentinfo['PR_FAX'];
				$pr_email=$agentinfo['PR_EMAIL'];
				
				//Дата бронирования
				$crdate=$dogovorinfo['DG_CRDATE'];
				$crdate=date("d.m.Y", strtotime($crdate));
				
				//Информация по стране
				$countryid=(int)$dogovorinfo['DG_CNKEY'];
				$countriesmodel = $this->getModel('Countries');
				$country=$countriesmodel->getcountrybyid($countryid);
				if (isset($country['Name'])) {
					$countryname=$country['Name'];
				} else {
					$countryname='';
				}
				
				//Информация по городу
				$cityid=(int)$dogovorinfo['DG_CTKEY'];
				$citiesmodel = $this->getModel('Cities');
				$city=$citiesmodel->getcitybyid($cityid);
				if (isset($city['Name'])) {
					$cityname=$city['Name'];
				} else {
					$cityname='';
				}

				//Информация по туру
				$turname=$dogovorinfo['turname'];
				// zend_debug::dump($dogovorinfo);
				// exit;
				//Список туристов
				$dgkey=$dogovorinfo['DG_Key'];
				$turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
				function stday($day) {
					$daytext='';
					if ($day<21) {
						if ($day==1) $daytext='день';
						else if ($day>=2 && $day<=4) $daytext='дня';
						else if ($day>=5 && $day<=20) $daytext='дней';
					} else {
						$dayost=$day%10;
						if ($dayost==1) $daytext='день';
						else if ($dayost>=2 && $dayost<=4) $daytext='дня';
						else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
					}
					return $daytext;
				}

				//Функция извлечения времени без секунд, из datetime
				function gettimetosqldate($date) {
					$date_arr=explode(' ',$date);
					if (count($date_arr)==2) {
						$date=$date_arr[1];
						$date_arr=explode(':',$date);
						if (count($date_arr)==3) {
							$date=$date_arr[0].':'.$date_arr[1];
						} else {
							$date='';
						}
					} else {
						$date='';
					}
					return $date;
				}
				
			  
	// Партнёры поставщики услуг

	$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

	$pri = 0;
	$partnersview = array();

	foreach($dlpartners as $prkey=> $prrow)
	{            
	$patnerline = array();
			$dlpartner = $prrow['DL_PARTNERKEY'];
				
				$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
				
				$patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
				$patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
				$patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
				$patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
				$patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
				$patnerline['pr_key']=$dlpartner;

				//Таблица с проживаниями
				//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
				$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				
				
				
				
				$hotellistview=array();
				$i=0;
				$hotelstxt='';
				$datebegintxt='';
				$datebeginint=0;
				$dateendtxt='';
				$dateendint=0;
				$roomstxt='';
				$pansiontxt='';
				$turists =  array();
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $key=>$row) {
						if ($row['DL_SVKEY']=='3') {
							$i++;
							
							//Номер
							$hotellistview[$i]['num']=$i;
							//Город 
							$cityid=$row['DL_CTKEY'];
							$city=$citiesmodel->getcitybyid($cityid);
							$cityname='';
							if (is_array($city)) {
								if (isset($city['Name'])) {
									$cityname=$city['Name'];
								}
							}
							$hotellistview[$i]['cityname']=$cityname;
							//Отель
							$hotelkey=(int)$row['DL_CODE'];
							$hotelname='';
							$hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
							
							if (is_array($hoteldictionary)) {
								if (isset($hoteldictionary['HD_NAME'])) {
									$hotelname=$hoteldictionary['HD_NAME'];
								}
								if (isset($hoteldictionary['HD_STARS'])) {
									if (strlen($hoteldictionary['HD_STARS'])>0) {
										$hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
									}
								}
							}
							if (strlen($hotelstxt)>0) $hotelstxt.='; ';
							$hotelstxt.=$hotelname;
							if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

							$hotellistview[$i]['hotelname']=$hotelname;
							//номер
							$subcode1=(int)$row['DL_SUBCODE1'];
							$roomname='';
							if ($subcode1>0) {
								$room=$privateofficemodel->getroom($subcode1);
								if (is_array($room)) {
									$roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
									$accmdkey=(int)$room['AccmdMenTypeKey'];
									$accmd=$privateofficemodel->getaccmd($accmdkey);
									if (is_array($accmd)) {
										$roomname.=', '.trim($accmd['Code']);
									}
								}
							}
							if (strlen($roomstxt)>0) $roomstxt.='; ';
							$roomstxt.=$roomname;
							$hotellistview[$i]['roomname']=$roomname;
							//питание
							$subcode2=(int)$row['DL_SUBCODE2'];
							$pansionname='';
							if ($subcode2>0) {
								$pansion=$privateofficemodel->getpansion($subcode2);
								if (is_array($pansion)) {
									$pansionname=$pansion['Code'].' '.$pansion['Name'];
								}
							}
							if (strlen($pansiontxt)>0) $pansiontxt.='; ';
							$pansiontxt.=$pansionname;
							$hotellistview[$i]['pansionname']=$pansionname;
							//Дата заезда
							$datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
							$datebegininttemp=strtotime($row['DL_DATEBEG']);
							// echo $datebegininttemp.'<br>';
							if ($datebeginint>$datebegininttemp || $datebeginint==0) {
								$datebeginint=$datebegininttemp;
								$datebegintxt=date("d.m.Y", $datebegininttemp);
							}
							$hotellistview[$i]['datebegin']=$datebegin;
							//Дата выезда
							$dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
							$dateendinttemp=strtotime($row['DL_DATEEND']);
							if ($dateendint<$dateendinttemp || $dateendint==0) {
								$dateendint=$dateendinttemp;
								$dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
							}
							
							$hotellistview[$i]['dateend']=$dateend;
							//Кол-во ночей
							$ndays=(int)$row['DL_NDAYS'];
							$ndaystxt=$ndays.'/'.($ndays+1);
							$hotellistview[$i]['days']=$ndaystxt;
							
							// Туристы по услуге 
							
							$dlkey=$row['DL_KEY'];
							$turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
							
							$turlistview=array();
				foreach ($turlist as $key=>$row) {
					$fio=$row['TU_NAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_FNAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_SNAMERUS'];
					$turlistview[$key]['fio']=$fio;
					
					if ($row['TU_RealSex']=='0') $sex='М';
					else $sex='Ж';
					$turlistview[$key]['sex']=$sex;
					
					$pasport=$row['TU_PASPORTTYPE'];
					if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
					$pasport.=$row['TU_PASPORTNUM'];
					$turlistview[$key]['pasport']=$pasport;
					
					$birthday='';
					if (strlen($row['TU_BIRTHDAY'])>0) {
						$birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
					}
					$turlistview[$key]['birthday']=$birthday;
					// echo $birthday;
					
					
				}
							
							
							$hotellistview[$i]['turists']= $turlistview;
							
						}
						
						
					}
				}       
		$patnerline['hotelistview'] = $hotellistview;
		
	$partnersview[$pri] = $patnerline;
	$pri++;	

	} /// Конец списка партнеров поставщиков			

				//Расчетный час
				$rastcode=0;
				$rasttxt='';
				
				$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1112') {
							// zend_debug::dump($row);
							$rastcode=(int)$row['DL_CODE'];
							if ($rastcode>0) {
								$rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
								// zend_debug::dump($rast);
								if (is_array($rast)) {
									if (isset($rast['SL_NAME'])) {
										if (strlen($rasttxt)>0) $rasttxt.=', ';
										$rasttxt.=$rast['SL_NAME'];
									}
								}
							}
						}
					}
				}

				if (strlen($rasttxt)==0) $rasttxt='Нет';
	 ///////////////////////
	 //Дополнительные услуги
				$dopcode=0;
				$doptxt='';
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1032') {
							// zend_debug::dump($row);
							$dopcode=(int)$row['DL_CODE'];
							if ($dopcode>0) {
								$dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
								if (is_array($dop)) {
									if (isset($dop['SL_NAME'])) {
										if (strlen($doptxt)>0) $doptxt.=', ';
										$doptxt.=$dop['SL_NAME'];
									}
								}
							}
						}
					}
				}  
				if (strlen($doptxt)==0) $doptxt='Нет';
	
		 }       
			$this->view->dgcode=$dgcode;
			//$this->view->crdate=$crdate;
			$this->view->crdate=date('d.m.Y');;
		   
			$this->view->countryname=$countryname;
			$this->view->cityname=$cityname;
			$this->view->turname=$turname;
			
			
			$this->view->partnersview = $partnersview;

			$this->view->rasttxt=$rasttxt;
			$this->view->logintxt=$logintxt;
			
			$this->view->datebegintxt=$datebegintxt;
			$this->view->dateendtxt=$dateendtxt;
			$this->view->roomstxt=$roomstxt;
			$this->view->pansiontxt=$pansiontxt;
			
			$this->view->doptxt = $doptxt;
			$this->view->daydog=$daydog;
			$this->view->mondogtxt=$mondogtxt;
			$this->view->yeardog=$yeardog;
			
			$this->view->dognumview=$dognumview;

			$this->view->prbossname=$prbossname;
			
			
			$filename = 'request' .$dgcode. '.doc';
			$this->view->filename=$filename;
			if (!headers_sent()) {
				header("Content-Type: application/msword");
				header('Content-Disposition: attachment; filename="'.$filename.'"');
			}

	}
	
	public function printrequestmtmtkAction() 
	{
	$dgcode = (string)$this->_getParam('code','');
	$type=(int)$this->_getParam('type',0);


			$this->setCfgLayout('docxempty');
			$this->authsecure();
			$uskey=$this->getuskeyinsession();
			$boss=$this->getbossinsession();
			$status=(int)$_SESSION['s_status'];
			
			
			
			
			$usertype = $this->getusertypeinsession();
			if ($type!=1 && $type!=0) $type=0;
			//if ($boss===0) $type=0;
			if ($dgcode=='') {
				return $this->error(404);
				exit;
			}

			$privateofficemodel=$this->getModel('Privateoffice');
			
			
			
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
			if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
			else $alldogpriv = $userinfopriv['us_all_dog_priv'];
			if($alldogpriv==0 && $boss === 0) $type=0;
			
			if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
				$allbool = true;
			} else {
				$allbool = false;
			}
			$prkey=0;
			
			
			
			if (!$allbool) {
				if (!$uskey) {
					return $this->error(404);
					exit;
				}
				$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
				if (!$this->view->userinfo) {
					return $this->error(404);                
					exit;
				}
				$prkey=(int)$this->view->userinfo['US_PRKEY'];
			}
			
			$logintxt=$_SESSION['s_login'];
			if($usertype == 'meneger'){
					preg_match('/^meneger_(.*)$/', $logintxt, $matches);
					// zend_debug::dump($matches);
					// exit;
					$logintxt = $matches[1];
				}
			$creator = $privateofficemodel->getmenegerbylogin($logintxt);
			if ($creator){
				$logintxt = $creator[0]['cur_fio'];
			}
			
			
			
			//$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
				
			
				//Информация по договору
				$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
				$dgkey=$dogovorinfo['DG_Key'];
				
				$dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


			
				if (!$dogovorinfo) {
					return $this->error(404);                
					exit;
				}


				
				//Информация по агентству
				$dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
				
				$status=(int)$_SESSION['s_status'];
				if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
					if ($dg_prkey!=$prkey) {
						return $this->error(404);                
						exit;
					}
					if ($boss===0 && $alldogpriv==0) {
						if ($uskey!=$dupuserkey) {
							return $this->error(404);                
							exit;
						}
					}
				}            
				
			
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
				if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
				else $prbossname='';
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
				
				$dognumview='';
				$dogdateview='';
				$daydog='';
				$mondogtxt='';
				$yeardog='';
				if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
				if (isset($anegtdoginfo['PD_DateBeg'])) {
					$daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
					$yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondogtxt='';
					$mondog=(int)$mondog;
					$mondogtxt=$this->getmontxt($mondog);
				
				}
				
				
				$pr_fullname=$agentinfo['PR_FULLNAME'];
				$agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
				$pr_phones=$agentinfo['PR_PHONES'];
				$pr_fax=$agentinfo['PR_FAX'];
				$pr_email=$agentinfo['PR_EMAIL'];
				
				//Дата бронирования
				$crdate=$dogovorinfo['DG_CRDATE'];
				$crdate=date("d.m.Y", strtotime($crdate));
				
				//Информация по стране
				$countryid=(int)$dogovorinfo['DG_CNKEY'];
				$countriesmodel = $this->getModel('Countries');
				$country=$countriesmodel->getcountrybyid($countryid);
				if (isset($country['Name'])) {
					$countryname=$country['Name'];
				} else {
					$countryname='';
				}
				
				//Информация по городу
				$cityid=(int)$dogovorinfo['DG_CTKEY'];
				$citiesmodel = $this->getModel('Cities');
				$city=$citiesmodel->getcitybyid($cityid);
				if (isset($city['Name'])) {
					$cityname=$city['Name'];
				} else {
					$cityname='';
				}

				//Информация по туру
				$turname=$dogovorinfo['turname'];
				// zend_debug::dump($dogovorinfo);
				// exit;
				//Список туристов
				$dgkey=$dogovorinfo['DG_Key'];
				$turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
				function stday($day) {
					$daytext='';
					if ($day<21) {
						if ($day==1) $daytext='день';
						else if ($day>=2 && $day<=4) $daytext='дня';
						else if ($day>=5 && $day<=20) $daytext='дней';
					} else {
						$dayost=$day%10;
						if ($dayost==1) $daytext='день';
						else if ($dayost>=2 && $dayost<=4) $daytext='дня';
						else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
					}
					return $daytext;
				}

				//Функция извлечения времени без секунд, из datetime
				function gettimetosqldate($date) {
					$date_arr=explode(' ',$date);
					if (count($date_arr)==2) {
						$date=$date_arr[1];
						$date_arr=explode(':',$date);
						if (count($date_arr)==3) {
							$date=$date_arr[0].':'.$date_arr[1];
						} else {
							$date='';
						}
					} else {
						$date='';
					}
					return $date;
				}
				
			  
	// Партнёры поставщики услуг

	$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

	$pri = 0;
	$partnersview = array();

	foreach($dlpartners as $prkey=> $prrow)
	{            
	$patnerline = array();
			$dlpartner = $prrow['DL_PARTNERKEY'];
				
				$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
				
				$patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
				$patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
				$patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
				$patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
				$patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
				$patnerline['pr_key']=$dlpartner;

				//Таблица с проживаниями
				//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
				$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				
				
				
				
				$hotellistview=array();
				$i=0;
				$hotelstxt='';
				$datebegintxt='';
				$datebeginint=0;
				$dateendtxt='';
				$dateendint=0;
				$roomstxt='';
				$pansiontxt='';
				$turists =  array();
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $key=>$row) {
						if ($row['DL_SVKEY']=='3') {
							$i++;
							
							//Номер
							$hotellistview[$i]['num']=$i;
							//Город 
							$cityid=$row['DL_CTKEY'];
							$city=$citiesmodel->getcitybyid($cityid);
							$cityname='';
							if (is_array($city)) {
								if (isset($city['Name'])) {
									$cityname=$city['Name'];
								}
							}
							$hotellistview[$i]['cityname']=$cityname;
							//Отель
							$hotelkey=(int)$row['DL_CODE'];
							$hotelname='';
							$hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
							
							if (is_array($hoteldictionary)) {
								if (isset($hoteldictionary['HD_NAME'])) {
									$hotelname=$hoteldictionary['HD_NAME'];
								}
								if (isset($hoteldictionary['HD_STARS'])) {
									if (strlen($hoteldictionary['HD_STARS'])>0) {
										$hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
									}
								}
							}
							if (strlen($hotelstxt)>0) $hotelstxt.='; ';
							$hotelstxt.=$hotelname;
							if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

							$hotellistview[$i]['hotelname']=$hotelname;
							//номер
							$subcode1=(int)$row['DL_SUBCODE1'];
							$roomname='';
							if ($subcode1>0) {
								$room=$privateofficemodel->getroom($subcode1);
								if (is_array($room)) {
									$roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
									$accmdkey=(int)$room['AccmdMenTypeKey'];
									$accmd=$privateofficemodel->getaccmd($accmdkey);
									if (is_array($accmd)) {
										$roomname.=', '.trim($accmd['Code']);
									}
								}
							}
							if (strlen($roomstxt)>0) $roomstxt.='; ';
							$roomstxt.=$roomname;
							$hotellistview[$i]['roomname']=$roomname;
							//питание
							$subcode2=(int)$row['DL_SUBCODE2'];
							$pansionname='';
							if ($subcode2>0) {
								$pansion=$privateofficemodel->getpansion($subcode2);
								if (is_array($pansion)) {
									$pansionname=$pansion['Code'].' '.$pansion['Name'];
								}
							}
							if (strlen($pansiontxt)>0) $pansiontxt.='; ';
							$pansiontxt.=$pansionname;
							$hotellistview[$i]['pansionname']=$pansionname;
							//Дата заезда
							$datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
							$datebegininttemp=strtotime($row['DL_DATEBEG']);
							// echo $datebegininttemp.'<br>';
							if ($datebeginint>$datebegininttemp || $datebeginint==0) {
								$datebeginint=$datebegininttemp;
								$datebegintxt=date("d.m.Y", $datebegininttemp);
							}
							$hotellistview[$i]['datebegin']=$datebegin;
							//Дата выезда
							$dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
							$dateendinttemp=strtotime($row['DL_DATEEND']);
							if ($dateendint<$dateendinttemp || $dateendint==0) {
								$dateendint=$dateendinttemp;
								$dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
							}
							
							$hotellistview[$i]['dateend']=$dateend;
							//Кол-во ночей
							$ndays=(int)$row['DL_NDAYS'];
							$ndaystxt=$ndays.'/'.($ndays+1);
							$hotellistview[$i]['days']=$ndaystxt;
							
							// Туристы по услуге 
							
							$dlkey=$row['DL_KEY'];
							$turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
							
							$turlistview=array();
				foreach ($turlist as $key=>$row) {
					$fio=$row['TU_NAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_FNAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_SNAMERUS'];
					$turlistview[$key]['fio']=$fio;
					
					if ($row['TU_RealSex']=='0') $sex='М';
					else $sex='Ж';
					$turlistview[$key]['sex']=$sex;
					
					$pasport=$row['TU_PASPORTTYPE'];
					if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
					$pasport.=$row['TU_PASPORTNUM'];
					$turlistview[$key]['pasport']=$pasport;
					
					$birthday='';
					if (strlen($row['TU_BIRTHDAY'])>0) {
						$birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
					}
					$turlistview[$key]['birthday']=$birthday;
					// echo $birthday;
					
					
				}
							
							
							$hotellistview[$i]['turists']= $turlistview;
							
						}
						
						
					}
				}       
		$patnerline['hotelistview'] = $hotellistview;
		
	$partnersview[$pri] = $patnerline;
	$pri++;	

	} /// Конец списка партнеров поставщиков			

				//Расчетный час
				$rastcode=0;
				$rasttxt='';
				
				$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1112') {
							// zend_debug::dump($row);
							$rastcode=(int)$row['DL_CODE'];
							if ($rastcode>0) {
								$rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
								// zend_debug::dump($rast);
								if (is_array($rast)) {
									if (isset($rast['SL_NAME'])) {
										if (strlen($rasttxt)>0) $rasttxt.=', ';
										$rasttxt.=$rast['SL_NAME'];
									}
								}
							}
						}
					}
				}

				if (strlen($rasttxt)==0) $rasttxt='Нет';
	 ///////////////////////
	 //Дополнительные услуги
				$dopcode=0;
				$doptxt='';
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1032') {
							// zend_debug::dump($row);
							$dopcode=(int)$row['DL_CODE'];
							if ($dopcode>0) {
								$dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
								if (is_array($dop)) {
									if (isset($dop['SL_NAME'])) {
										if (strlen($doptxt)>0) $doptxt.=', ';
										$doptxt.=$dop['SL_NAME'];
									}
								}
							}
						}
					}
				}  
				if (strlen($doptxt)==0) $doptxt='Нет';
	
		 }       
			$this->view->dgcode=$dgcode;
			//$this->view->crdate=$crdate;
			$this->view->crdate=date('d.m.Y');;
		   
			$this->view->countryname=$countryname;
			$this->view->cityname=$cityname;
			$this->view->turname=$turname;
			
			
			$this->view->partnersview = $partnersview;

			$this->view->rasttxt=$rasttxt;
			$this->view->logintxt=$logintxt;
			
			$this->view->datebegintxt=$datebegintxt;
			$this->view->dateendtxt=$dateendtxt;
			$this->view->roomstxt=$roomstxt;
			$this->view->pansiontxt=$pansiontxt;
			
			$this->view->doptxt = $doptxt;
			$this->view->daydog=$daydog;
			$this->view->mondogtxt=$mondogtxt;
			$this->view->yeardog=$yeardog;
			
			$this->view->dognumview=$dognumview;

			$this->view->prbossname=$prbossname;
			
			
			$filename = 'request' .$dgcode. '.doc';
			$this->view->filename=$filename;
			if (!headers_sent()) {
				header("Content-Type: application/msword");
				header('Content-Disposition: attachment; filename="'.$filename.'"');
			}

	}
	public function printrequestmtmuAction() 
	{
	$dgcode = (string)$this->_getParam('code','');
	$type=(int)$this->_getParam('type',0);


			$this->setCfgLayout('docxempty');
			$this->authsecure();
			$uskey=$this->getuskeyinsession();
			$boss=$this->getbossinsession();
			$status=(int)$_SESSION['s_status'];
			
			
			
			
			$usertype = $this->getusertypeinsession();
			if ($type!=1 && $type!=0) $type=0;
			//if ($boss===0) $type=0;
			if ($dgcode=='') {
				return $this->error(404);
				exit;
			}

			$privateofficemodel=$this->getModel('Privateoffice');
			
			
			
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
			if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
			else $alldogpriv = $userinfopriv['us_all_dog_priv'];
			if($alldogpriv==0 && $boss === 0) $type=0;
			
			if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
				$allbool = true;
			} else {
				$allbool = false;
			}
			$prkey=0;
			
			
			
			if (!$allbool) {
				if (!$uskey) {
					return $this->error(404);
					exit;
				}
				$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
				if (!$this->view->userinfo) {
					return $this->error(404);                
					exit;
				}
				$prkey=(int)$this->view->userinfo['US_PRKEY'];
			}
			
			$logintxt=$_SESSION['s_login'];
			if($usertype == 'meneger'){
					preg_match('/^meneger_(.*)$/', $logintxt, $matches);
					// zend_debug::dump($matches);
					// exit;
					$logintxt = $matches[1];
				}
			$creator = $privateofficemodel->getmenegerbylogin($logintxt);
			if ($creator){
				$logintxt = $creator[0]['cur_fio'];
			}
			
			
			
			//$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
				
			
				//Информация по договору
				$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
				$dgkey=$dogovorinfo['DG_Key'];
				
				$dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


			
				if (!$dogovorinfo) {
					return $this->error(404);                
					exit;
				}


				
				//Информация по агентству
				$dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
				
				$status=(int)$_SESSION['s_status'];
				if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
					if ($dg_prkey!=$prkey) {
						return $this->error(404);                
						exit;
					}
					if ($boss===0 && $alldogpriv==0) {
						if ($uskey!=$dupuserkey) {
							return $this->error(404);                
							exit;
						}
					}
				}            
				
			
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
				if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
				else $prbossname='';
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
				
				$dognumview='';
				$dogdateview='';
				$daydog='';
				$mondogtxt='';
				$yeardog='';
				if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
				if (isset($anegtdoginfo['PD_DateBeg'])) {
					$daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
					$yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondogtxt='';
					$mondog=(int)$mondog;
					$mondogtxt=$this->getmontxt($mondog);
				
				}
				
				
				$pr_fullname=$agentinfo['PR_FULLNAME'];
				$agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
				$pr_phones=$agentinfo['PR_PHONES'];
				$pr_fax=$agentinfo['PR_FAX'];
				$pr_email=$agentinfo['PR_EMAIL'];
				
				//Дата бронирования
				$crdate=$dogovorinfo['DG_CRDATE'];
				$crdate=date("d.m.Y", strtotime($crdate));
				
				//Информация по стране
				$countryid=(int)$dogovorinfo['DG_CNKEY'];
				$countriesmodel = $this->getModel('Countries');
				$country=$countriesmodel->getcountrybyid($countryid);
				if (isset($country['Name'])) {
					$countryname=$country['Name'];
				} else {
					$countryname='';
				}
				
				//Информация по городу
				$cityid=(int)$dogovorinfo['DG_CTKEY'];
				$citiesmodel = $this->getModel('Cities');
				$city=$citiesmodel->getcitybyid($cityid);
				if (isset($city['Name'])) {
					$cityname=$city['Name'];
				} else {
					$cityname='';
				}

				//Информация по туру
				$turname=$dogovorinfo['turname'];
				// zend_debug::dump($dogovorinfo);
				// exit;
				//Список туристов
				$dgkey=$dogovorinfo['DG_Key'];
				$turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
				function stday($day) {
					$daytext='';
					if ($day<21) {
						if ($day==1) $daytext='день';
						else if ($day>=2 && $day<=4) $daytext='дня';
						else if ($day>=5 && $day<=20) $daytext='дней';
					} else {
						$dayost=$day%10;
						if ($dayost==1) $daytext='день';
						else if ($dayost>=2 && $dayost<=4) $daytext='дня';
						else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
					}
					return $daytext;
				}

				//Функция извлечения времени без секунд, из datetime
				function gettimetosqldate($date) {
					$date_arr=explode(' ',$date);
					if (count($date_arr)==2) {
						$date=$date_arr[1];
						$date_arr=explode(':',$date);
						if (count($date_arr)==3) {
							$date=$date_arr[0].':'.$date_arr[1];
						} else {
							$date='';
						}
					} else {
						$date='';
					}
					return $date;
				}
				
			  
	// Партнёры поставщики услуг

	$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

	$pri = 0;
	$partnersview = array();

	foreach($dlpartners as $prkey=> $prrow)
	{            
	$patnerline = array();
			$dlpartner = $prrow['DL_PARTNERKEY'];
				
				$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
				
				$patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
				$patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
				$patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
				$patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
				$patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
				$patnerline['pr_key']=$dlpartner;

				//Таблица с проживаниями
				//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
				$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				
				
				
				
				$hotellistview=array();
				$i=0;
				$hotelstxt='';
				$datebegintxt='';
				$datebeginint=0;
				$dateendtxt='';
				$dateendint=0;
				$roomstxt='';
				$pansiontxt='';
				$turists =  array();
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $key=>$row) {
						if ($row['DL_SVKEY']=='3') {
							$i++;
							
							//Номер
							$hotellistview[$i]['num']=$i;
							//Город 
							$cityid=$row['DL_CTKEY'];
							$city=$citiesmodel->getcitybyid($cityid);
							$cityname='';
							if (is_array($city)) {
								if (isset($city['Name'])) {
									$cityname=$city['Name'];
								}
							}
							$hotellistview[$i]['cityname']=$cityname;
							//Отель
							$hotelkey=(int)$row['DL_CODE'];
							$hotelname='';
							$hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
							
							if (is_array($hoteldictionary)) {
								if (isset($hoteldictionary['HD_NAME'])) {
									$hotelname=$hoteldictionary['HD_NAME'];
								}
								if (isset($hoteldictionary['HD_STARS'])) {
									if (strlen($hoteldictionary['HD_STARS'])>0) {
										$hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
									}
								}
							}
							if (strlen($hotelstxt)>0) $hotelstxt.='; ';
							$hotelstxt.=$hotelname;
							if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

							$hotellistview[$i]['hotelname']=$hotelname;
							//номер
							$subcode1=(int)$row['DL_SUBCODE1'];
							$roomname='';
							if ($subcode1>0) {
								$room=$privateofficemodel->getroom($subcode1);
								if (is_array($room)) {
									$roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
									$accmdkey=(int)$room['AccmdMenTypeKey'];
									$accmd=$privateofficemodel->getaccmd($accmdkey);
									if (is_array($accmd)) {
										$roomname.=', '.trim($accmd['Code']);
									}
								}
							}
							if (strlen($roomstxt)>0) $roomstxt.='; ';
							$roomstxt.=$roomname;
							$hotellistview[$i]['roomname']=$roomname;
							//питание
							$subcode2=(int)$row['DL_SUBCODE2'];
							$pansionname='';
							if ($subcode2>0) {
								$pansion=$privateofficemodel->getpansion($subcode2);
								if (is_array($pansion)) {
									$pansionname=$pansion['Code'].' '.$pansion['Name'];
								}
							}
							if (strlen($pansiontxt)>0) $pansiontxt.='; ';
							$pansiontxt.=$pansionname;
							$hotellistview[$i]['pansionname']=$pansionname;
							//Дата заезда
							$datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
							$datebegininttemp=strtotime($row['DL_DATEBEG']);
							// echo $datebegininttemp.'<br>';
							if ($datebeginint>$datebegininttemp || $datebeginint==0) {
								$datebeginint=$datebegininttemp;
								$datebegintxt=date("d.m.Y", $datebegininttemp);
							}
							$hotellistview[$i]['datebegin']=$datebegin;
							//Дата выезда
							$dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
							$dateendinttemp=strtotime($row['DL_DATEEND']);
							if ($dateendint<$dateendinttemp || $dateendint==0) {
								$dateendint=$dateendinttemp;
								$dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
							}
							
							$hotellistview[$i]['dateend']=$dateend;
							//Кол-во ночей
							$ndays=(int)$row['DL_NDAYS'];
							$ndaystxt=$ndays.'/'.($ndays+1);
							$hotellistview[$i]['days']=$ndaystxt;
							
							// Туристы по услуге 
							
							$dlkey=$row['DL_KEY'];
							$turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
							
							$turlistview=array();
				foreach ($turlist as $key=>$row) {
					$fio=$row['TU_NAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_FNAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_SNAMERUS'];
					$turlistview[$key]['fio']=$fio;
					
					if ($row['TU_RealSex']=='0') $sex='М';
					else $sex='Ж';
					$turlistview[$key]['sex']=$sex;
					
					$pasport=$row['TU_PASPORTTYPE'];
					if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
					$pasport.=$row['TU_PASPORTNUM'];
					$turlistview[$key]['pasport']=$pasport;
					
					$birthday='';
					if (strlen($row['TU_BIRTHDAY'])>0) {
						$birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
					}
					$turlistview[$key]['birthday']=$birthday;
					// echo $birthday;
					
					
				}
							
							
							$hotellistview[$i]['turists']= $turlistview;
							
						}
						
						
					}
				}       
		$patnerline['hotelistview'] = $hotellistview;
		
	$partnersview[$pri] = $patnerline;
	$pri++;	

	} /// Конец списка партнеров поставщиков			

				//Расчетный час
				$rastcode=0;
				$rasttxt='';
				
				$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1112') {
							// zend_debug::dump($row);
							$rastcode=(int)$row['DL_CODE'];
							if ($rastcode>0) {
								$rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
								// zend_debug::dump($rast);
								if (is_array($rast)) {
									if (isset($rast['SL_NAME'])) {
										if (strlen($rasttxt)>0) $rasttxt.=', ';
										$rasttxt.=$rast['SL_NAME'];
									}
								}
							}
						}
					}
				}

				if (strlen($rasttxt)==0) $rasttxt='Нет';
	 ///////////////////////
	 //Дополнительные услуги
				$dopcode=0;
				$doptxt='';
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1032') {
							// zend_debug::dump($row);
							$dopcode=(int)$row['DL_CODE'];
							if ($dopcode>0) {
								$dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
								if (is_array($dop)) {
									if (isset($dop['SL_NAME'])) {
										if (strlen($doptxt)>0) $doptxt.=', ';
										$doptxt.=$dop['SL_NAME'];
									}
								}
							}
						}
					}
				}  
				if (strlen($doptxt)==0) $doptxt='Нет';
	
		 }       
			$this->view->dgcode=$dgcode;
			//$this->view->crdate=$crdate;
			$this->view->crdate=date('d.m.Y');;
		   
			$this->view->countryname=$countryname;
			$this->view->cityname=$cityname;
			$this->view->turname=$turname;
			
			
			$this->view->partnersview = $partnersview;

			$this->view->rasttxt=$rasttxt;
			$this->view->logintxt=$logintxt;
			
			$this->view->datebegintxt=$datebegintxt;
			$this->view->dateendtxt=$dateendtxt;
			$this->view->roomstxt=$roomstxt;
			$this->view->pansiontxt=$pansiontxt;
			
			$this->view->doptxt = $doptxt;
			$this->view->daydog=$daydog;
			$this->view->mondogtxt=$mondogtxt;
			$this->view->yeardog=$yeardog;
			
			$this->view->dognumview=$dognumview;

			$this->view->prbossname=$prbossname;
			
			
			$filename = 'request' .$dgcode. '.doc';
			$this->view->filename=$filename;
			if (!headers_sent()) {
				header("Content-Type: application/msword");
				header('Content-Disposition: attachment; filename="'.$filename.'"');
			}

	}
	public function agentsreportdayAction()
	{
        $this->setCfgLayout('empty');
        $this->authsecure();
        $usertype = $this->getusertypeinsession();

        if ($usertype!='admin' && $usertype!='meneger' && $usertype!='manager') {
			return $this->error(404);
        }
       
    }
	public function printagentsreportdayAction()
	{

        $this->setCfgLayout('empty');
        $this->authsecure();
        $usertype = $this->getusertypeinsession();
		if (($usertype!='manager' && $usertype!='meneger' &&  $usertype!='admin')) {
            return $this->error(404);                
			exit;
        }

        $date_from = (string)$this->_getParam('frdate', '');
        $date_to = (string)$this->_getParam('todate', '');
		$date_type = (string)$this->_getParam('date_type', '');
		$year = (string)$this->_getParam('year', 'FALSE');
		
		$orderfield= 'crdate';
		$ordertype='desc';
		$params = array();
		
		if ($year){
			$params['year'] = $year;
		}

		$db_date_from = $this->getDbDate($date_from);
		$db_date_to = $this->getDbDate($date_to);
		
		switch($date_type){
			case 'dg_crdate':
				$params['dg_crdate_from'] = $db_date_from;
				$params['dg_crdate_to'] = $db_date_to;
			break;
			case 'dg_turdate':
				$params['dg_turdate_from'] = $db_date_from;
				$params['dg_turdate_to'] = $db_date_to;
			break;
		}
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$data = $privateofficemodel->geagentreportone($params, $orderfield, $ordertype);
		
		//print_r($data);exit();
	   
        $this->view->data = $data;
 
    }
	public function financelistAction()  {
	
		set_time_limit(0);
		ini_set("memory_limit","1024M");
		
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();

		if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
			return $this->error(404);       
		} 
		
		$date=date('d.m.y');
		$date_from = $this->_getParam('date_from',$date);
		$date_to = $this->_getParam('date_to',$date);
		$date_type = $this->_getParam('date_type','dg_crdate');
		$country_id =(int)$this->_getParam('country_id',0);
		$resort_id =(int)$this->_getParam('resort_id',0);
		$city_id =(int)$this->_getParam('city_id',0);
		$abonent_id = $this->_getParam('abonent_id',0);
		$partner_id = $this->_getParam('partner_id',0);
		$hotel_id = $this->_getParam('hotel_id',0);
		$tur_id = $this->_getParam('tur_id',0);
		$legal_id = $this->_getParam('legal_id',0);
		$service_id = $this->_getParam('service_id',0);
		$status_id = $this->_getParam('status_id',array());
		$contractor2_profit = $this->_getParam('contractor2_profit',0);
		$send_type = $this->_getParam('send_type',FALSE);
		$payment_type = $this->_getParam('payment_type',array());
		$payment_status = $this->_getParam('payment_status',array());
		$sort_field = $this->_getParam('sort_field', FALSE);
		$sort_direction = $this->_getParam('sort_direction', FALSE);
		$year = $this->_getParam('year',FALSE);
		
		if($send_type == 'excel'){
			$this->setCfgLayout('empty');
			$this->setView('printfinancelist');  
		} elseif($send_type == 'xml'){
			$this->setCfgLayout('empty');
			$this->setView('printfinancelist-xml');  
		} else {
			$this->setCfgLayout('full_admin');
			$page_actives=array(200 =>'200');
			Zend_Registry::set('page_actives', $page_actives);
		}
	
		$payment_arr1 = array(21);
		$payment_arr2 = array(2,3,4);
		$payment_arr3 = array(15,16,20);
		$payment_arr4 = array(18);
		$payment_arr5 = array(17);
		
		$payment_types = array();
		
		if(in_array('arr1', $payment_type)){
			$payment_types = array_merge($payment_types, $payment_arr1);
		}
		if(in_array('arr2', $payment_type)){
			$payment_types = array_merge($payment_types, $payment_arr2);
		}
		if(in_array('arr3', $payment_type)){
			$payment_types = array_merge($payment_types, $payment_arr3);
		}
		if(in_array('arr4', $payment_type)){
			$payment_types = array_merge($payment_types, $payment_arr4);
		}
		if(in_array('arr5', $payment_type)){
			$payment_types = array_merge($payment_types, $payment_arr5);
		}

		$db_date_from = $this->getDbDate($date_from);
		$db_date_to = $this->getDbDate($date_to);

		$privateofficemodel = $this->getModel('Privateoffice');
		$CountriesModel = $this->getModel('Countries');
		$HotelsModel=$this->getModel('Hotels');
		$CitiesModel=$this->getModel('Cities');

		$list = array();

		$orderfield= 'crdate';
		$ordertype='desc';
		
		if($sort_field == 'DL_DATEBEG'){
			$orderfield='datebeg';
		}

		$params = array();
		
		if ($year){
			$params['year'] = $year;
		}
		
		switch($date_type){
			case 'dl_datebeg':
				$params['dl_datebeg_from'] = $db_date_from;
				$params['dl_datebeg_to'] =   $db_date_to;
				break;
			case 'dg_crdate':
				$params['dg_crdate_from'] = $db_date_from;
				$params['dg_crdate_to'] =   $db_date_to;
				break;
			case 'dg_turdate':
				$params['dg_turdate_from'] = $db_date_from;
				$params['dg_turdate_to'] =   $db_date_to;
				break;
			default:
				$params['dg_crdate_from'] = $db_date_from;
				$params['dg_crdate_to'] =   $db_date_to;
		}
		
		$partner = array();
		if($partner_id){
			$params['partner_id'] = $partner_id;
			$partner = $privateofficemodel->getpartnerinfo($partner_id);
		}
		
		$abonentlist = $privateofficemodel->getabonentlist($abonent_id);
		if($abonent_id){
			$params['abonent_id'] = $abonent_id;
		}
		
		$servicelist = $privateofficemodel->getallservices();
		if($service_id){
			$params['service_id'] = $service_id;
		}
		
		$hotel = array();
		if($hotel_id){
			$params['hotel_id'] = $hotel_id;
			$hotel = $privateofficemodel->gethotelinfo($hotel_id);
		}
		
		$tur = array();
		if($tur_id){
			$params['tur_id'] = $tur_id;
			$tur = $privateofficemodel->getturinfo($tur_id);
		}
		
		$legallist = $privateofficemodel->getLegals();

		$CountriesModel=$this->getModel('Countries');
        $HotelsModel=$this->getModel('Hotels');
		$CitiesModel=$this->getModel('Cities');
		
		$countrylist=$CountriesModel->getlist(array('vis'=>1));

		if ($country_id){
			$resortlist=$HotelsModel->resortlist($country_id);
		} else {
			$resortlist = array();
		}
		
		if ($country_id && $resort_id){
			$citylist = $CitiesModel->get4Country($country_id,'all',array('0'=>$resort_id));
		} else {
			$citylist = array();
		} 
		
		if($country_id){
			$params['country_id'] = $country_id;
		}
		
		if($resort_id){
			$params['resort_id'] = $resort_id;
			unset($params['country_id']);
		}
		
		if($city_id){
			$params['city_id'] = $city_id;
			unset($params['country_id']);
			unset($params['resort_id']);
		}
		
		if($status_id){
			$params['status_id'] = implode(",", $status_id);
		}
		
		$list=$privateofficemodel->getfinanceapplist($params,$orderfield,$ordertype);

		$applist = array();
		
		if($list){
		
			$legallist_arr = array();
			foreach($legallist as $item) {
				$legallist_arr[$item['id']] = $item;
			}
			
			$legal_cities_arr = $privateofficemodel->getLegalCities();
			$legal_cities = array();
			$cities_legal = array();
			foreach($legal_cities_arr as $row){
				$legal_cities[$row['legal_id']][] = $row['Key'];
				$cities_legal[$row['Key']] = $row['legal_id'];
			}
			
			$dg_code = array();
			$dg_code_hotel = array();

			foreach($list as $row){
				
				if(!$row['DL_DISCOUNT']){
					$row['DL_DISCOUNT'] = 0;
				}

				
				if(!isset($applist[$row['DL_KEY']]) && $send_type){
					
					$applist[$row['DL_KEY']] = $row;

					if(isset($applist[$row['DL_KEY']])){
						if ($legal_id && !in_array($applist[$row['DL_KEY']]['PR_CTKEY'], $legal_cities[$legal_id])) {
							unset($applist[$row['DL_KEY']]);
						}
					}
					
					if(isset($applist[$row['DL_KEY']])){
						if(isset($applist[$row['DL_KEY']])){
							$dg_code[]=$row['DG_CODE'];
						}
					}
					$applist[$row['DL_KEY']]['turist'][$row['TU_KEY']] = $row['TU_NAMERUS'].' '.$row['TU_FNAMERUS'].' '.$row['TU_SNAMERUS'];
				}

			}

			if($applist){
				
				$partners_arr = array();
				$sum_cost = 0;
				$sum_brutto = 0;
				$sum_agent_pay = 0;
				$sum_agent_bonus = 0;
				$sum_balance = 0;
				$sum_contactor2_brutto = 0;
				$sum_contactor2_netto = 0;
				$sum_contactor2_profit = 0;
				$sum_profit1 = 0;
				$sum_profit2 = 0;
				$sum_price = 0;
				
				$dg_code = array_unique($dg_code);
				
				$params['dg_code'] = $dg_code;
				
				if($payment_types){
					$params['payment_type'] = $payment_types;
				}
				
				$sum_pay = $privateofficemodel->getPayByDg($params);

				foreach($applist as $key => $item) {
					
					$partners_arr[] = $item['PR_KEY'];
					$dg_code[] = $item['DG_CODE']; 
					
					if (isset($cities_legal[$item['PR_CTKEY']])){
						$applist[$key]['legal_name'] = $legallist_arr[$cities_legal[$item['PR_CTKEY']]]['name_short'];
					} else {
						$applist[$key]['legal_name'] = '';
					}
					if($sum_pay[$item['DG_CODE']]['sum_cost']){
						$agent_pay =  $sum_pay[$item['DG_CODE']]['sum_pay'] * $item['DL_BRUTTO']/$sum_pay[$item['DG_CODE']]['sum_cost'];
					} else {
						$agent_pay = 0;
					}

					$balance = $item['DL_BRUTTO'] - $agent_pay;
					$applist[$key]['balance'] = $balance;

					if($payment_status) {
						if(!in_array(1,$payment_status) && $balance <= 0 && $balance<>$item['DL_BRUTTO']){
							unset($applist[$key]);
							continue;
						}
						if(!in_array(2,$payment_status) && $balance > 0 && $balance < $item['DL_BRUTTO']){
							unset($applist[$key]);
							continue;
						}
						if(!in_array(3,$payment_status) && $balance == $item['DL_BRUTTO']){
							unset($applist[$key]);
							continue;
						}
					}
					
					$applist[$key]['pay_types'] =  $sum_pay[$item['DG_CODE']]['pay_types'];
					
					$applist[$key]['agent_pay'] =  $agent_pay;
					$sum_agent_pay += $agent_pay;

					$sum_cost += $item['DL_COST'];
					$sum_brutto += $item['DL_BRUTTO'];
					$sum_agent_bonus += $item['DL_DISCOUNT'];
					
					$sum_balance += $balance;
					$applist[$key]['profit'] = $agent_pay - $item['DL_COST'];
					
					$contactor2_brutto = $item['DL_BRUTTO'];
					$applist[$key]['contactor2_brutto'] = $contactor2_brutto;
					$sum_contactor2_brutto += $contactor2_brutto;
					
					$contactor2_netto = $contactor2_brutto - (($item['DL_BRUTTO']+$item['DL_DISCOUNT'])*$contractor2_profit/100);
					$applist[$key]['contactor2_netto'] = $contactor2_netto;
					$sum_contactor2_netto += $contactor2_netto;
					
					$contactor2_profit = $contactor2_brutto - $contactor2_netto;
					$applist[$key]['contactor2_profit'] = $contactor2_profit;
					$sum_contactor2_profit += $contactor2_profit;
					
					$profit1 = $contactor2_netto-$item['DL_COST']+$contactor2_profit;
					$applist[$key]['profit1'] = $profit1;
					$sum_profit1 += $profit1;
					
					$profit2 =$contactor2_netto-$item['DL_COST'];
					$applist[$key]['profit2'] = $profit2;
					$sum_profit2 += $profit2;
					
					$price = $item['DL_BRUTTO']+$item['DL_DISCOUNT'];
					$applist[$key]['price'] = $price;
					$sum_price += $price;
					
				}

				if($sort_field && $sort_direction){
					if ($sort_direction == 'ASC'){
						$applist = $this->array_orderby($applist, $sort_field, SORT_ASC);
					} 
					
					if ($sort_direction == 'DESC'){
						$applist = $this->array_orderby($applist, $sort_field, SORT_DESC);
					}
					
				}
				
				$partners_arr = array_unique($partners_arr);
				
				$partner_pay = $privateofficemodel->getPayByPartner();
				
				$partner_cost = $privateofficemodel->getCostByPartner($partners_arr);
				$partner_cost = $partner_cost;
				
				$this->view->partner_pay = $partner_pay;
				$this->view->partner_cost = $partner_cost;
				$this->view->sum_cost = $sum_cost;
				$this->view->sum_brutto = $sum_brutto;
				$this->view->sum_agent_pay = $sum_agent_pay;
				$this->view->sum_agent_bonus = $sum_agent_bonus;
				$this->view->sum_balance = $sum_balance;
				$this->view->sum_contactor2_brutto = $sum_contactor2_brutto;
				$this->view->sum_contactor2_netto = $sum_contactor2_netto;
				$this->view->sum_contactor2_profit = $sum_contactor2_profit;
				$this->view->sum_profit1 = $sum_profit1;
				$this->view->sum_profit2 = $sum_profit2;
				$this->view->sum_price = $sum_price;
			}
			
		}

		
		$statuslist = $privateofficemodel->getOrderStatus();

		$this->view->applist = $applist;
		$this->view->date_type = $date_type;
		$this->view->date_from = $date_from;
		$this->view->date_to = $date_to;
		$this->view->countrylist = $countrylist;
		$this->view->country_id = $country_id;
		$this->view->resort_id=$resort_id;
		$this->view->resortlist=$resortlist;
		$this->view->citylist=$citylist;
		$this->view->city_id=$city_id;
		$this->view->abonentlist=$abonentlist;
		$this->view->abonent_id=$abonent_id;
		$this->view->partner=$partner;
		$this->view->hotel_id=$hotel_id;
		$this->view->hotel=$hotel;
		$this->view->tur_id=$tur_id;
		$this->view->tur=$tur;
		$this->view->legallist=$legallist;
		$this->view->legal_id=$legal_id;
		$this->view->servicelist=$servicelist;
		$this->view->service_id=$service_id;
		$this->view->statuslist=$statuslist;
		$this->view->status_id=$status_id;
		$this->view->contractor2_profit=$contractor2_profit;
		$this->view->send_type=$send_type;
		$this->view->payment_type=$payment_type;
		$this->view->payment_status=$payment_status;
		$this->view->sort_field=$sort_field;
		$this->view->sort_direction=$sort_direction;
		$this->view->year=$year;

	}
	
	function array_orderby()
	{
		$args = func_get_args();
		$data = array_shift($args);
		foreach ($args as $n => $field) {
			if (is_string($field)) {
				$tmp = array();
				foreach ($data as $key => $row)
					$tmp[$key] = $row[$field];
				$args[$n] = $tmp;
				}
		}
		$args[] = &$data;
		call_user_func_array('array_multisort', $args);
		return array_pop($args);
	}
	public function addfinancereportAction(){
		
		$params = $_REQUEST;
		$type = $this->_getParam('report_type',2);
		$login = 'admin';
		$privateofficemodel=$this->getModel('Privateoffice');
		$report_id = $privateofficemodel->addreport($params, $type, $login);
		
		$json['report_id'] = FALSE;
		if ($report_id){
			$json['report_id'] = $report_id;
		}
		
		echo json_encode($json); exit();
	}
	
		public function partnerfinanceAction(){
		
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();

		if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
			return $this->error(404);       
		} 
		
		$sort_field = $this->_getParam('sort_field', 'name');
		$sort_direction = $this->_getParam('sort_direction', 'ASC');
		$year = $this->_getParam('year',FALSE);
		$send_type = $this->_getParam('send_type',FALSE);
		$date_from = $this->_getParam('date_from',FALSE);
		$date_to = $this->_getParam('date_to',FALSE);
		$date_type = $this->_getParam('date_type','dg_crdate');
		$partner_id = $this->_getParam('partner_id',0);
		
		$db_date_from = $this->getDbDate($date_from);
		$db_date_to = $this->getDbDate($date_to);
		
		if($send_type == 'excel'){
			$this->setCfgLayout('empty');
			$this->setView('printpartnerfinance');  
		} else {
			$this->setCfgLayout('full_admin');
			$page_actives=array(200 =>'200');
			Zend_Registry::set('page_actives', $page_actives);
		}
		
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$params = array();
		if($year){
			$params['year'] = $year;
		}
		
		$params['date_from'] = $db_date_from;
		$params['date_to'] = $db_date_to;
		
		switch($date_type){
			case 'dl_datebeg':
				$params['dl_datebeg_from'] = $db_date_from;
				$params['dl_datebeg_to'] =   $db_date_to;
				break;
			case 'dg_crdate':
				$params['dg_crdate_from'] = $db_date_from;
				$params['dg_crdate_to'] =   $db_date_to;
				break;
			case 'dg_turdate':
				$params['dg_turdate_from'] = $db_date_from;
				$params['dg_turdate_to'] =   $db_date_to;
				break;
			default:
				$params['dg_crdate_from'] = $db_date_from;
				$params['dg_crdate_to'] =   $db_date_to;
		}
		
		$partner = array();
		if($partner_id){
			$params['partner_id'] = $partner_id;
			$partner = $privateofficemodel->getpartnerinfo($partner_id);
		}

		$partner_changes = $privateofficemodel->getPartnerChanges();
		
		$data = $privateofficemodel->getPartnerFinance($params);

		$sum_netto = 0;
		$sum_change_netto = 0;
		$sum_oplata = 0;
		$sum_change_oplata = 0;
		$sum_balance_year = 0;
		$sum_balance = 0;
		$sum_brutto = 0;
		$sum_paid = 0;
		$sum_balance2 = 0;
		$sum_profit = 0;
		$sum_change_profit = 0;
		$sum_profitability = 0;
		$sum_change_profitability = 0;
		$sum_profit2 =0;
		$sum_change_profit2 =0;
		$sum_profitability2 = 0;
		$sum_change_profitability2 = 0;
		foreach($data as $key => $item) {
			$sum_balance_year += $item['balance_year'];
			$sum_netto += $item['netto'];
			$sum_oplata += $item['oplata'];
			$sum_balance = $sum_balance + $item['oplata']-$item['netto'];
			$sum_brutto += $item['brutto'];
			$sum_paid += $item['paid'];
			$sum_balance2 = $sum_balance2 + $item['brutto']-$item['paid'];
			$sum_profit = $sum_profit + $item['paid']-$item['netto'];
			$sum_profit2 = $sum_profit2 + $item['brutto']-$item['netto'];
			$data[$key]['balance_year'] = $item['balance_year'];
			$data[$key]['balance'] = $item['oplata']-$item['netto'];
			$data[$key]['balance2'] = $item['brutto']-$item['paid'];
			$data[$key]['profit'] = $item['paid']-$item['netto'];
			$data[$key]['partner_id'] = $key;
			if($item['brutto']){
				$data[$key]['profitability'] = $data[$key]['profit']/$item['brutto']*100;
			} else {
				$data[$key]['profitability'] = 0;
			}
			$data[$key]['profit2'] = $item['brutto']-$item['netto'];
			if($item['brutto']){
				$data[$key]['profitability2'] = $data[$key]['profit2']/$item['brutto']*100;
			} else {
				$data[$key]['profitability2'] = 0;
			}
			
			$data[$key]['change_netto'] = $item['netto'];
			$data[$key]['change_netto_desc'] = '';
			$data[$key]['change_oplata'] = $item['oplata'];
			$data[$key]['change_oplata_desc'] = '';
			$data[$key]['change_profit'] = 0;
			$data[$key]['change_profitability'] = 0;
			$data[$key]['change_profitability2'] = 0;
			if(isset($partner_changes[$key])){
				$data[$key]['change_netto'] += $partner_changes[$key]['netto'];
				$data[$key]['change_netto_desc'] = $partner_changes[$key]['netto_desc'];
				$data[$key]['change_oplata'] += $partner_changes[$key]['oplata'];
				$data[$key]['change_oplata_desc'] = $partner_changes[$key]['oplata_desc'];
			}
			
			$sum_change_netto += $data[$key]['change_netto'];
			$sum_change_oplata += $data[$key]['change_oplata'];
			
			if($data[$key]['change_netto']){
				$data[$key]['change_profit'] = $item['paid']-$data[$key]['change_netto'];
			}
			$sum_change_profit += $data[$key]['change_profit'];
			
			$data[$key]['change_profit2'] = $item['brutto']-$data[$key]['change_netto'];
			$sum_change_profit2 += $data[$key]['change_profit2'];
			
			if($item['brutto']){
				$data[$key]['change_profitability'] =$data[$key]['change_profit']/$item['brutto']*100;
				$data[$key]['change_profitability2'] =$data[$key]['change_profit2']/$item['brutto']*100;
			}
			
			
		}
		
		if($sum_brutto){
			$sum_profitability = $sum_profit/$sum_brutto*100;
			$sum_change_profitability = $sum_change_profit/$sum_brutto*100;
			
			$sum_profitability2 = $sum_profit2/$sum_brutto*100;
			$sum_change_profitability2 = $sum_change_profit2/$sum_brutto*100;
		}
		
		if($sort_field && $sort_direction){
			if ($sort_direction == 'ASC'){
				$data = $this->array_orderby($data, $sort_field, SORT_ASC);
			} 
			
			if ($sort_direction == 'DESC'){
				$data = $this->array_orderby($data, $sort_field, SORT_DESC);
			}
			
		}

		$this->view->data=$data;
		$this->view->sum_netto=$sum_netto;
		$this->view->sum_change_netto=$sum_change_netto;
		$this->view->sum_oplata=$sum_oplata;
		$this->view->sum_change_oplata=$sum_change_oplata;
		$this->view->sum_balance_year=$sum_balance_year;
		$this->view->sum_balance=$sum_balance;
		$this->view->sum_brutto=$sum_brutto;
		$this->view->sum_paid=$sum_paid;
		$this->view->sum_balance2=$sum_balance2;
		$this->view->sum_profit=$sum_profit;
		$this->view->sum_change_profit=$sum_change_profit;
		$this->view->sum_profitability=$sum_profitability;
		$this->view->sum_change_profitability=$sum_change_profitability;
		$this->view->sum_profit2=$sum_profit2;
		$this->view->sum_change_profit2=$sum_change_profit2;
		$this->view->sum_profitability2=$sum_profitability2;
		$this->view->sum_change_profitability2=$sum_change_profitability2;
		$this->view->year=$year;
		$this->view->date_from=$date_from;
		$this->view->date_to=$date_to;
		$this->view->sort_field=$sort_field;
		$this->view->sort_direction=$sort_direction;
		$this->view->date_type=$date_type;
		$this->view->partner=$partner;
		
	}
	

	public function setmessbyuserreadAction() 
    {
        $this->clear();
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $login=(string)$this->_getParam('login',0);
        $privateofficemodel=$this->getModel('Privateoffice');

        $userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$userinfo) {
            exit;
        }
        $usid=$userinfo['US_ID'];        

		$privateofficemodel->setmessreadbyuser($usid, 'usidto');

    }
	
	public function searchhotelAction() 
    {
        $this->clear();
        $q=(string)$this->_getParam('q',0);
    
        $q = (string)$this->_getParam('q', '');
        $q = substr($q, 0, 255);
        $q = $this->filtersimvol($q);        

        
        $this->setCfgLayout('empty');

        $privateofficemodel=$this->getModel('Privateoffice');
        $hotellist=$privateofficemodel->searchhotel($q);

        if ($q!='') {
            foreach ($hotellist as $row) {

                $name=$row['hotel_name'].' '.$row['hotel_category'].' '.$row['country_name'].' '.$row['city_name'];
				
				$hotel_key = $row['KEY'];
				
                echo $name.'|'.$hotel_key."\n";
            }
        }

    }
	
	public function searchturAction() 
    {
        $this->clear();
        $q=(string)$this->_getParam('q',0);
    
        $q = (string)$this->_getParam('q', '');
        $q = substr($q, 0, 255);
        $q = $this->filtersimvol($q);        

        
        $this->setCfgLayout('empty');

        $privateofficemodel=$this->getModel('Privateoffice');
        $turlist=$privateofficemodel->searchtur($q);

        if ($q!='') {
            foreach ($turlist as $row) {

                $name=$row['TL_NAME'];
				
				$tur_key = $row['TL_KEY'];
				
                echo $name.'|'.$tur_key."\n";
            }
        }

    }
	
	public function printaviaAction()
    {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
		$id_avia=(int)$this->_getParam('id_avia',0);
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            if ($usertype!='admin' && $usertype != 'manager') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        } else {
            return $this->error(404);                
            exit;
        }
        
        
        $avia = $privateofficemodel->getdogovoraviabyid($id_avia);

        $this->view->uskey=$uskey;
        $this->view->ustype=$usertype;
        $this->view->dgcode=$dgcode;
        $this->view->avia=$avia;
		$this->view->id_avia=$id_avia;
        $this->view->upload_path=$this->upload_path;
        
    }
	
	public function searchcuratorAction() 
    {
        $this->clear();
        $q=(string)$this->_getParam('q',0);
   
        $q = (string)$this->_getParam('q', '');
        $q = substr($q, 0, 255);
        $q = $this->filtersimvol($q);        

        
        $this->setCfgLayout('empty');

        $privateofficemodel=$this->getModel('Privateoffice');
        $curatorlist=$privateofficemodel->searchcurator($q);

        if ($q!='') {
            foreach ($curatorlist as $key=>$row) {

                $name=$row['US_NAME'].' '.$row['US_SHORTNAME'];
				
				$cur_id = $row['US_KEY'];
				
				if(isset($anegtdoginfo['PD_Key'])){
					$pd_key = $anegtdoginfo['PD_Key'];
				} else {
					$pd_key = 0;
				}
				
                echo $name.'|'.$cur_id."\n";
            }
        }

    }
	public function legalPageAction()
	 {	
		$this->setCfgLayout('page');
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();
		
		$privateofficemodel = $this->getModel('Privateoffice');
		$legals = $privateofficemodel->getLegals();
		$legal_agent = array();
		
		$page = '';	
		$url=$_SERVER['REQUEST_URI'];
		if (substr($url,0,21)=='/privateoffice/legal/') {
			$len=strlen($url);
			$page=trim(substr($url,21,$len), '/');
		}
		
		switch($page){
			case 'terms':
				$title="Условия работы";
				$field = 'text_terms';
				break;
			case 'rules':
				$title="Правила бронирования";
				$field = 'text_rules';
				break;
			case 'contest':
				$title="Акции и конкурсы";
				$field = 'text_contest';
				break;
			case 'turs':
				$title="Рекламные туры";
				$field = 'text_turs';
				break;
			case 'relaxtur':
				$title="Relax-тур";
				$field = 'text_relaxtur';
				break;
			default:
				return $this->error(404);                
				exit;
		}
		
		if($usertype == 'admin' || $usertype == 'meneger' || $usertype == 'manager') {
			//Вывод для админов
			$page_actives=array(3336 =>'3336', 4=>'4', 0=>'0', 36 => '36');
			Zend_Registry::set('page_actives', $page_actives);

		} else {
			//Вывод для агентов
			$userinfo=$privateofficemodel->getuserinfo($uskey);
			$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
			Zend_Registry::set('page_actives', $page_actives);
			if (!$userinfo) {
				return $this->error(404);                
				exit;
			}
			$agentinfo=$privateofficemodel->getagentinfo($userinfo['US_PRKEY']);
			$citiesmodel = $this->getModel('Cities');
            $city = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$legal_agent = $privateofficemodel->getLegalById($city['legal_id']);
		}
		$this->view->usertype = $usertype;
		$this->view->legals = $legals;
		$this->view->legal_agent = $legal_agent;
		$this->view->title = $title;
		$this->view->field = $field;
	 } 
	 
	 public function printinvoiceAction() 
    {
         $this->setCfgLayout('empty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
		$doc_type = (string)$this->_getParam('doc_type','doc');
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		
		
		$paymenttype =  0;
		$paymenttypeval = 0;
		
					
		
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin'  || $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
		
		

        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
		
		
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
		
		
		
        
        $logintxt=$_SESSION['s_login'];
		
		
		
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
			
			
            if ($dogovorinfo['OS_CODE']!='7') {
                return $this->error(404);                
                exit;
            }
            
			//Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            $status=(int)$_SESSION['s_status'];
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
			if(in_array($dogovorinfo['DG_PARTNERKEY'], $this->agent_change_doc)){
				$agentinfo=$privateofficemodel->getagentinfo($this->riteil_key);
			} else {
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
			}
			
            if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
            else $prbossname='';
            // zend_debug::dump($agentinfo);
            // exit;
            $anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
            // zend_debug::dump($anegtdoginfo);
            $dognumview='';
            $dogdateview='';
            $daydog='';
            $mondogtxt='';
            $yeardog='';
            if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
            if (isset($anegtdoginfo['PD_DateBeg'])) {
                $daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
                $yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
                $mondogtxt='';
                $mondog=(int)$mondog;
                $mondogtxt=$this->getmontxt($mondog);
                // echo '$daydog='.$daydog.'<br>';
                // echo '$mondog='.$mondog.'<br>';
                // echo '$mondogtxt='.$mondogtxt.'<br>';
                // echo '$yeardog='.$yeardog.'<br>';
            }
            // exit;
            // echo '$dognumview = '.$dognumview.'<br>';
            // echo '$dogdateview = '.$dogdateview.'<br>';
  // // ["PD_DogNumber"] => string(9) "0658/2011"
  // // ["PD_DateBeg"] => string(19) "2011-04-11 00:00:00"            
            // exit;
            
            $pr_fullname=$agentinfo['PR_FULLNAME'];
			
			if(in_array($dg_prkey, $this->agent_change_doc)){
				$userinfo = $privateofficemodel->getuserinfo($dogovorinfo['DG_DUPUSERKEY']);
				$pr_fullname=$userinfo['US_FULLNAME'];
				$this->setView('printconfirmationhtml2'); 
			}

			
            $agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
            $pr_phones=$agentinfo['PR_PHONES'];
            $pr_fax=$agentinfo['PR_FAX'];
            $pr_email=$agentinfo['PR_EMAIL'];
            
            //Дата бронирования
            $crdate=$dogovorinfo['DG_CRDATE'];
            $crdate=date("d.m.Y", strtotime($crdate));
            
            //Информация по стране
            $countryid=(int)$dogovorinfo['DG_CNKEY'];
            $countriesmodel = $this->getModel('Countries');
            $country=$countriesmodel->getcountrybyid($countryid);
            if (isset($country['Name'])) {
                $countryname=$country['Name'];
            } else {
                $countryname='';
            }
            
            //Информация по городу
            $cityid=(int)$dogovorinfo['DG_CTKEY'];
            $citiesmodel = $this->getModel('Cities');
            $city=$citiesmodel->getcitybyid($cityid);
            if (isset($city['Name'])) {
                $cityname=$city['Name'];
            } else {
                $cityname='';
            }
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$this->view->legal_id=$city_legal['legal_id'];
			if(strtotime($dogovorinfo['DG_CRDATE']) < strtotime($this->dogovorCheckDate) || $dogovorinfo['DG_PARTNERKEY'] == 27132){
				$this->view->legal_id=0;
			}
            //Информация по туру
            $turname=$dogovorinfo['turname'];
            // zend_debug::dump($dogovorinfo);
            // exit;
            //Список туристов
            $dgkey=$dogovorinfo['DG_Key'];
            $turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
            function stday($day) {
                $daytext='';
                if ($day<21) {
                    if ($day==1) $daytext='день';
                    else if ($day>=2 && $day<=4) $daytext='дня';
                    else if ($day>=5 && $day<=20) $daytext='дней';
                } else {
                    $dayost=$day%10;
                    if ($dayost==1) $daytext='день';
                    else if ($dayost>=2 && $dayost<=4) $daytext='дня';
                    else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
                }
                return $daytext;
            }
            $turlisttxt='';
            foreach ($turlist as $key=>$row) {
                // zend_debug::dump($row);
                $turlisttxt.=$row['TU_NAMERUS'];
                if (strlen($turlisttxt)>0 && strlen($row['TU_SHORTNAME'])>0) $turlisttxt.=' ';
                $turlisttxt.=$row['TU_SHORTNAME'];
                break;
            }
            if (count($turlist)>1) {
                $turlisttxt.='+'.(count($turlist)-1);
            }
            // zend_debug::dump($turlisttxt);
            // exit;
            
            $turlistview=array();
			$turist_main = '';
            foreach ($turlist as $key=>$row) {
				if($row['TU_ISMAIN']){
					$turist_main = $row['TU_NAMERUS'].' '.$row['TU_FNAMERUS'].' '.$row['TU_SNAMERUS'];
					$turist_main_phone = $row['TU_PHONE'];
				}
                $fio=$row['TU_NAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_FNAMERUS'];
                if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
                $fio.=$row['TU_SNAMERUS'];
                $turlistview[$key]['fio']=$fio;
                
                if ($row['TU_RealSex']=='0') $sex='М';
                else $sex='Ж';
                $turlistview[$key]['sex']=$sex;
                
                $pasport=$row['TU_PASPORTTYPE'];
                if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
                $pasport.=$row['TU_PASPORTNUM'];
                $turlistview[$key]['pasport']=$pasport;
                
                $birthday='';
                if (strlen($row['TU_BIRTHDAY'])>0) {
                    $birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
                }
                $turlistview[$key]['birthday']=$birthday;
                // echo $birthday;
                
                $strax='';
                $tukey=(int)$row['TU_KEY'];
                $dlkeyarray=$privateofficemodel->getdogovorlistbyturist($tukey,$dgcode);
                foreach ($dlkeyarray as $row1) {
                    if ($row1['DL_SVKEY']=='6') {
                        //zend_debug::dump($row1);
                        $strax.=$row1['SL_NAME'];
                        $dllong=(int)$row1['DL_Long'];
                        $strax.='/'.$dllong.' '.stday($dllong);
                        $dl_subcode1=$row1['DL_SUBCODE1'];
                        $adddescript1=$privateofficemodel->getadddescript1($dl_subcode1);
                        if (is_array($adddescript1)) {
                            $strax.='/'.$adddescript1['A1_NAME'];
                        }
                        break;
                    }
                }
                $turlistview[$key]['strax']=$strax;
            }
            //рейсы поездов
            $dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);//
            // zend_debug::dump($dogovorlist);
            $airview=array();
            //Функция извлечения времени без секунд, из datetime
            function gettimetosqldate($date) {
                $date_arr=explode(' ',$date);
                if (count($date_arr)==2) {
                    $date=$date_arr[1];
                    $date_arr=explode(':',$date);
                    if (count($date_arr)==3) {
                        $date=$date_arr[0].':'.$date_arr[1];
                    } else {
                        $date='';
                    }
                } else {
                    $date='';
                }
                return $date;
            }
			
			$visalistview = array();
            foreach ($dogovorlist as $key=>$row)  {
			if($row['DL_SVKEY'] == 1182)
					{
						if($row['DL_COST'] != 0) {
						$paymenttype = 1182; 
						$paymenttypeval = $row['DL_COST'];
						}
						
					
					}
			
			
                //Извлекаем из списка услуг, только авиаперелет
                if ($row['DL_SVKEY']=='1') {
                    $dlcode=(int)$row['DL_CODE'];
                    $subcode1=(int)$row['DL_SUBCODE1'];
                    $aircharter=$privateofficemodel->getaircharter($dlcode);
                    $airserv=$privateofficemodel->getairservice($subcode1);
                    if ($aircharter) {
                        $airview[$key]['num']=$aircharter['CH_AIRLINECODE'].' '.$aircharter['CH_FLIGHT'];
                        $airview[$key]['route']=$aircharter['citynamefrom'].' - '.$aircharter['citynameto'];
                        if (isset($airserv['AS_CODE'])) {
                            $airview[$key]['class']=$airserv['AS_CODE'];
                        } else {
                            $airview[$key]['class']='';
                        }
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $airview[$key]['date']=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } else {
                            $airview[$key]['date']='';
                        }
                        $weekday=date("w", strtotime($row['DL_DATEBEG']));
                        if ($weekday==0) $weekday=1;
                        $airseason=$privateofficemodel->getairseason($dlcode,$weekday,$row['DL_DATEBEG']);
                        $timefrom='';
                        $timeto='';
                        if ($airseason) {
                            $timefrom=$airseason['AS_TIMEFROM'];
                            if (strlen($timefrom)>0) {
                                $timefrom=gettimetosqldate($timefrom);
                            } else $timefrom='';
                            $timeto=$airseason['AS_TIMETO'];
                            if (strlen($timeto)>0) {
                                $timeto=gettimetosqldate($timeto);
                            } else $timeto='';
                        }
                        $airview[$key]['timefrom']=$timefrom;
                        $airview[$key]['timeto']=$timeto;
                        $airview[$key]['aeroport']=$aircharter['CH_PORTCODEFROM'];
                    }
                }
				if ($row['DL_SVKEY']=='5') {
					$visalistview[] = $row;
				}
            }

            //Таблица с проживаниями
            $hotellistview=array();
            $i=0;
            $hotelstxt='';
            $datebegintxt='';
            $datebeginint=0;
            $dateendtxt='';
            $dateendint=0;
            $roomstxt='';
            $pansiontxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $key=>$row) {
                    if ($row['DL_SVKEY']=='3') {
                        $i++;
                        // zend_debug::dump($row);
                        //Номер
                        $hotellistview[$i]['num']=$i;
                        //Город 
                        $cityid=$row['DL_CTKEY'];
                        $city=$citiesmodel->getcitybyid($cityid);
                        $cityname='';
                        if (is_array($city)) {
                            if (isset($city['Name'])) {
                                $cityname=$city['Name'];
                            }
                        }
                        $hotellistview[$i]['cityname']=$cityname;
                        //Отель
                        $hotelkey=(int)$row['DL_CODE'];
                        $hotelname='';
                        $hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
                        
                        if (is_array($hoteldictionary)) {
                            if (isset($hoteldictionary['HD_NAME'])) {
                                $hotelname=$hoteldictionary['HD_NAME'];
                            }
                            if (isset($hoteldictionary['HD_STARS'])) {
                                if (strlen($hoteldictionary['HD_STARS'])>0) {
                                    $hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
                                }
                            }
                        }
                        if (strlen($hotelstxt)>0) $hotelstxt.='; ';
                        $hotelstxt.=$hotelname;
                        if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

                        $hotellistview[$i]['hotelname']=$hotelname;
                        //номер
                        $subcode1=(int)$row['DL_SUBCODE1'];
                        $roomname='';
                        if ($subcode1>0) {
                            $room=$privateofficemodel->getroom($subcode1);
                            if (is_array($room)) {
                                $roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
                                $accmdkey=(int)$room['AccmdMenTypeKey'];
                                $accmd=$privateofficemodel->getaccmd($accmdkey);
                                if (is_array($accmd)) {
                                    $roomname.=', '.trim($accmd['Code']);
                                }
                            }
                        }
                        if (strlen($roomstxt)>0) $roomstxt.='; ';
                        $roomstxt.=$roomname;
                        $hotellistview[$i]['roomname']=$roomname;
                        //питание
                        $subcode2=(int)$row['DL_SUBCODE2'];
                        $pansionname='';
                        if ($subcode2>0) {
                            $pansion=$privateofficemodel->getpansion($subcode2);
                            if (is_array($pansion)) {
                                $pansionname=$pansion['Code'].' '.$pansion['Name'];
                            }
                        }
                        if (strlen($pansiontxt)>0) $pansiontxt.='; ';
                        $pansiontxt.=$pansionname;
                        $hotellistview[$i]['pansionname']=$pansionname;
                        //Дата заезда
                        $datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        $datebegininttemp=strtotime($row['DL_DATEBEG']);
                        // echo $datebegininttemp.'<br>';
                        if ($datebeginint>$datebegininttemp || $datebeginint==0) {
                            $datebeginint=$datebegininttemp;
                            $datebegintxt=date("d.m.Y", $datebegininttemp);
                        }
                        $hotellistview[$i]['datebegin']=$datebegin;
                        //Дата выезда
                        $dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
                        $dateendinttemp=strtotime($row['DL_DATEEND']);
                        if ($dateendint<$dateendinttemp || $dateendint==0) {
                            $dateendint=$dateendinttemp;
                            $dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
                        }
                        
                        $hotellistview[$i]['dateend']=$dateend;
                        //Кол-во ночей
                        $ndays=(int)$row['DL_NDAYS'];
                        $ndaystxt=$ndays.'/'.($ndays+1);
                        $hotellistview[$i]['days']=$ndaystxt;
                    }
                }
            }       
            // echo '$datebegintxt = '.$datebegintxt.'<br>';
            // echo '$datebeginint = '.$datebeginint.'<br>';
            // echo '$dateendtxt = '.$dateendtxt.'<br>';
            // echo '$dateendint = '.$dateendint.'<br>';
            // exit;
            // echo 'hotelstxt='.$hotelstxt.'<br>';
            // exit;            
            //В стоимость входит
            $vstcode=0;
            $vsttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1119') {
                        // zend_debug::dump($row);
                        $vstcode=(int)$row['DL_CODE'];
                        if ($vstcode>0) {
                            $vst=$privateofficemodel->getservicelist(1119,$vstcode, $row['DL_DGCOD']);
                            if (is_array($vst)) {
                                if (isset($vst['SL_NAME'])) {
                                    if (strlen($vsttxt)>0) $vsttxt.=', ';
                                    $vsttxt.=$vst['SL_NAME'];
                                }
                            }
                        }
                        // break;
                    }
                }
            }  
            if (strlen($vsttxt)==0) $vsttxt='Нет';
            
            //Дополнительные услуги
            $dopcode=0;
            $doptxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1032') {
                        // zend_debug::dump($row);
                        $dopcode=(int)$row['DL_CODE'];
                        if ($dopcode>0) {
                            $dop=$privateofficemodel->getservicelist(1032,$dopcode, $row['DL_DGCOD']);
                            if (is_array($dop)) {
                                if (isset($dop['SL_NAME'])) {
                                    if (strlen($doptxt)>0) $doptxt.=', ';
                                    $doptxt.=$dop['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }  
            if (strlen($doptxt)==0) $doptxt='Нет';

            //Расчетный час
            $rastcode=0;
            $rasttxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    // echo $row['DL_SVKEY'].'<br>';
                    if ($row['DL_SVKEY']=='1112') {
                        // zend_debug::dump($row);
                        $rastcode=(int)$row['DL_CODE'];
                        if ($rastcode>0) {
                            $rast=$privateofficemodel->getservicelist(1112,$rastcode, $row['DL_DGCOD']);
                            // zend_debug::dump($rast);
                            if (is_array($rast)) {
                                if (isset($rast['SL_NAME'])) {
                                    if (strlen($rasttxt)>0) $rasttxt.=', ';
                                    $rasttxt.=$rast['SL_NAME'];
                                }
                            }
                        }
                    }
                }
            }
            if (strlen($rasttxt)==0) $rasttxt='Нет';
            
            
            //////////////Трансфер / транспорт start
            $tranferlistview=array();
            $i=0;
            $transfertxt='';
            if (is_array($dogovorlist)) {
                foreach ($dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='2') {
                        // zend_debug::dump($row);
                        $transfercode=(int)$row['DL_CODE'];
                        $transfersubcode1=(int)$row['DL_SUBCODE1'];
                        $transfer=$privateofficemodel->gettransfer($transfercode);
                        $transpost=$privateofficemodel->gettranspost($transfersubcode1);
                        // zend_debug::dump($transfer);
                        // zend_debug::dump($transpost);
                        //Маршрут
                        $transferroute='';
                        if (is_array($transfer)) {
                            if (isset($transfer['TF_NAME'])) {
                                $transferroute=$transfer['TF_NAME'];
                            }
                        }
                        if (strlen($transfertxt)>0) $transfertxt.='; ';
                        $transfertxt.=$transferroute;
                        $tranferlistview[$i]['route']=$transferroute;
                        //Дата
                        $transferdate='';
                        if (strlen($row['DL_DATEBEG'])>0) {
                            $transferdate=date("d.m.Y", strtotime($row['DL_DATEBEG']));
                        } 
                        $tranferlistview[$i]['date']=$transferdate;
                        //Транспорт
                        $transporttxt='';
                        if (is_array($transpost)) {
                            if (isset($transpost['TR_NAME'])) {
                                $transporttxt=$transpost['TR_NAME'];
                            }
                        }
                        $tranferlistview[$i]['transport']=$transporttxt;
                        $i++;
                    }                    
                }
            }
            
            
            //////////////Страховка start
            $straxcode=0;
            $straxbool=false;            
            $straxtxt='';
            if (is_array($this->view->dogovorlist)) {
                foreach ($this->view->dogovorlist as $row) {
                    if ($row['DL_SVKEY']=='6') {
                        $dlkey=$row['DL_KEY'];
                        $turistlist=$privateofficemodel->getturistlistbydlkey($dlkey, date("Y", strtotime($dogovorinfo['DG_CRDATE'])),'',$dgcode);
                        if (is_array($turistlist)) {
                            $turistlist_size=count($turistlist);
                        } else {
                            $turistlist_size=0;
                        }                    
                        $straxbool=true;
                        $straxcode=(int)$row['DL_CODE'];
                        if ($straxbool) {
                            if (strlen($straxtxt)>0) $straxtxt.=' ';
                            $strax=$privateofficemodel->getservicelist(6,$straxcode, $row['DL_DGCOD']);
                            if (is_array($strax)) {
                                $straxtxt.=$strax['SL_NAME'];
                            }
                            $straxtxt.='('.$turistlist_size.')';
                        }
                    }                    
                }
            }   
            if (strlen($straxtxt)==0) $straxtxt='Нет';              
            

            // echo '$straxtxt = '.$straxtxt.'<br>';
            // exit;
            //скидка
            $discount=$dogovorinfo['DG_DISCOUNT'];
            
            $datetec=date("d.m.y");
            $daytec=date("d");
            $montec=date("n");
            $yeartec=date("Y");
            $montectxt=$this->getmontxt($montec);
        } else {
            return $this->error(404);                
            exit;
        }
        
		$this->view->paymenttype = $paymenttype;
		$this->view->paymenttypeval =  $paymenttypeval;
		
        $this->view->dgcode=$dgcode;
        $this->view->crdate=$crdate;
        $this->view->pr_fullname=$pr_fullname;
        $this->view->agentadress=$agentadress;
        $this->view->pr_phones=$pr_phones;
        $this->view->pr_fax=$pr_fax;
        $this->view->pr_email=$pr_email;
        $this->view->countryname=$countryname;
        $this->view->cityname=$cityname;
        $this->view->turname=$turname;
        $this->view->turlistview=$turlistview;
        $this->view->airview=$airview;
        $this->view->hotellistview=$hotellistview;
        $this->view->vsttxt=$vsttxt;
        $this->view->doptxt=$doptxt;
        $this->view->rasttxt=$rasttxt;
        $this->view->tranferlistview=$tranferlistview;
        $this->view->dogovorinfo=$dogovorinfo;
        $this->view->logintxt=$logintxt;
        $this->view->datetec=$datetec;
        $this->view->discount=$discount;
        $this->view->hotelstxt=$hotelstxt;
        $this->view->turlisttxt=$turlisttxt;
		$this->view->visalistview=$visalistview;
        
        $this->view->datebegintxt=$datebegintxt;
        $this->view->dateendtxt=$dateendtxt;
        $this->view->roomstxt=$roomstxt;
        $this->view->pansiontxt=$pansiontxt;
        $this->view->transfertxt=$transfertxt;
        
        $this->view->daydog=$daydog;
        $this->view->mondogtxt=$mondogtxt;
        $this->view->yeardog=$yeardog;
        
        $this->view->daytec=$daytec;
        $this->view->montectxt=$montectxt;
        $this->view->yeartec=$yeartec;
        $this->view->dognumview=$dognumview;

        $this->view->prbossname=$prbossname;
        $this->view->turist_main =  $turist_main;
		$this->view->turist_main_phone =  $turist_main_phone;
        
        switch($doc_type){
			case 'doc':
				$this->setView('printinvoice');
				$filename = 'confirmation' .$dgcode. '.doc';
				$this->view->filename=$filename;
				if (!headers_sent()) {
					header("Content-Type: application/msword");
					header('Content-Disposition: attachment; filename="'.$filename.'"');
				}
				break;
			case 'html':
				$this->setView('printinvoicehtml');
				break;
			case 'pdf':
				$this->setView('printinvoicepdf');
				break;
		}
        
        
    }
	
	//////////// ANKETA 2014
	public function anketa2014Action() {
        
		$this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		$change_doc = FALSE;
		if(in_array($this->view->userinfo['US_PRKEY'], $this->agent_change_doc)){
			$change_doc = TRUE;
		}
		$this->view->change_doc = $change_doc;
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
        $res=$this->anketaform2014();
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        if (isset($_SESSION['posttemp'])) $posttemp=$_SESSION['posttemp'];
        else $posttemp=array();
        $this->view->posttemp=$posttemp;
        $this->view->data=array();
    }
    public function anketasend2014Action() {
         $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        $type=(int)$this->_getParam('type',1);
        if ($type!=1 && $type!=0) $type=1;
        //if ($boss===0) $type=0;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
		//
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		//print_r($page_actives); exit;
		Zend_Registry::set('page_actives', $page_actives);
		//
		$privateofficemodel=$this->getModel('Privateoffice');
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
		
		
		
		$page_actives=array(36 =>'36', 4=>'4', 0=>'0' , '3337'=>'3337'); // 3337 - Это значит в админе показывать блок с информацией польлзователя
		if ($usertype=='admin' || $usertype=='manager') {
		$page_actives[3336] = '3336';
		}
		
		
		
        $res=$this->anketaform2014();
        $vopros=$res['vopros'];
        $voprosvar=$res['voprosvar'];
        $voprosvarother=$res['voprosvarother'];
        $voprosvartype=$res['voprosvartype'];
        
        if ($_SERVER['REQUEST_METHOD']=='POST') {
            $_SESSION['posttemp']['error']=array();
            $_SESSION['posttemp']['errorex']=array();
            $valid=true;
            if (isset($_POST['company'])) {
                $company=htmlspecialchars(strip_tags(trim(substr($_POST['company'],0,1024))));
                if (strlen($company)>0)
                    $_SESSION['posttemp']['company']=$company;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['company']=$company;
                    $_SESSION['posttemp']['errorex']['company']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['company']=1;
            }
            if (isset($_POST['cityname'])) {
                $cityname=htmlspecialchars(strip_tags(trim(substr($_POST['cityname'],0,1024))));
                
                if (strlen($cityname)>0)
                    $_SESSION['posttemp']['cityname']=$cityname;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['cityname']=$cityname;
                    $_SESSION['posttemp']['errorex']['cityname']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['cityname']=1;
            }
            if (isset($_POST['fio'])) {
                $fio=htmlspecialchars(strip_tags(trim(substr($_POST['fio'],0,1024))));
                if (strlen($fio)>0)
                    $_SESSION['posttemp']['fio']=$fio;
                else {
                    $valid=false;
                    $_SESSION['posttemp']['fio']=$fio;
                    $_SESSION['posttemp']['errorex']['fio']=1;
                }
            } else {
                $valid=false;
                $_SESSION['posttemp']['errorex']['fio']=1;
            }
			
			$count_question = array();
			foreach($_POST as $key=>$value){
				if($value && strstr($key, 'vopros_')){
					$count_arr = explode('_',$key);
					if (isset($count_arr[1])){
						$count_question[$count_arr[1]] = 1;
					}
				}
			}

            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,1024))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='radio') {
                                if (isset($_POST['vopros_'.$numvopros])) {
                                    $value=(int)$_POST['vopros_'.$numvopros];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            } elseif ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar],0,4048))));
                                    $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                } else {
                                    if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                        $valid=false;
                                        if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                            $_SESSION['posttemp']['error'][$numvopros]=1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $checkbox1=array();  //Существующие chekbox
            $checkbox2=array();  //Заполненные checkbox
            foreach ($vopros as $numvopros=>$textvopros) {
                if (isset($voprosvar[$numvopros])) {
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    $value=(int)$_POST['vopros_'.$numvopros.'_'.$numvar];
                                    if (isset($voprosvar[$numvopros][$value])) {
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar]=$value;
                                    } 
                                } 
                                if (isset($voprosvarother[$numvopros][$numvar])) {
                                    if (isset($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                        $value=htmlspecialchars(strip_tags(trim(substr($_POST['vopros_'.$numvopros.'_'.$numvar.'_other'],0,1024))));
                                        $_SESSION['posttemp']['vopros_'.$numvopros.'_'.$numvar.'_other']=$value;
                                    } else {
                                        if (isset($voprosvartype[$numvopros][$numvar]['valid'])) {
                                            $valid=false;
                                            if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                                                $_SESSION['posttemp']['error'][$numvopros]=1;
                                        }
                                    }
                                }
                            }                         
                        }
                    }
                    foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                        if (isset($voprosvartype[$numvopros][$numvar])) {
                            if ($voprosvartype[$numvopros][$numvar]['type']=='checkbox'){
                                if (!isset($checkbox1[$numvopros])) $checkbox1[$numvopros]=1;
                                if (isset($_POST['vopros_'.$numvopros.'_'.$numvar])) {
                                    if (!isset($checkbox2[$numvopros][$numvar])) $checkbox2[$numvopros][$numvar]=1;
                                    
                                }
                            }
                        }
                    }
                }
            }
            foreach ($checkbox1 as $numvopros=>$row) {
                if (!isset($checkbox2[$numvopros])) {
                    if (!isset($_SESSION['posttemp']['error'][$numvopros])) 
                        $_SESSION['posttemp']['error'][$numvopros]=1;
                }
            }
//            zend_debug::dump($_GET);
//            zend_debug::dump($_POST);
            //if (isset($_POST['step2'])) {
            
                $galkavalid=false;
                $kolvoerr=0;
                if (isset($_SESSION['posttemp']['error'])) {
                    //echo 'count($_SESSION[ ='.$_SESSION['posttemp']['error'];
                    //exit;
                    if (count($_SESSION['posttemp']['error'])<26) $galkavalid=true;
                } else $galkavalid=true;
                if (isset($_SESSION['posttemp']['errorex']) ) {
                    if (count($_SESSION['posttemp']['errorex'])>0) $galkavalid=false;
                }
                if ($galkavalid && isset($_SESSION['posttemp']['error'])) {
                    $valid=true;
//                    echo 'Второй шаг = '.count($_SESSION['posttemp']['error']);
                }
            //}
            if (!$valid) {
                if (!headers_sent()) {
                    header('Location: /privateoffice/anketa2014/');
                    exit;
                }
            } else {
                $ip=$_SERVER['REMOTE_ADDR'];
                //$fieldvalue=$_POST;
                $fieldvalue=array();
                foreach ($_POST as $key=>$row) {
                    $fieldvalue[$key]=htmlspecialchars(strip_tags(trim(substr($row,0,4096))));
                }
                $senddb=serialize($fieldvalue);
                $senddb=addslashes($senddb);
                $timestamp=time();
//                echo 'Отправляем письмо';
                
                $datasend=date("d.m.Y, H:i:s");
                $useragent=substr(addslashes(htmlspecialchars($_SERVER['HTTP_USER_AGENT'],ENT_QUOTES | ENT_SUBSTITUTE, 'utf-8')),0,1024);
                $send='<center><table border="1" width="80%" cellpadding="3" cellspacing="1">
                    <tr><th colspan="2">Анкета для агентств 2014</th></tr>
                ';         
                if (isset($fieldvalue['company']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Название вашей компании:</b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['company']).'</td></tr>';
                if (isset($fieldvalue['cityname']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Город: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['cityname']).'</td></tr>';
                if (isset($fieldvalue['fio']))
                    $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Контактное лицо: </b></td>'.
                        '<td>&nbsp;&nbsp;&nbsp;'.stripslashes($fieldvalue['fio']).'</td></tr>';
                        
                $send.='<tr><td>&nbsp;&nbsp;&nbsp;<b>Количество отвеченных вопросов: </b></td>'.
                    '<td>&nbsp;&nbsp;&nbsp;'.count($count_question).'</td></tr>';
////////////////////////////////                        
//                zend_debug::dump($fieldvalue);
                        
                foreach ($vopros as $numvopros=>$textvopros) {
                    $send.='<tr><td width="49%">
                        <b>'.$numvopros.'. '.$textvopros.'</b></td><td>';
                    if (isset($voprosvar[$numvopros])) {
                        foreach ($voprosvar[$numvopros] as $numvar=>$textvar) {
                            if (isset($voprosvartype[$numvopros][$numvar])) {
                                if (strpos($textvar,'%%inputother%%')!==false) {
                                    if (isset($voprosvarother[$numvopros][$numvar])) {
                                        $inputother='';
            //                            $inputother='<input name="vopros_'.$numvopros.'_'.$numvar.'_other" value="';
                                        
                                        if (isset($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other'])) {
                                            if ($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']=='')
                                                $inputother='<u>не указано</u>';
                                            else 
                                                $inputother='<u>'.stripslashes($fieldvalue['vopros_'.$numvopros.'_'.$numvar.'_other']).'</u>';
                                        } 

                                        $textvar=str_replace('%%inputother%%',$inputother,$textvar);
                                    }
                                }
                                if ($voprosvartype[$numvopros][$numvar]['type']=='radio') $fieldname='vopros_'.$numvopros;
                                else $fieldname='vopros_'.$numvopros.'_'.$numvar;
                                
                                if ($voprosvartype[$numvopros][$numvar]['type']=='text') $size=' size="'.$voprosvartype[$numvopros][$numvar]['size'].'"';
                                else $size='';
                                $prefixid='';
                                $validate='';
                                if ($voprosvartype[$numvopros][$numvar]['type']=='textarea') {
                                    if (isset($fieldvalue[$fieldname]))
                                        if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                        else $send.='<u>не указано</u>';
                                }
                                else {
                                    if ($voprosvartype[$numvopros][$numvar]['type']!='text') {
                                        $send.='<input '.$validate.'name="'.$fieldname.'" value="';
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='text') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                $send.=stripslashes($fieldvalue[$fieldname]);
                //                                $send.=stripslashes($this->posttemp[$fieldname]);
                                            }
                                        } else $send.=$voprosvartype[$numvopros][$numvar]['value'];
                                        $send.='" type="'.$voprosvartype[$numvopros][$numvar]['type'].'"'.$size.$prefixid;
                                        if ($voprosvartype[$numvopros][$numvar]['type']=='radio' 
                                            || $voprosvartype[$numvopros][$numvar]['type']=='checkbox') {
                                            if (isset($fieldvalue[$fieldname])) {
                                                if ($fieldvalue[$fieldname]==$numvar) {
                                                    $send.=' checked="checked"';
                                                } else {
                                                    $send.=' disabled';
                                                }
                                            } else {
                                                $send.=' disabled';
                                            }
                                        }
                                        $send.='> '.$textvar.'<br/>'."\r\n";
                                    } else {
              //                          echo '$fieldname = '.$fieldname.'<br>';
                                        if (isset($fieldvalue[$fieldname])) {
                                            $fieldvalue[$fieldname]=trim($fieldvalue[$fieldname]);
            //                                echo 'strlen($fieldvalue[$fieldname]) = '.strlen($fieldvalue[$fieldname]).'<br>';
                                            if (strlen($fieldvalue[$fieldname])>0) $send.=stripslashes($fieldvalue[$fieldname]);
                                            else $send.='<i>Не заполнено</i>&nbsp;';
                                        } else $send.='<i>Не заполнено</i>&nbsp;';
                                    }
                                }
                            }
                        }
                    }
                    $send.=' </td></tr>';
                }                        
                
                $send.='<tr><td><b>Время</b></td><td>'.$datasend.'</td></tr>';
                
                $send.='</table>';
                
//                echo $send;
//                exit;
                
                function utf8_to_cp12511($str) {
                    $encoded_data = mb_convert_encoding($str, 'Windows-1251', 'UTF-8');
                    return $encoded_data;
                }        
                $send=utf8_to_cp12511($send);
        
                // $emaillist[]='elkin@multitour.ru';
                // $emaillist[]='noreply@multitour.ru';
                $emaillist[]='agent@multitour.ru';
                $emaillist[]='semenov@multitour.ru';
				$emaillist[]='kreidich@multitour.ru';
                $emailfrom='noreply@multitour.ru';
                $subject=utf8_to_cp12511('Анкета для агентств');

                if ($emaillist!=null) {
                    for ($i=0;$i<count($emaillist);$i++) {
                        $headers="From: \"".utf8_to_cp12511('Анкета для агентств')."\" <".$emailfrom.">\n";
//                        $headers.="X-Sender: <".$$emailfrom.">\n";
                        $headers.="Content-Type: text/html; charset=windows-1251\n";
                        $headers.="Content-Transfer-Encoding: 8bit";
                        if ($emaillist[$i]!='') $se=mail($emaillist[$i],$subject,$send,$headers);
                        if (!$se) {
//                            echo "При отправки сообщения возникла ошибка";
//                            exit;
                        } else {
//                            echo 'Сообщение на E-mail успешно отправлено: '.$emaillist[$i].'<br>';
                        }
                    }
                }
                
                $othermodel=$this->getModel('Other');
                $othermodel->sendanketa2014($senddb,$timestamp,$ip);
                unset($_SESSION['posttemp']);
          
                if (!headers_sent()) {
                    header('Location: /anketasend2014/');
                    exit;
                }
            }
            exit;
        } else {
         
        }
    }
    public function anketaresult2014Action() 
    {
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        if ($status!=1) {
            session_destroy();
            return $this->error(404);                
            exit;
        }
//        session_start();
//        $this->setCfgLayout('base');
        $res=$this->anketaform2014();
        $anketlist=(int)$this->_getParam('anketlist');
        $anketa=(int)$this->_getParam('anketa');
        //if ($anketa) 
        //$this->setCfgLayout('base');
        //else 
        // $this->setCfgLayout('full_content');
        
        $this->view->vopros=$res['vopros'];
        $this->view->voprosvar=$res['voprosvar'];
        $this->view->voprosvarother=$res['voprosvarother'];
        $this->view->voprosvartype=$res['voprosvartype'];
        $othermodel=$this->getModel('Other');
        $anketares=$othermodel->anketares2014();
        $this->view->anketares=$anketares;
        
        $this->view->anketlist=$anketlist;
        $this->view->anketa=$anketa;
    }

	public function anketaform2014() {
	 
	$numvopros=1;
			$vopros[$numvopros]='<span style="font-size:12px;">Повлияло ли отсутствие ж/д сообщения в Крым на выбор отдыха у ваших туристов в 2014 г.?</span>';
				$voprosvar[$numvopros][1]='Нет, не повлияло, туристы выбрали отдых в Крым';
				$voprosvar[$numvopros][2]='Туристы выбрали альтернативные варианты отдыха в России и других странах бывшего СССР';
				$voprosvar[$numvopros][3]='Туристы выбрали туры зарубеж';
				$voprosvar[$numvopros][4]='Туристы не поехали отдыхать в этом году';
				$voprosvar[$numvopros][5]='Другое %%inputother%%';
					$voprosvarother[$numvopros][5]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=5; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	//

	$numvopros=2;
			$vopros[$numvopros]='Есть ли автобусные туры к морю с выездом из Вашего города и пользуются ли они спросом?';
				$voprosvar[$numvopros][1]='Есть, не пользуются';
				$voprosvar[$numvopros][2]='Есть, пользуются';
				$voprosvar[$numvopros][3]='Из нашего города не отправляются автобусы к морю';
				$voprosvar[$numvopros][4]='Другое %%inputother%%';
					$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=4; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	//

	 
	$numvopros=3;
			$vopros[$numvopros]='Насколько удобен и понятен для Вас Личный кабинет на сайте компании «МУЛЬТИТУР»? Чтобы хотелось изменить/дополнить';
				$voprosvar[$numvopros][1]='Вполне удобен';
				$voprosvar[$numvopros][2]='Неудобен. Есть значительные недоработки, хотелось бы внести дополнения/изменения (укажите какие) %%inputother%%';
					$voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=2 ; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
						
	//
	$numvopros=4;
			$vopros[$numvopros]='Пользуетесь ли Вы «Подбором туров» на сайте компании «МУЛЬТИТУР»?';
				$voprosvar[$numvopros][1]='Постоянно';
				$voprosvar[$numvopros][2]='Редко, но пользуюсь';
				$voprosvar[$numvopros][3]='Пользуюсь ценовыми таблицами';
				$voprosvar[$numvopros][4]='Не пользуюсь, потому что %%inputother%%';
					$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=4; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
	//

	$numvopros=5;
			$vopros[$numvopros]='Какими разделами сайта компании «МУЛЬТИТУР» Вы пользуетесь  для поиска туров чаще всего?';
				$voprosvar[$numvopros][1]='Подбор туров';
				$voprosvar[$numvopros][2]='Каталог отелей';
				$voprosvar[$numvopros][3]='Он-лайн бронирование';
					for ($i=1; $i<=3; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	$numvopros=6;
			$vopros[$numvopros]='Получаете ли Вы нашу регулярную Email рассылку, насколько она информативна для Вас и помогает ли в работе?';
				$voprosvar[$numvopros][1]='Получаем, очень помогает в работе';
				$voprosvar[$numvopros][2]='Получаем, но не всегда обращаем внимание';
				$voprosvar[$numvopros][3]='Не получаем, т.к. не пользуемся таким видом информации';
				$voprosvar[$numvopros][4]='Другое %%inputother%%';
					$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=4; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
	//

	$numvopros=7;
			$vopros[$numvopros]='Вебинары по каким направлениям вы бы хотели  прослушать в 2014 году?';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1); 
				
	$numvopros=8;
			$vopros[$numvopros]='Посещали ли Вы семинар-фуршет, проводимый компанией «Мультитур» в Вашем городе весной 2014 года? Укажите Ваши пожелания и замечания к данным мероприятиям в будущем году.
			<div class="clear"></div>
			<ul style="float:left">
				<li>Тверь</li>
				<li>Рязань</li>
				<li>Киров</li>
				<li>Ярославль</li>
				<li>Тула</li>
				<li>Брянск</li>
			</ul>
			<ul style="float:left">
				<li>Владимир</li>
				<li>Санкт-Петербург</li>
				<li>Мурманск</li>
				<li>Орел</li>
				<li>Великий Новгород</li>
				<li>Нижний Новгород</li>
			</ul>
			<ul style="float:left">
				<li>Екатеренбург</li>
				<li>Липецк</li>
				<li>Смоленск</li>
				<li>Краснодар</li>
				<li>Ростов-на-Дону</li>
			</ul><div class="clear"></div>';
				$voprosvar[$numvopros][1]='Посещали %%inputother%%';
				$voprosvar[$numvopros][2]='Не посещали, потому что %%inputother%%';
					$voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
					$voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=2; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);		
	//
	
			
	$numvopros=9;
			$vopros[$numvopros]='Какая информация на Ваш взгляд была бы интересна для Вас и других участников групп «ВКонтакте» и «Фэйсбук» компании «МУЛЬТИТУР» в соц.сетях?';
				$voprosvar[$numvopros][1]='Рассказы о достопримечательностях на родных курортах';
				$voprosvar[$numvopros][2]='Юмор: смешные фотографии, анекдоты, случаи из жизни тур.компании и т.п.';
				$voprosvar[$numvopros][3]='Интересные ссылки: что происходит в мире туризма';
				$voprosvar[$numvopros][4]='Фотоальбомы с фотографиями о родных курортах';
				$voprosvar[$numvopros][5]='Фотоальбомы с сотрудниками компании "МУЛЬТИТУР"';
				$voprosvar[$numvopros][6]='Фотоальбомы о жизни компании "МУЛЬТИТУР"';
				$voprosvar[$numvopros][7]='Видео о родных курортах';
				$voprosvar[$numvopros][8]='Акции в отелях, специальные предложения, горящие туры';
				$voprosvar[$numvopros][9]='Другое %%inputother%%';
				
				$voprosvarother[$numvopros][9]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=16; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);

	$numvopros=10;
			$vopros[$numvopros]='Как Вам наиболее удобно получать консультации кураторов компании «МУЛЬТИТУР»?';
				$voprosvar[$numvopros][1]='В Личном кабинете';
				$voprosvar[$numvopros][2]='По телефону';
				$voprosvar[$numvopros][3]='Консультируемся по icq';
				$voprosvar[$numvopros][4]='Используем в работе Skype';
				$voprosvar[$numvopros][5]='Общаемся только по электронной почте';
				$voprosvar[$numvopros][6]='Всю информацию видим на сайте';
				$voprosvar[$numvopros][7]='On-line переписка (чат)';
					for ($i=1; $i<=7; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	
	$numvopros=11;
			$vopros[$numvopros]='Насколько полезна для Вас информация размещенная в разделе Новости Личного кабинета и главной страницы нашего сайта?';
				$voprosvar[$numvopros][1]='Полезна, всегда следим за опубликованными новостями';
				$voprosvar[$numvopros][2]='Нет времени отслеживать новости';
				$voprosvar[$numvopros][3]='Бесполезна, потому что %%inputother%%';
				$voprosvar[$numvopros][4]='Другое %%inputother%%';
				
				$voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
				$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=4; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
						
	$numvopros=12;
			$vopros[$numvopros]='Участвуете ли вы в акции «Мультибонус»?';
				$voprosvar[$numvopros][1]='Участвуем';
				$voprosvar[$numvopros][2]='Не знали, что есть такая акция';
				$voprosvar[$numvopros][3]='Не участвуем, потому что %%inputother%%';
					$voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=3; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
						
	$numvopros=13;
			$vopros[$numvopros]='Участвуете ли вы в ежегодной традиционной для компании «МУЛЬТИТУР» акции «Раннее бронирование»? Влияет ли участие в данной акции на увеличение продаж Вашей компании?';
				$voprosvar[$numvopros][1]='Участвуем, повышенные скидки стимулируют наших клиентов на раннюю покупку летних туров';
				$voprosvar[$numvopros][2]='Участвуем только чтобы получить повышенное комиссионное вознаграждение, на увеличение продаж нашим клиентам летних туров акция не влияет';
				$voprosvar[$numvopros][3]='Не знали, что есть такая акция';
				$voprosvar[$numvopros][4]='Не участвуем, потому что %%inputother%%';
					$voprosvarother[$numvopros][4]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=4; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	$numvopros=14;
			$vopros[$numvopros]='Пользуетесь ли Вы списком долго подтверждаемых отелей, который мы публикуем в разделе Новости Личного кабинета? ';
				$voprosvar[$numvopros][1]='Нет, потому что %%inputother%%';
				$voprosvar[$numvopros][2]='Да, помогает сразу предупреждать туристов о долгом ожидании подтверждения';
				$voprosvar[$numvopros][3]='Другое %%inputother%%';
					$voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
					$voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=3; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
						
	$numvopros=15;
			$vopros[$numvopros]='Какие новые направления или объекты размещения Вы хотели бы увидеть в наших предложениях?';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
				
	$numvopros=16;
			$vopros[$numvopros]='Кого из сотрудников компании «МУЛЬТИТУР» Вы бы хотели особенно отметить с положительной или с отрицательной стороны и почему?';
				$voprosvar[$numvopros][1]='С отрицательной  %%inputother%%';
				$voprosvar[$numvopros][2]='С положительной %%inputother%%';
					$voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
					$voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=2; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	$numvopros=17;
			$vopros[$numvopros]='Укажите сильные стороны компании «МУЛЬТИТУР»';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
				
				
	$numvopros=18;
			$vopros[$numvopros]='Укажите слабые стороны компании компании «МУЛЬТИТУР»';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);

	$numvopros=19;
			$vopros[$numvopros]='Как в целом Вы оцениваете работу компании «МУЛЬТИТУР» в сезоне 2014 г.?';
				$voprosvar[$numvopros][1]='Отлично';
				$voprosvar[$numvopros][2]='Хорошо';
				$voprosvar[$numvopros][3]='Удовлетворительно (укажите почему) %%inputother%%';
					$voprosvarother[$numvopros][3]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=3; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
				
	$numvopros=20;
			$vopros[$numvopros]='С какими еще операторами Вы работаете по направлениям внутреннего туризма? (возможно несколько вариантов ответов)';
				$voprosvar[$numvopros][1]='Астравел';
				$voprosvar[$numvopros][2]='Дельфин';
				$voprosvar[$numvopros][3]='Звездный путь';
				$voprosvar[$numvopros][4]='Криптон';
				$voprosvar[$numvopros][5]='РВБ-Алеан';
				$voprosvar[$numvopros][6]='Роза ветров';
				$voprosvar[$numvopros][8]='Русский Экспресс';
				$voprosvar[$numvopros][9]='СНП';
				$voprosvar[$numvopros][10]='Солвекс';
				$voprosvar[$numvopros][11]='Интурист';
				$voprosvar[$numvopros][12]='7-тур';
				$voprosvar[$numvopros][13]='Кандагар';
				$voprosvar[$numvopros][15]='Орфей';
				$voprosvar[$numvopros][16]='Другие %%inputother%%';
					$voprosvarother[$numvopros][16]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=16; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'checkbox','value'=>$i,'valid'=>1);
	$numvopros=21;
			$vopros[$numvopros]='Пользуетесь ли Вы услугами каких-либо субагентств при бронировании туров компании «Мультитур» и других операторов? Если да, то назовите субагента и какую комиссию они Вам предоставляют';
				$voprosvar[$numvopros][1]='Нет %%inputother%%';
				$voprosvar[$numvopros][2]='Да %%inputother%%';
					$voprosvarother[$numvopros][1]=array('size'=>'20','type'=>'text','value'=>'');
					$voprosvarother[$numvopros][2]=array('size'=>'20','type'=>'text','value'=>'');
					for ($i=1; $i<=2; $i++) 
						$voprosvartype[$numvopros][$i]=array('type'=>'radio','value'=>$i,'valid'=>1);
	$numvopros=22;
			$vopros[$numvopros]='On-line бронирование какого оператора Вам кажется наиболее удобным (укажите почему)?';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'text','value'=>'','size'=>'70','valid'=>1);
						
	$numvopros=23;
			$vopros[$numvopros]='Если у Вас есть какие-то пожелания, вопросы или замечания укажите их: ';
				$voprosvar[$numvopros][1]='';
				$voprosvartype[$numvopros][1]=array('type'=>'textarea','value'=>'','size'=>'70');

			$res=array();
			$res['vopros']=$vopros;
			$res['voprosvar']=$voprosvar;
			$res['voprosvarother']=$voprosvarother;
			$res['voprosvartype']=$voprosvartype;
			return $res;
	}
	public function printvaucherAction()
    {
        $this->setCfgLayout('docxempty');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $usertype = $this->getusertypeinsession();
        if($usertype == 'manager')
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
            }
        $status=(int)$_SESSION['s_status'];
        $dgcode = (string)$this->_getParam('code','');
        $type=(int)$this->_getParam('type',0);
        
        if ($type!=1 && $type!=0) $type=0;
        //if ($boss===0) $type=0;
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        
        $userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
        else $alldogpriv = $userinfopriv['us_all_dog_priv'];
        if($alldogpriv==0 && $boss === 0) $type=0;
        
        if (($usertype=='manager' || $usertype=='admin' || $usertype=='meneger') && $uskey == 0) {
            $allbool = true;
        } else {
            $allbool = false;
        }
        $prkey=0;
        if (!$allbool) {
            if (!$uskey) {
                return $this->error(404);
                exit;
            }
            $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
            if (!$this->view->userinfo) {
                return $this->error(404);                
                exit;
            }
            $prkey=(int)$this->view->userinfo['US_PRKEY'];
        }
        
        $logintxt=$_SESSION['s_login'];
        //$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
        if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
            //Информация по договору
            $dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
            $dgkey=$dogovorinfo['DG_Key'];
            $dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];
            if (!$dogovorinfo) {
                return $this->error(404);                
                exit;
            }
            //Информация по агентству
            $dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
            
            if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger') {
                $partner_arr=$privateofficemodel->getpartnersbysuperuser($uskey);
                if ($dg_prkey!=$prkey && !in_array(array('key'=>$dg_prkey), $partner_arr)) {
                    return $this->error(404);                
                    exit;
                }  
                if ($boss===0 && $alldogpriv==0) {
                    if ($uskey!=$dupuserkey) {
                        return $this->error(404);                
                        exit;
                    }
                }
            }            
            
        } else {
            return $this->error(404);                
            exit;
        }
        
        
        $vauchers = $privateofficemodel->getdogovorvaucher($dgcode);

        $this->view->uskey=$uskey;
        $this->view->ustype=$usertype;
        $this->view->dgcode=$dgcode;
        $this->view->vauchers=$vauchers;
        $this->view->upload_path=$this->upload_path;
        
    }
	public function partnerpaylistAction()  {
		set_time_limit(0);
		ini_set("memory_limit","1024M");
		
		$this->authsecure();
		$uskey=$this->getuskeyinsession();
        $usertype = $this->getusertypeinsession();

		if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
			return $this->error(404);       
		} 
		
		$date=date('d.m.y');
		$date_from = $this->_getParam('date_from',$date);
		$date_to = $this->_getParam('date_to',$date);
		$partner_id = $this->_getParam('partner_id',0);
		$send_type = $this->_getParam('send_type',FALSE);
		$sort_field = $this->_getParam('sort_field', FALSE);
		$sort_direction = $this->_getParam('sort_direction', FALSE);
		$year = $this->_getParam('year',FALSE);
		
		$db_date_from = $this->getDbDate($date_from);
		$db_date_to = $this->getDbDate($date_to);
		
		$privateofficemodel = $this->getModel('Privateoffice');
		$CountriesModel = $this->getModel('Countries');
		$HotelsModel=$this->getModel('Hotels');
		$CitiesModel=$this->getModel('Cities');

		$list = array();

		$orderfield= 'bl_date';
		$ordertype='asc';

		$params = array();
		
		$params['date_from'] = $db_date_from;
		$params['date_to'] =   $db_date_to;
		
		if ($year){
			$params['year'] = $year;
		}
	
		$partner = array();
		if($partner_id){
			$params['partner_id'] = $partner_id;
			$partner = $privateofficemodel->getpartnerinfo($partner_id);
		}
		
		$list=$privateofficemodel->getpartnerpaylist($params,$orderfield,$ordertype);
		//print_r($list);exit();
		$applist = array();
		
		$sum_payed = 0;
		$sum_summa = 0;
		$sum_dg = 0;
		
		if($list){
			foreach($list as $row){
				if(!isset($applist[$row['BL_KEY']])){
					$applist[$row['BL_KEY']] = $row;
					$applist[$row['BL_KEY']]['dg_sum_pay'] = 0;
					$applist[$row['BL_KEY']]['dg'] = array();
					$sum_payed+=$row['BL_PAYED'];
					$sum_summa+=$row['BL_SUMMA'];
				}
				if($row['BD_DGCOD']){
					$applist[$row['BL_KEY']]['dg'][] = array('BD_DGCOD'=>$row['BD_DGCOD'], 'dg_sum'=>$row['dg_sum']);
					$applist[$row['BL_KEY']]['dg_sum_pay'] += $row['dg_sum'];
					$sum_dg += $row['dg_sum'];
				}
			}
			
			if($sort_field && $sort_direction){
				if ($sort_direction == 'ASC'){
					$applist = $this->array_orderby($applist, $sort_field, SORT_ASC);
				} 
				if ($sort_direction == 'DESC'){
					$applist = $this->array_orderby($applist, $sort_field, SORT_DESC);
				}
			}

		}

		$this->view->date_from = $date_from;
		$this->view->date_to = $date_to;
		$this->view->partner=$partner;
		$this->view->applist=$applist;
		$this->view->sum_payed=$sum_payed;
		$this->view->sum_summa=$sum_summa;
		$this->view->sum_dg=$sum_dg;
	}
	
	public function addpartnerpayreportAction(){
		
		$params = $_REQUEST;
		$type = $this->_getParam('report_type',3);
		$login = 'admin';
		$privateofficemodel=$this->getModel('Privateoffice');
		$report_id = $privateofficemodel->addreport($params, $type, $login);
		
		$json['report_id'] = FALSE;
		if ($report_id){
			$json['report_id'] = $report_id;
		}
		
		echo json_encode($json); exit();
		
	}
	
	
	
	public function menucuratordogovorAction() 
    {
        // $this->setCfgLayout('page');
        if (!isset($_SESSION)) {
            session_start();
        }
        $authbool=true;
        if (!isset($_SESSION['s_uskey'])) {
            return $this->clear();
        }

        $this->view->curatortitle = (string)$this->_getParam('curatortitle', 'Личный кабинет');
        $this->view->show_question = (int)$this->_getParam('show_question', 1);
		
		
		
		
        //if($this->view->curatortitle=='&nbsp'){ echo $this->view->show_question ;exit;};
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss=$this->getbossinsession();
        $status=$_SESSION['s_status'];
        // zend_debug::dump($_SESSION);
        // echo '$boss = '.$boss.'<br>';
        //$uskey = (int)$this->_getParam('uskey',0);
        // echo 'test1';
        // exit;
        $type=(int)$this->_getParam('type',0);
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        if (!$uskey) {
            // return $this->error(404);
            return '';
            exit;
        }
        $privateofficemodel=$this->getModel('Privateoffice');
        //$page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        //Zend_Registry::set('page_actives', $page_actives);
//        $this->setView('userinfo');        
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            // return $this->error(404);                
            return '';                
            exit;
        }
        $prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];
        // zend_debug::dump($this->view->userinfo); exit;
        $this->view->agentinfo=$privateofficemodel->getagentinfo($prkey);    
        if (isset($this->view->agentinfo['PR_OWNER'])) {
            $owner=$this->view->agentinfo['PR_OWNER'];
        } else {
            $owner=0;
        }
        $messnotread=$privateofficemodel->getmessnotreadbyusid($usid);
        $this->view->messnotread=$messnotread;
        $curatorsmodel = $this->getModel('Curators');
        //$curatortext=$curatorsmodel->getcuratortext($owner);
        //if($owner) $this->view->curatorlistmsk=$curatorsmodel->getcuratorlistbyownerreg($owner,0);
        
		$this->view->curatorlistmsk=$curatorsmodel->getcuratorlistbyownerreg($owner,0);//zend_debug::dump($this->view->agentinfo);exit;
        $this->view->curatorlistreg=$curatorsmodel->getcuratorlistbyownerreg($owner,1);
		
        //if($owner) $this->view->curatorlistreg=$curatorsmodel->getcuratorlistbyownerreg($owner,1);
        if($owner) $curatorlist=$curatorsmodel->getcuratorlistbyowner($owner);
        else $curatorlist=array();
        // if ($curatortext) {
            // if (isset($curatortext['text'])) {
                // $htmltext=$curatortext['text'];
            // } else {
                // $htmltext='';
            // }
        // } else {
            // $htmltext='';
        // }
        // echo '$owner = '.$owner.'<br>';
        // zend_debug::dump($htmltext);
        $this->view->curatorlist=$curatorlist;
		if (Zend_Registry::isRegistered('page_actives')) {
            $page_actives = Zend_Registry::get('page_actives');
        } else {
            $page_actives = Array();
        }
		$this->view->page_actives = $page_actives;
        $this->view->params = $this->_getAllParams();
        // $this->view->htmltext=$htmltext;
        // exit;
    }
	
	public function transferlistAction(){
		
		$date=date('d.m.y');
		$params  = array();
		$results = array();
		
		$date_from_transfer  = $this->_getParam('date_from_transfer',$date);
		$date_to_transfer 	 = $this->_getParam('date_to_transfer',$date);
		
		$date_from_tour 	 = $this->_getParam('date_from_tour',$date);
		$date_to_tour 	 	 = $this->_getParam('date_to_tour',$date);
		
		$date_from2   = $this->_getParam('date_from2',$date);
		$date_to2 	  = $this->_getParam('date_to2',$date);
        
		$country_id   =(int)$this->_getParam('country_id',0);
		$hotel_id 	  =(int)$this->_getParam('hotel_id',0);
 		$city_id 	  =(int)$this->_getParam('city_id',0);
		$partner_id   =(int)$this->_getParam('partner_id',0);
		$transport_id =(int)$this->_getParam('transport_id',0);
		
		$place_id =(int)$this->_getParam('place_id',0);
		
		/*Создадим массив значний для поиска*/
		$arr['country_id']	= $country_id ? $country_id : '';
		$arr['hotel_id']	= $hotel_id	  ? $hotel_id	: '';
		$arr['city_id']		= $city_id    ? $city_id    : '';		
		
		
		
		$arr['date_from_transfer']	= $date_from_transfer ? $this->getDbDate($date_from_transfer) : '';
		$arr['date_to_transfer']	= $date_to_transfer ? $this->getDbDate($date_to_transfer) : '';
		
		
		$arr['date_from_tour']	= $date_from_tour ? $this->getDbDate($date_from_tour) : '';
		$arr['date_to_tour']	= $date_to_tour ? $this->getDbDate($date_to_tour) : '';
		
		$arr['partner_id']		= $partner_id ? $partner_id : '';
		$arr['place_id']		= $place_id  ? $place_id    : '';

		$CountriesModel		= $this->getModel('Countries');
        $HotelsModel		= $this->getModel('Hotels');
		$CitiesModel		= $this->getModel('Cities');
		$privateofficemodel = $this->getModel('Privateoffice');

		$countries=$CountriesModel->getlist(array('vis'=>1));
		
		if ($country_id){
			$cities=$CitiesModel->getcityByCountryId($country_id);
		} else {
			$cities = array();
		}
		if ($city_id){
			$params['city_id'] = $city_id;
			$hotels=$privateofficemodel->gethoteldictionaryByCityId($city_id); 		
		}
		if (empty($city_id) || empty($country_id)){
			$params['transport_id'] = 0;
			$transport_id = 0;
		}
		if ($hotel_id){
			$params['hotel_id'] = $hotel_id;		
		}
		if ($place_id){
			$params['place_id'] = $place_id;		
		}
		if ($partner_id){
			$params['partner_id'] = $partner_id;
		}
		if ($transport_id){
			$params['transport_id'] = $transport_id;
			
		}
		$arr['transport_id'] = $transport_id  ? $transport_id  : '';	
		$places = $privateofficemodel->getTransferLogistics($city_id,$transport_id);
		if ($transport_id && empty($place_id)){
			$arr['place_id']='';
			$arr['place_id'] = $places;
		}
		$this->view->partnerlist=$privateofficemodel->getPartnerList($arr);
		$this->view->partner_id=$partner_id;
		
		$this->view->transport_id=$transport_id;
		
		
		$this->view->date_from_transfer=$date_from_transfer;
		$this->view->date_to_transfer=$date_to_transfer;
		

		$this->view->date_from_tour=$date_from_tour;
		$this->view->date_to_tour=$date_to_tour;
		

		$this->view->results = $privateofficemodel->getResultTransferResearch($arr);
		$this->view->country_id=$country_id;
		$this->view->countries=$countries;
		
		$this->view->places=$places;
		$this->view->place_id=$place_id;
		
		$this->view->hotel_id=$hotel_id;
		$this->view->hotels=$hotels;
		
		$this->view->city_id=$city_id;
		$this->view->cities=$cities;
	}
	
	public function transferlistprintAction(){
		
		 $this->setCfgLayout('empty');
        $this->authsecure();
	
	}
	public function avialistAction()  {
	
		$date=date('d.m.y');
		$date_from1 = $this->_getParam('date_from1',$date);
		$date_to1 = $this->_getParam('date_to1',$date);
		$date1 = $this->_getParam('date1','dl_datebeg');
		$status = $this->_getParam('status',2);
		$date_from2 = $this->_getParam('date_from2',$date);
		$date_to2 = $this->_getParam('date_to2',$date);
        $country_id =(int)$this->_getParam('country_id',0);
		$resort_id =(int)$this->_getParam('resort_id',0);
		$city_id =(int)$this->_getParam('city_id',0);
		$app_all =(int)$this->_getParam('app_all',1);
		$app_id = $this->_getParam('app_id',array());
		$partner_all =(int)$this->_getParam('partner_all',0);
		$partner_id = $this->_getParam('partner_id',array());
		$partner_search = $this->_getParam('partner_search','');
		$active_tab = $this->_getParam('active_tab','#tab-1');
		$netto = $this->_getParam('netto',0);
		$brutto = $this->_getParam('brutto',0);
		$profit = $this->_getParam('profit',0);
		$netto_partner = $this->_getParam('netto_partner',0);
		$bottom_show = $this->_getParam('bottom_show',0);
		$cur = $this->_getParam('cur','rub');
		$tpl = $this->_getParam('tpl',1);
		$year = $this->_getParam('year',FALSE);

		if (!$_REQUEST){
			$netto = 0;
			$brutto = 0;
			$profit = 0;
			$netto_partner = 0;
		}
		
		$CountriesModel=$this->getModel('Countries');
        $HotelsModel=$this->getModel('Hotels');
		$CitiesModel=$this->getModel('Cities');
		$privateofficemodel=$this->getModel('Privateoffice');
		
		$countries=$CountriesModel->getlist(array('vis'=>1));
		
		if ($country_id){
			$resorts=$HotelsModel->resortlist($country_id);
		} else {
			$resorts = array();
		}
		
		if ($country_id == '460'){
			$cities = $CitiesModel->get4Country($country_id);
		} elseif($country_id && $resort_id) {
			$cities = $CitiesModel->get4Country($country_id,'all',array('0'=>$resort_id));
		} else {
			$cities = array();
		}

		$orderfield= 'crdate';
		$ordertype='desc';
		$params = array();
		if ($city_id){
			$params['city_id'] = $city_id;
		}
		
		if ($year){
			$params['year'] = $year;
		}
		
		if ($status==1 || $status==2){
			$db_date_from1 = $this->getDbDate($date_from1);
			$db_date_to1 = $this->getDbDate($date_to1);
			$params['statusok'] = 1;
			if($status==2){
				$params['statusok'] = 2;
			}
			switch($date1){
				case 'dl_datebeg':
					$params['dl_datebeg_from'] = $db_date_from1;
					$params['dl_datebeg_to'] = $db_date_to1;
					break;
				case 'dg_crdate':
					$params['dg_crdate_from'] = $db_date_from1;
					$params['dg_crdate_to'] = $db_date_to1;
					break;
				case 'dg_turdateend':
					$params['dg_turdateend_from'] = $db_date_from1;
					$params['dg_turdateend_to'] = $db_date_to1;
					break;
				case 'dl_dateend':
					$params['dl_dateend_from'] = $db_date_from1;
					$params['dl_dateend_to'] = $db_date_to1;
					break;
				case 'all_date1':
					$params['dl_datebeg_from'] = $db_date_from1;
					$params['dl_datebeg_to'] = $db_date_to1;
					$params['dg_crdate_from'] = $db_date_from1;
					$params['dg_crdate_to'] = $db_date_to1;
					$params['dg_turdateend_from'] = $db_date_from1;
					$params['dg_turdateend_to'] = $db_date_to1;
					$params['dl_dateend_from'] = $db_date_from1;
					$params['dl_dateend_to'] = $db_date_to1;
					break;
			}
		} else {
			$db_date_from2 = $this->getDbDate($date_from2);
			$db_date_to2 = $this->getDbDate($date_to2);
			$params['dg_crdate_from'] = $db_date_from2;
			$params['dg_crdate_to'] = $db_date_to2;
			$params['statusnull'] = 1;
		}
		$params['svkey'] = 1;
		
		$list = array();
		if ($cities && array_key_exists($city_id, $cities)) {
			$list=$privateofficemodel->getappavialist($params,$orderfield,$ordertype);
		}
		
		$applist = array();
		$partnerlist = array();
		if ($list){
			foreach($list as $row){
				if (!array_key_exists($row['PR_KEY'], $partnerlist)){
					$partnerlist[$row['PR_KEY']] = $row['PR_NAME'];
				}
				if (!array_key_exists($row['DG_CODE'], $applist)){
					if (!$partner_id){
						$applist[$row['DG_CODE']] = $row['DG_CODE'];
					} else {
						if (in_array($row['PR_KEY'], $partner_id)){
							$applist[$row['DG_CODE']] = $row['DG_CODE'];
						}
					}
				}
			}
		}
		
		//print_r($partnerlist);exit();
		$this->view->date_from1=$date_from1;
		$this->view->date_to1=$date_to1;
		$this->view->date1=$date1;
		$this->view->date_from2=$date_from2;
		$this->view->date_to2=$date_to2;
		$this->view->status=$status;
		$this->view->country_id=$country_id;
		$this->view->countries=$countries;
		$this->view->resort_id=$resort_id;
		$this->view->resorts=$resorts;
		$this->view->city_id=$city_id;
		$this->view->cities=$cities;
		$this->view->partnerlist=$partnerlist;
		$this->view->partner_all=$partner_all;
		$this->view->partner_id=$partner_id;
		$this->view->partner_search=$partner_search;
		$this->view->applist=$applist;
		$this->view->app_id=$app_id;
		$this->view->app_all=$app_all;
		$this->view->active_tab = $active_tab;
		$this->view->netto = $netto;
		$this->view->brutto = $brutto;
		$this->view->profit = $profit;
		$this->view->netto_partner = $netto_partner;
		$this->view->bottom_show = $bottom_show;
		$this->view->cur = $cur;
		$this->view->tpl = $tpl;
		$this->view->year = $year;
	}
	
	public function printavialistAction(){
		
		set_time_limit(0);

		$privateofficemodel=$this->getModel('Privateoffice');
		
		$this->setCfgLayout('empty');
		
		$dg_code = $this->_getParam('code',0);

		$cur = 'rub';
		
		$orderfield= 'crdate';
		$ordertype='desc';
		$params = array();
		$fields = array('cur'=>$cur);
		$data = array();
		$partner = array();
		$partner_fax = array();
		if ($dg_code){
			
			$file_name = $dg_code.'_avialist.xlsx';

			$turists = $privateofficemodel->getturistbydg($dg_code);
			
			$params['dg_code'] = $dg_code;
			$list=$privateofficemodel->getavialist($params,$orderfield,$ordertype);
			
			if ($list){
				
				foreach ($list as $row){
					if (!array_key_exists($row['PR_KEY'], $partner)){
						$partner[$row['PR_KEY']]  = $row['PR_FULLNAME'];
						$partner_arr[$row['PR_KEY']] = array(
							'PR_FULLNAME' => $row['PR_FULLNAME'],
							'PR_BOSSNAME' => $row['PR_BOSSNAME'],
							'PR_BOSS' => $row['PR_BOSS']
						);
					}
					if (!array_key_exists($row['PR_KEY'], $partner_fax)){
						$partner_fax[$row['PR_KEY']]  = $row['PR_FAX'];
					}

					$data[$row['DL_KEY']]['DG_CODE'] = $row['DG_CODE'];
					$data[$row['DL_KEY']]['DL_DATEBEG'] = date("d.m.Y", strtotime($row['DL_DATEBEG']));
					$data[$row['DL_KEY']]['DL_DATEEND'] = date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
					$data[$row['DL_KEY']]['days'] = (string)$row['DL_NDAYS'].'/'.(string)($row['DL_NDAYS']+1);
					$data[$row['DL_KEY']]['DL_NMEN'] = $row['DL_NMEN'];
					if (isset($turists[$row['DL_KEY']])){
						$data[$row['DL_KEY']]['turists'] = $turists[$row['DL_KEY']];
					}

					$netto_val = $row['DL_COST'];
					$netto_partner_val = $row['DL_PAYED'];
					$brutto_val = $row['DL_BRUTTO'];
					$cur_format = $row['RA_FORMAT'];
					if ($row['CS_RATE'] != $row['RA_CODE'] && $row['CR_COURSE'] && $cur!='rub'){
						$netto_val = $netto_val/$row['CR_COURSE'];
						$netto_partner_val = $netto_partner_val/$row['CR_COURSE'];
						$brutto_val = $brutto_val/$row['CR_COURSE'];
						$cur_format = $row['CS_RATE'];
					}
					$data[$row['DL_KEY']]['netto_val'] = round($netto_val,2);
					$data[$row['DL_KEY']]['netto_partner_val'] = round($netto_partner_val,2);
					$data[$row['DL_KEY']]['brutto_val'] = round($brutto_val,2);
					$data[$row['DL_KEY']]['cur_format'] = $cur_format;
					$data[$row['DL_KEY']]['CS_RATE'] = $row['CS_RATE'];
					$data[$row['DL_KEY']]['RA_CODE'] = $row['RA_CODE'];
					$data[$row['DL_KEY']]['CR_COURSE'] = $row['CR_COURSE'];
					$data[$row['DL_KEY']]['TL_NAME'] = $row['TL_NAME'];
					$data[$row['DL_KEY']]['city_from'] = $row['city_from'];
					$data[$row['DL_KEY']]['city_to'] = $row['city_to'];
					$data[$row['DL_KEY']]['CH_AIRLINECODE'] = $row['CH_AIRLINECODE'];
					$data[$row['DL_KEY']]['CH_FLIGHT'] = $row['CH_FLIGHT'];
					$data[$row['DL_KEY']]['AS_NAMERUS'] = $row['AS_NAMERUS'];
				}

			}
		} 
		
		$bottom['is_bottom'] = FALSE;
		$bottom['bottom_show'] = FALSE;
		$bottom['payed'] = 0;
		/*if(count($partner) == 1) {
			$bottom['is_bottom'] = TRUE;
			$partner_id = key($partner);
			$bottom['payed']  = getPayed($partner_id);
			$bottom['partner'] = $partner_arr[$partner_id];
		}*/
		
		$this->view->data=$data;
		$this->view->fields=$fields;
		$this->view->partner=$partner;
		$this->view->partner_fax=$partner_fax;
		$this->view->cur=$cur;
		$this->view->file_name=$file_name;
		$this->view->bottom=$bottom;
		
	}
	
	public function getagentlegalAction(){
		
		session_start();
		$this->clear();
		
		if (!isset($_SESSION['s_uskey'])) {
			return false;
		}
		
		$uskey=$this->getuskeyinsession();
		
		$privateofficemodel=$this->getModel('Privateoffice');
		$citiesmodel = $this->getModel('Cities');
		
		$userinfo=$privateofficemodel->getuserinfo($uskey);
		
		$result = FALSE;
		if($userinfo){
			$agentinfo=$privateofficemodel->getagentinfo($userinfo['US_PRKEY']);
			$city_legal = $citiesmodel->getcitybyid($agentinfo['PR_CTKEY']);
			$result=$city_legal['legal_id'];
		}
		
		echo $result;
		
	}
	
	public function printrequestmtrkAction() 
	{
	$dgcode = (string)$this->_getParam('code','');
	$type=(int)$this->_getParam('type',0);


			$this->setCfgLayout('docxempty');
			$this->authsecure();
			$uskey=$this->getuskeyinsession();
			$boss=$this->getbossinsession();
			$status=(int)$_SESSION['s_status'];
			
			
			
			
			$usertype = $this->getusertypeinsession();
			if ($type!=1 && $type!=0) $type=0;
			//if ($boss===0) $type=0;
			if ($dgcode=='') {
				return $this->error(404);
				exit;
			}

			$privateofficemodel=$this->getModel('Privateoffice');
			
			
			
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
			if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
			else $alldogpriv = $userinfopriv['us_all_dog_priv'];
			if($alldogpriv==0 && $boss === 0) $type=0;
			
			if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
				$allbool = true;
			} else {
				$allbool = false;
			}
			$prkey=0;
			
			
			
			if (!$allbool) {
				if (!$uskey) {
					return $this->error(404);
					exit;
				}
				$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
				if (!$this->view->userinfo) {
					return $this->error(404);                
					exit;
				}
				$prkey=(int)$this->view->userinfo['US_PRKEY'];
			}
			
			$logintxt=$_SESSION['s_login'];
			if($usertype == 'meneger'){
					preg_match('/^meneger_(.*)$/', $logintxt, $matches);
					// zend_debug::dump($matches);
					// exit;
					$logintxt = $matches[1];
				}
			$creator = $privateofficemodel->getmenegerbylogin($logintxt);
			if ($creator){
				$logintxt = $creator[0]['cur_fio'];
			}
			
			
			
			//$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
				
			
				//Информация по договору
				$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
				$dgkey=$dogovorinfo['DG_Key'];
				
				$dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


			
				if (!$dogovorinfo) {
					return $this->error(404);                
					exit;
				}


				
				//Информация по агентству
				$dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
				
				$status=(int)$_SESSION['s_status'];
				if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
					if ($dg_prkey!=$prkey) {
						return $this->error(404);                
						exit;
					}
					if ($boss===0 && $alldogpriv==0) {
						if ($uskey!=$dupuserkey) {
							return $this->error(404);                
							exit;
						}
					}
				}            
				
			
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
				if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
				else $prbossname='';
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
				
				$dognumview='';
				$dogdateview='';
				$daydog='';
				$mondogtxt='';
				$yeardog='';
				if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
				if (isset($anegtdoginfo['PD_DateBeg'])) {
					$daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
					$yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondogtxt='';
					$mondog=(int)$mondog;
					$mondogtxt=$this->getmontxt($mondog);
				
				}
				
				
				$pr_fullname=$agentinfo['PR_FULLNAME'];
				$agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
				$pr_phones=$agentinfo['PR_PHONES'];
				$pr_fax=$agentinfo['PR_FAX'];
				$pr_email=$agentinfo['PR_EMAIL'];
				
				//Дата бронирования
				$crdate=$dogovorinfo['DG_CRDATE'];
				$crdate=date("d.m.Y", strtotime($crdate));
				
				//Информация по стране
				$countryid=(int)$dogovorinfo['DG_CNKEY'];
				$countriesmodel = $this->getModel('Countries');
				$country=$countriesmodel->getcountrybyid($countryid);
				if (isset($country['Name'])) {
					$countryname=$country['Name'];
				} else {
					$countryname='';
				}
				
				//Информация по городу
				$cityid=(int)$dogovorinfo['DG_CTKEY'];
				$citiesmodel = $this->getModel('Cities');
				$city=$citiesmodel->getcitybyid($cityid);
				if (isset($city['Name'])) {
					$cityname=$city['Name'];
				} else {
					$cityname='';
				}

				//Информация по туру
				$turname=$dogovorinfo['turname'];
				// zend_debug::dump($dogovorinfo);
				// exit;
				//Список туристов
				$dgkey=$dogovorinfo['DG_Key'];
				$turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
				function stday($day) {
					$daytext='';
					if ($day<21) {
						if ($day==1) $daytext='день';
						else if ($day>=2 && $day<=4) $daytext='дня';
						else if ($day>=5 && $day<=20) $daytext='дней';
					} else {
						$dayost=$day%10;
						if ($dayost==1) $daytext='день';
						else if ($dayost>=2 && $dayost<=4) $daytext='дня';
						else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
					}
					return $daytext;
				}

				//Функция извлечения времени без секунд, из datetime
				function gettimetosqldate($date) {
					$date_arr=explode(' ',$date);
					if (count($date_arr)==2) {
						$date=$date_arr[1];
						$date_arr=explode(':',$date);
						if (count($date_arr)==3) {
							$date=$date_arr[0].':'.$date_arr[1];
						} else {
							$date='';
						}
					} else {
						$date='';
					}
					return $date;
				}
				
			  
	// Партнёры поставщики услуг

	$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

	$pri = 0;
	$partnersview = array();

	foreach($dlpartners as $prkey=> $prrow)
	{            
	$patnerline = array();
			$dlpartner = $prrow['DL_PARTNERKEY'];
				
				$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
				
				$patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
				$patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
				$patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
				$patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
				$patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
				$patnerline['pr_key']=$dlpartner;

				//Таблица с проживаниями
				//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
				$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				
				
				
				
				$hotellistview=array();
				$i=0;
				$hotelstxt='';
				$datebegintxt='';
				$datebeginint=0;
				$dateendtxt='';
				$dateendint=0;
				$roomstxt='';
				$pansiontxt='';
				$turists =  array();
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $key=>$row) {
						if ($row['DL_SVKEY']=='3') {
							$i++;
							
							//Номер
							$hotellistview[$i]['num']=$i;
							//Город 
							$cityid=$row['DL_CTKEY'];
							$city=$citiesmodel->getcitybyid($cityid);
							$cityname='';
							if (is_array($city)) {
								if (isset($city['Name'])) {
									$cityname=$city['Name'];
								}
							}
							$hotellistview[$i]['cityname']=$cityname;
							//Отель
							$hotelkey=(int)$row['DL_CODE'];
							$hotelname='';
							$hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
							
							if (is_array($hoteldictionary)) {
								if (isset($hoteldictionary['HD_NAME'])) {
									$hotelname=$hoteldictionary['HD_NAME'];
								}
								if (isset($hoteldictionary['HD_STARS'])) {
									if (strlen($hoteldictionary['HD_STARS'])>0) {
										$hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
									}
								}
							}
							if (strlen($hotelstxt)>0) $hotelstxt.='; ';
							$hotelstxt.=$hotelname;
							if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

							$hotellistview[$i]['hotelname']=$hotelname;
							//номер
							$subcode1=(int)$row['DL_SUBCODE1'];
							$roomname='';
							if ($subcode1>0) {
								$room=$privateofficemodel->getroom($subcode1);
								if (is_array($room)) {
									$roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
									$accmdkey=(int)$room['AccmdMenTypeKey'];
									$accmd=$privateofficemodel->getaccmd($accmdkey);
									if (is_array($accmd)) {
										$roomname.=', '.trim($accmd['Code']);
									}
								}
							}
							if (strlen($roomstxt)>0) $roomstxt.='; ';
							$roomstxt.=$roomname;
							$hotellistview[$i]['roomname']=$roomname;
							//питание
							$subcode2=(int)$row['DL_SUBCODE2'];
							$pansionname='';
							if ($subcode2>0) {
								$pansion=$privateofficemodel->getpansion($subcode2);
								if (is_array($pansion)) {
									$pansionname=$pansion['Code'].' '.$pansion['Name'];
								}
							}
							if (strlen($pansiontxt)>0) $pansiontxt.='; ';
							$pansiontxt.=$pansionname;
							$hotellistview[$i]['pansionname']=$pansionname;
							//Дата заезда
							$datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
							$datebegininttemp=strtotime($row['DL_DATEBEG']);
							// echo $datebegininttemp.'<br>';
							if ($datebeginint>$datebegininttemp || $datebeginint==0) {
								$datebeginint=$datebegininttemp;
								$datebegintxt=date("d.m.Y", $datebegininttemp);
							}
							$hotellistview[$i]['datebegin']=$datebegin;
							//Дата выезда
							$dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
							$dateendinttemp=strtotime($row['DL_DATEEND']);
							if ($dateendint<$dateendinttemp || $dateendint==0) {
								$dateendint=$dateendinttemp;
								$dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
							}
							
							$hotellistview[$i]['dateend']=$dateend;
							//Кол-во ночей
							$ndays=(int)$row['DL_NDAYS'];
							$ndaystxt=$ndays.'/'.($ndays+1);
							$hotellistview[$i]['days']=$ndaystxt;
							
							// Туристы по услуге 
							
							$dlkey=$row['DL_KEY'];
							$turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
							
							$turlistview=array();
				foreach ($turlist as $key=>$row) {
					$fio=$row['TU_NAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_FNAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_SNAMERUS'];
					$turlistview[$key]['fio']=$fio;
					
					if ($row['TU_RealSex']=='0') $sex='М';
					else $sex='Ж';
					$turlistview[$key]['sex']=$sex;
					
					$pasport=$row['TU_PASPORTTYPE'];
					if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
					$pasport.=$row['TU_PASPORTNUM'];
					$turlistview[$key]['pasport']=$pasport;
					
					$birthday='';
					if (strlen($row['TU_BIRTHDAY'])>0) {
						$birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
					}
					$turlistview[$key]['birthday']=$birthday;
					// echo $birthday;
					
					
				}
							
							
							$hotellistview[$i]['turists']= $turlistview;
							
						}
						
						
					}
				}       
		$patnerline['hotelistview'] = $hotellistview;
		
	$partnersview[$pri] = $patnerline;
	$pri++;	

	} /// Конец списка партнеров поставщиков			

				//Расчетный час
				$rastcode=0;
				$rasttxt='';
				
				$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1112') {
							// zend_debug::dump($row);
							$rastcode=(int)$row['DL_CODE'];
							if ($rastcode>0) {
								$rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
								// zend_debug::dump($rast);
								if (is_array($rast)) {
									if (isset($rast['SL_NAME'])) {
										if (strlen($rasttxt)>0) $rasttxt.=', ';
										$rasttxt.=$rast['SL_NAME'];
									}
								}
							}
						}
					}
				}

				if (strlen($rasttxt)==0) $rasttxt='Нет';
	 ///////////////////////
	 //Дополнительные услуги
				$dopcode=0;
				$doptxt='';
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1032') {
							// zend_debug::dump($row);
							$dopcode=(int)$row['DL_CODE'];
							if ($dopcode>0) {
								$dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
								if (is_array($dop)) {
									if (isset($dop['SL_NAME'])) {
										if (strlen($doptxt)>0) $doptxt.=', ';
										$doptxt.=$dop['SL_NAME'];
									}
								}
							}
						}
					}
				}  
				if (strlen($doptxt)==0) $doptxt='Нет';
	
		 }       
			$this->view->dgcode=$dgcode;
			//$this->view->crdate=$crdate;
			$this->view->crdate=date('d.m.Y');;
		   
			$this->view->countryname=$countryname;
			$this->view->cityname=$cityname;
			$this->view->turname=$turname;
			
			
			$this->view->partnersview = $partnersview;

			$this->view->rasttxt=$rasttxt;
			$this->view->logintxt=$logintxt;
			
			$this->view->datebegintxt=$datebegintxt;
			$this->view->dateendtxt=$dateendtxt;
			$this->view->roomstxt=$roomstxt;
			$this->view->pansiontxt=$pansiontxt;
			
			$this->view->doptxt = $doptxt;
			$this->view->daydog=$daydog;
			$this->view->mondogtxt=$mondogtxt;
			$this->view->yeardog=$yeardog;
			
			$this->view->dognumview=$dognumview;

			$this->view->prbossname=$prbossname;
			
			
			$filename = 'request' .$dgcode. '.doc';
			$this->view->filename=$filename;
			if (!headers_sent()) {
				header("Content-Type: application/msword");
				header('Content-Disposition: attachment; filename="'.$filename.'"');
			}

	}
	
	
	
	public function adminmessarchiveAction()
    {
        if (!function_exists('getmicrotime')) {
            function getmicrotime() {
               list($usec, $sec)=explode(" ", microtime()); 
               return ((float)$usec + (float)$sec); 
            } 
        }
        $time_start=getmicrotime();
	$privateofficemodel=$this->getModel('Privateoffice');
	$page =  (int) $this->_getParam('page', 1);
	$kol = (int) $this->_getParam('kol', 30);
	$gcur_id = (int) $this->_getParam('cur_id', -1);
	
	$agent = '';
	
	$vtype = 'all';
	
	
	
	
	
	
	$prkey =  (int) $this->_getParam('prkey', 0);
	if($prkey)
	{
		$ag = $privateofficemodel->getagentinfo($prkey);
		if($ag) $agent = $ag['PR_NAME'];
		else $prkey = 0;
	}

	
	$manager =  '';
	$usid =  (int) $this->_getParam('usid', 0);
	if($usid)
	{
		$us = $privateofficemodel->getuserinfo($usid);
		if($us) $manager = $us['US_FULLNAME'];
		else $usid = 0;
	}
	
	
	$crdate = (string)$this->_getParam('crdate', '');
	$crdated = 0;
	
        if (!preg_match("/^[0-9]{2}.[0-9]{2}.[0-9]{4}$/", $crdate)) {
            $crdate = '';
        }
        if (strlen($crdate) > 0) {
            $crdate_arr = explode('.', $crdate);
            if (sizeof($crdate_arr) != 3) $crdate = '';
            else {
                $day = (int)$crdate_arr[0];
                $mon = (int)$crdate_arr[1];
                $year = (int)$crdate_arr[2];
                if (!checkdate ($mon, $day, $year)) $crdate = '';
				if(strlen($crdate)>0)
				{
				$crdated =  mktime(0,0,0,$mon,$day,$year);
				}
            }
        }
	
	
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status=$_SESSION['s_status'];
        $uskey=$_SESSION['s_uskey'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager' && $usertype!='meneger') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
		if($usertype == 'meneger') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^meneger_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $managermodel = $this->getModel('Managers');
                $managerinfo=$managermodel->getmanagerbylogin($uslogin);
                $men_id=$managerinfo['manag_usid'];
				if($gcur_id == -1) $gcur_id = $cur_id;
            }
        } elseif($usertype == 'manager') {
            if (isset($_SESSION['s_login'])) {
                preg_match('/^manager_(.*)$/', $_SESSION['s_login'], $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $cur_id=$curatorinfo['cur_usid'];
				if($gcur_id == -1) $gcur_id = $cur_id;
            }
        } elseif($usertype=='admin'  && $gcur_id != -1 ) $cur_id=$gcur_id; elseif
		($usertype=='admin'  && $gcur_id == -1 )  $gcur_id = 0;
        else $gcur_id=$uskey;
        
		
	
        // $messnotread=$privateofficemodel->getmessnotreadbyusid('admin');
        // $messnotreaduser=$privateofficemodel->getmessnotreadbyusiduser('admin');
        $curatorsmodel = $this->getModel('Curators');
        $curatorlist = $curatorsmodel->getcuratorlist();
		
		
		
        
		$groupmesslist=$privateofficemodel->getgroupmessadm($gcur_id, $kol, $page, $prkey, $usid, $crdated,'archive');
		
		$curator = array();
		if($gcur_id){
			$curator=$curatorsmodel->getcurator($gcur_id);
		}
		$this->view->curator=$curator;
		$this->view->count = $groupmesslist['count'];
        $this->view->cur_id=$gcur_id;
        $this->view->groupmesslist=$groupmesslist['data'];
		$this->view->page = $page;
        $this->view->kol = $kol;
        $this->view->curatorlist=$curatorlist;
		
		
	$this->view->vtype = $vtype;
	$this->view->agent = $agent;
	$this->view->prkey = $prkey;
	$this->view->manager = $manager;
	$this->view->usid = $usid;
	$this->view->crdate = $crdate;
	$time_end=getmicrotime();
	//zend_debug::dump($time_end-$time_start);
    }      
                
public function adminmessdetailarchiveAction()
    {
	$crdate = 	(string)$this->_getParam('crdate','');
	if($crdate)
		{
		$crdate = strtotime($crdate);
		if($crdate) 
			{
				
				$crdate = date('d.m.Y',$crdate);
			}  else $crdate = '';
		
		}
	$filter = array(
	'crdate' => $crdate,
	'subject' => (string)$this->_getParam('subject',''),
	'dgcode' => (string)$this->_getParam('dgcode',''),
	'msgtxt' => (string)$this->_getParam('msgtxt','')
	);	
	
		
	$sadmin = false;
	$sendername = 'Администратор';
        $this->setCfgLayout('full_admin');
        $this->authsecure();
        $status = $_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($usertype!='admin' && $usertype!='manager' && $usertype!='meneger') {
            session_destroy();
            return $this->error(404);                
            exit;
        }
        $uslogin = $_SESSION['s_login'];
        $privateofficemodel = $this->getModel('Privateoffice');
		if($usertype == 'meneger')
        {    
            if (isset($uslogin)) {
                preg_match('/^meneger_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $managermodel = $this->getModel('Managers');
                $managerinfo=$managermodel->getmanagerbylogin($uslogin);
                $uskey = $managerinfo['manag_usid'];
				$sendername = $managerinfo['cur_fio_position'];
				
				
            }
        } elseif($usertype == 'manager')
        {    
            if (isset($uslogin)) {
                preg_match('/^manager_(.*)$/', $uslogin, $matches);
                $uslogin=$matches[1];
                $curatorsmodel = $this->getModel('Curators');
                $curatorinfo=$curatorsmodel->getcuratorbylogin($uslogin);
                $uskey = $curatorinfo['cur_usid'];
				$sendername = $curatorinfo['cur_fio_position'];
				
				
            }
        }
        else
        {
            $useradmin=$privateofficemodel->getadminpassbylogin($uslogin);
            $uskey = $useradmin['AD_ID'];
        }
        $login = (string)$this->_getParam('login','');
        
		if (!preg_match("/^[a-zA-Z0-9]{1,20}$/", $login)) {
            $login='';
        }
		
        if ($login=='') {
            if (!headers_sent()) {
                header('Location: /privateoffice/logout');
            }
            exit;
        }
		//
	
	
	
	if($usertype == 'manager') 
	{
	
		$admins =  array(323,446); // Кураторы имеющие возможность редактировать минифорум
		if($this->domen == 'ua') $admins =  array(503,489);
		if(in_array($uskey , $admins)) $sadmin =  true;
	} else
	{
		$admins =  $admins =  array(1,3,4,15,17);// Администраторы имеющие возможность редактировать минифорум
		if($this->domen == 'ua') $admins =  array(1,3,4,15,17);
		if(in_array($uskey , $admins)) $sadmin =  true;
	}
		
		
		
		
		
        //сделать просмотренными
        $viewed = (string)$this->_getParam('viewed', 0);
        if ($viewed != 1) $viewed=0;
        // if ($viewed) {
            // $privateofficemodel->setmesslistbyusidviewedadm($login);
        // }
        $userinfo = $privateofficemodel->getuserinfobylogin($login);
        if (!$userinfo) {
            if (!headers_sent()) {
                header('Location: /privateoffice/adminmess/');
            }
            exit;
        }
        $this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('kol', 10);
        
		$messlist = $privateofficemodel->getmesslistbyusidadm($login,	$this->view->page, $this->view->kol, 'archive', $filter);
		$this->view->messlist = $messlist['mess'];
		$this->view->messcount = $messlist['count'];
		
		
        $this->view->userinfo = $userinfo;
        $this->view->login = $login;
        $this->view->sadmin = $sadmin; // Супер админ.	
		$this->view->filter = $filter;
    }
	
public function messagearchiveAction() 
    {
	$crdate = 	(string)$this->_getParam('crdate','');
	if($crdate)
		{
		$crdate = strtotime($crdate);
		if($crdate) 
			{
				
				$crdate = date('d.m.Y',$crdate);
			}  else $crdate = '';
		
		}
	$filter = array(
	'crdate' => $crdate,
	'subject' => (string)$this->_getParam('subject',''),
	'dgcode' => (string)$this->_getParam('dgcode',''),
	'msgtxt' => (string)$this->_getParam('msgtxt','')
	);	

		
		
        $this->setCfgLayout('page');
        $this->authsecure();
        $uskey=$this->getuskeyinsession();
        $boss = $this->getbossinsession();
        $type=(int)$this->_getParam('type',0);
        $status=$_SESSION['s_status'];
        $usertype = $this->getusertypeinsession();
        if ($type!=1 && $type!=0) $type=0;
        if ($boss===0) $type=0;
        $urlredirect='/privateoffice/message/?type=' . $type;
        if ($usertype=='manager' || $usertype=='admin') $urlredirect.='&uskey=' . $uskey;
        if (!$uskey) {
            return $this->error(404);
            exit;
        }
     	
		$type  = 1;
        $privateofficemodel=$this->getModel('Privateoffice');
        $this->view->type=$type;
        $this->view->uskey=$uskey;
        $page_actives=array(36 =>'36', 4=>'4', 0=>'0');
        Zend_Registry::set('page_actives', $page_actives);
        $this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
        if (!$this->view->userinfo) {
            return $this->error(404);                
            exit;
        }
        
		$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
        if($userinfopriv['us_all_msg_priv']===null)  $allmsgpriv = 1;
        else $allmsgpriv = $userinfopriv['us_all_msg_priv'];
        //if($allmsgpriv==0 && $boss === 0) $type=0;
		if($allmsgpriv==0) $type=0;
        
		$prkey=(int)$this->view->userinfo['US_PRKEY'];
        $usid=$this->view->userinfo['US_ID'];        
		
	   
		$this->view->page = (int) $this->_getParam('page', 1);
        $this->view->kol = (int) $this->_getParam('k', 10);
        $messlist= $privateofficemodel->getmesslistbyusid_filtered($usid, 'usidto', (($type == 1)?$prkey:0), 'archive',$filter, $this->view->page, $this->view->kol);
	 
		$this->view->messlist = $messlist['mess'];
		$this->view->messcount = $messlist['count'];
	 
		
        $this->view->boss=$boss;
        $this->view->status=$status;
        $this->view->ustype=$usertype;
		$this->view->filter = $filter;	
     
    }
	
public function partnerfinancechangeAction() 
{
	$partner_id = $type=(int)$this->_getParam('partner_id',0);
	
	$privateofficemodel=$this->getModel('Privateoffice');
	
	$partner = $privateofficemodel->getpartnerinfo($partner_id);
	
	$partner_changes = $privateofficemodel->getPartnerChanges($partner_id);
	
	if(isset($partner_changes[$partner_id])){
		$this->view->partner_changes = $partner_changes[$partner_id];
	}
	
	$this->view->partner = $partner;	
}

public function partnerfinancehistoryAction() 
{
	$partner_id = $type=(int)$this->_getParam('partner_id',0);
	
	$privateofficemodel=$this->getModel('Privateoffice');
	
	$partner = $privateofficemodel->getpartnerinfo($partner_id);
	
	$partner_changes_history = $privateofficemodel->getPartnerChangesHistory($partner_id);
	
	$this->view->partner_changes_history = $partner_changes_history;
	
	$this->view->partner = $partner;	
}

public function partnerfinancesaveAction() 
{
	$partner_id = $this->_getParam('partner_id',0);
	$netto = $this->_getParam('netto',0);
	$netto_desc = $this->_getParam('netto_desc','');
	$oplata = $this->_getParam('oplata',0);
	$oplata_desc = $this->_getParam('oplata_desc','');
	
	$privateofficemodel=$this->getModel('Privateoffice');
	
	$partner = $privateofficemodel->getpartnerinfo($partner_id);
	
	if (!$partner) {
		return $this->error(404);
		exit;
	}
	
	$params['partner_id'] = $partner_id;
	$params['netto'] = $netto;
	$params['netto_desc'] = trim($netto_desc);
	$params['oplata'] = $oplata;
	$params['oplata_desc'] = trim($oplata_desc);
	
	$json = array();
	if ($privateofficemodel->setPartnerChanges($params)){
		$json['partner_id'] = $partner_id;
		$json['netto'] = $netto;
		$json['netto_desc'] = $netto_desc;
		$json['oplata'] = $oplata;
		$json['oplata_desc'] = $oplata_desc;
	}
	
	echo json_encode($json); exit();

}     
	public function printtransferpdfAction()
	{
		$id =(int)$this->_getParam('id',0);
		$this->setCfgLayout('empty');
        $this->authsecure();
		$this->view->id=$id;
		if (!headers_sent()) {
			header("Content-Type: application/pdf");
            header('Content-Disposition: attachment; filename="transfer.pdf"');
        }
	
	}
	public function printtransferhtmlAction()
	{		
		$id =(int)$this->_getParam('id',0);
		$this->setCfgLayout('empty');
        $this->authsecure();
		$this->view->id=$id;
	}

	public function  printtransferAction()
	{
		$filename = 'transfer.doc';
		$id =(int)$this->_getParam('id',0);
		$this->setCfgLayout('empty');
        $this->authsecure();
		$this->view->id=$id;
		if (!headers_sent()) {
            header("Content-Type: application/msword");
			header('Content-Disposition: attachment; filename="'.$filename.'"');
        }	
	}
	public function printAction()
	{
		$id =(int)$this->_getParam('id',0);
		$this->setCfgLayout('empty');
        $this->authsecure();
		$this->view->id=$id;
		if (!headers_sent()) {
			header("Content-Type: application/pdf");
            header('Content-Disposition: attachment; filename="transfer.pdf"');
        }
	
	}
	
	public function printexeldocAction(){
		$dgcode = (string)$this->_getParam('code','');
        if ($dgcode=='') {
            return $this->error(404);
            exit;
        }
		$this->setCfgLayout('empty');
        $this->authsecure();
		$privateofficemodel=$this->getModel('Privateoffice');		
		/*Партнер по трансферу*/
		$transfer_partner=$privateofficemodel->getPartnerTransfer($dgcode);
		$this->view->transfer_partner=$transfer_partner;
		/*Партнер по трансферу*/		
		/*Главный менеджер*/
		$tour_agent=$privateofficemodel->getManagerInfo($dgcode);
		$this->view->tour_agent=$tour_agent;
		/*Главный менеджер*/
		/*Общая информация о туре*/
		$getdogovorinfo = $privateofficemodel->getdogovorinfo($dgcode);
		$tour_info=array();
		$tour_info["DATE"]=$getdogovorinfo["DG_CRDATE"];
		$tour_info["CODE"]=$dgcode;
		$this->view->tour_info=$tour_info;	
		$dgkey=$getdogovorinfo['DG_Key'];
		/*Информация по отелю*/
		$dogovorinfo = $privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($getdogovorinfo['DG_CRDATE'])),$dgcode);
		foreach($dogovorinfo as $info){
			if ($info['DL_SVKEY']==3)
				$hoteldictionary=$privateofficemodel->gethoteldictionary($info['DL_CODE']);
		}		
		$this->view->hoteldictionary=$hoteldictionary;
		/*Информация по отелю*/		
		/*Трансфер*/
		//формируем данные о трансфере
		//создаем пустой массив для трансфера
		$transfer = array();
		$dogovor_transfers = $privateofficemodel->getdogovortransfers($dgcode);	
		$transfer_params =  $privateofficemodel->gettransferinfobydg($dgcode);
		$params = array();
		if($transfer_params){
			$params = unserialize($transfer_params['params']);
		}
		$tr_name_to='';
		$tr_name_from ='';
		for($i=0; $i<count($dogovor_transfers); $i++){
			$pos = strpos(mb_convert_encoding($dogovor_transfers[$i]["TF_NAMELAT"], "utf-8", "Windows-1251"),mb_convert_encoding("проводы","utf-8", "Windows-1251"));
			if ($pos===false)
			{
				$transfer["DATE_CREATED"] = $dogovor_transfers[$i]["DL_CreateDate"];
				$tr_name_to.=$dogovor_transfers[$i]["TR_NAME"].", ";
				$transfer["TO"]=array(
					"PLACE" 	=> $dogovor_transfers[$i]["TF_NAME"],
					"TYPE"		=> trim($tr_name_to,", "),
					"DATE"  	=> $dogovor_transfers[$i]["DL_DATEBEG"],
					"TRANSPORT" => array(
						"TYPE_TRANSPORT" =>$params["start"]["type_fields"],
						"NUMBER_CRUISE"  =>$params["start"]["fields"]["plane"] ? $params["start"]["fields"]["plane"] : $params["start"]["fields"]["train"].
						($params["start"]["fields"]["wagon"] ? " вагон № ".$params["start"]["fields"]["wagon"] : ''),
						$params["start"]["fields"]["wagon"],
						"TIME_CRUISE"  =>$params["start"]["fields"]["time"]
					),
					"PRICE"		=> $dogovor_transfers[$i]["DL_COST"]
				);
			}
			else{		
				//проводы
				//echo $dogovor_transfers[$i]["TR_NAME"];
				$tr_name_from.=$dogovor_transfers[$i]["TR_NAME"].", ";
				$transfer["FROM"]=array(
					"PLACE" 	=> $dogovor_transfers[$i]["TF_NAME"],
					"TYPE"		=> trim($tr_name_from,", "),
					"DATE"  	=> $dogovor_transfers[$i]["DL_DATEBEG"],
					"TRANSPORT" => array(
						"TYPE_TRANSPORT" =>$params["finish"]["type_fields"],
						"NUMBER_CRUISE"  =>$params["finish"]["fields"]["plane"] ? $params["finish"]["fields"]["plane"] : $params["finish"]["fields"]["train"].
						($params["finish"]["fields"]["wagon"] ? " вагон № ".$params["finish"]["fields"]["wagon"] : ''),
						"TIME_CRUISE"  =>$params["finish"]["fields"]["time"]
					),
					"PRICE"		=> $dogovor_transfers[$i]["DL_COST"]
				);	
			}
		}
		$this->view->transfer=$transfer; //отдаем во вьюху		
		/*Трансфер*/
		/*Туристы*/
        $tourists =$privateofficemodel->getturistlist($dgkey, date("Y", strtotime($getdogovorinfo['DG_CRDATE'])), $dgcode);	
		$this->view->tourists = $tourists;	
		/*Туристы*/	
		$this->setCfgLayout('empty');		
		$this->setView('printexeldoc');  
	}
	
	/* ADDING PROFCURORT */
public function profkurortAction()
{	

	$profkurort = new SoapClient("http://test.interhotel.ru/webservice/extoperator.wsdl",array('encoding'=>'UTF-8'));
	
	$login = "Mtkavtobron";
	$password = "23wsmb93";
	
	$req_date = date("Y-m-d H:i");

	//$hash = md5("$login-".Date('YmdHi')."-$password");

	$hash = md5("$login-".str_replace(array(" ","-",":"),"",$req_date)."-$password");
	
	print_r(json_decode($profkurort->getObjects("profkurort",$req_date, $hash)));
	
	//print_r(json_decode($profkurort->getCategs("profkurort",$req_date,1,$hash)));
	
	//print_r(json_decode($profkurort->getQData("profkurort",$req_date,1,$req_date, 5, $hash)));
	
	//print_r(json_decode($profkurort->getPrices("profkurort", $req_date, 1 , 1, $hash)));
	
	//print_r(json_decode($profkurort->getLData("profkurort",$req_date,1,$req_date, 5, $hash)));
	
	//print_r(json_decode($profkurort->getNozolog("profkurort",$req_date, $hash)));
	

	
	exit();
}

public function profkurortjoinlistAction()
{	
	
	$this->authsecure();
	$uskey=$this->getuskeyinsession();
	$usertype = $this->getusertypeinsession();

	if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
		return $this->error(404);       
	} 
	
	$this->setCfgLayout('full_admin');
	$page_actives=array(200 =>'200');
	Zend_Registry::set('page_actives', $page_actives);
	
	$webservicemodel=$this->getModel('Webservice');

	$data = $webservicemodel->getList();

	$this->view->data=$data;
	
}

public function profkurortcreateAction() 
{
	$this->authsecure();
	$uskey=$this->getuskeyinsession();
	$usertype = $this->getusertypeinsession();

	if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
		return $this->error(404);       
	} 
	
	$join_id = $type=(int)$this->_getParam('join_id',0);
	
	$webservicemodel=$this->getModel('Webservice');
	
	if($join_id){
		$item = $webservicemodel->getById($join_id);
	}

	$hotel_id = $type=(int)$this->_getParam('tur_id',0);
	$room_id = $type=(int)$this->_getParam('room_id',0);
	$profkurort_obj_id = $type=(int)$this->_getParam('profkurort_obj_id',0);
	$profkurort_cat_id = $type=(int)$this->_getParam('profkurort_cat_id',0);
	$hotel_name = $this->_getParam('tur_name','');
	$room_name = $this->_getParam('room_name','');
	$obj_name = $this->_getParam('obj_name','');
	$cat_name = $this->_getParam('cat_name','');
	
	if($item){
		$hotel_id = $item['hotel_id'];
		$room_id = $item['room_id'];
		$profkurort_obj_id = $item['obj_id'];
		$profkurort_cat_id = $item['cat_id'];
		$hotel_name = $item['hotel_name'];
		$room_name = $item['room_name'];
		$obj_name = $item['obj_name'];
		$cat_name = $item['cat_name'];
	}

	$hotel_list = $webservicemodel->getProfkurortHotels();
	
	$profkurort_objlist = $webservicemodel->getProfkurortObj();

	$this->view->join_id = $join_id;
	$this->view->hotel_id = $hotel_id;	
	$this->view->hotel_name = $hotel_name;
	$this->view->room_name = $room_name;
	$this->view->room_id = $room_id;	
	$this->view->hotel_list = $hotel_list;	
	$this->view->profkurort_objlist = $profkurort_objlist;	
	$this->view->profkurort_obj_id = $profkurort_obj_id;
	$this->view->obj_name = $obj_name;
	$this->view->profkurort_cat_id = $profkurort_cat_id;
	$this->view->cat_name = $cat_name;

}

public function profkurortdeleteAction() 
{
	$this->authsecure();
	$uskey=$this->getuskeyinsession();
	$usertype = $this->getusertypeinsession();

	if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
		return $this->error(404);       
	} 
	
	$join_id = $type=(int)$this->_getParam('join_id',0);
	
	$webservicemodel=$this->getModel('Webservice');
	
	$webservicemodel->deleteById($join_id);
	
	header('Location: /privateoffice/profkurortjoinlist'); exit();

}

public function selectroomlistAction() 
{

	$hotel_id = $type=(int)$this->_getParam('hotel_id',0);

	$room_id = $type=(int)$this->_getParam('room_id',0);
	
	$webservicemodel=$this->getModel('Webservice');

	$room_list = $webservicemodel->getRoomList($hotel_id);
	
	$this->view->room_list = $room_list;
	$this->view->room_id = $room_id;		
}

public function selectprofkurortroomlistAction() 
{

	$profkurort_obj_id = $type=(int)$this->_getParam('profkurort_obj_id',0);
	$profkurort_cat_id = $type=(int)$this->_getParam('profkurort_cat_id',0);

	$webservicemodel=$this->getModel('Webservice');

	$cat_list = $webservicemodel->getProfkurortRoomList($profkurort_obj_id);
	
	$this->view->cat_list = $cat_list;
	$this->view->profkurort_cat_id = $profkurort_cat_id;		
}
public function addprofkurortjoinAction() 
{
	$this->authsecure();
	$uskey=$this->getuskeyinsession();
	$usertype = $this->getusertypeinsession();

	if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
		return $this->error(404);       
	} 
	
	$join_id = $type=(int)$this->_getParam('join_id',0);
	$hotel_id = $type=(int)$this->_getParam('hotel_id',0);
	$hotel_name = $type=$this->_getParam('hotel_name','');
	$room_id = $type=(int)$this->_getParam('room_id',0);
	$room_name = $type=$this->_getParam('room_name','');
	$profkurort_obj_id = $type=(int)$this->_getParam('profkurort_obj_id',0);
	$obj_name = $type=$this->_getParam('obj_name','');
	$profkurort_cat_id = $type=(int)$this->_getParam('profkurort_cat_id',0);
	$cat_name = $type=$this->_getParam('cat_name','');

	$webservicemodel=$this->getModel('Webservice');
	
	if(!$join_id){
		$webservicemodel->addJoin($hotel_id, $hotel_name, $room_id, $room_name, $profkurort_obj_id, $obj_name, $profkurort_cat_id, $cat_name);
	} else {
		$webservicemodel->editJoin($join_id, $hotel_id, $hotel_name, $room_id, $room_name, $profkurort_obj_id, $obj_name, $profkurort_cat_id, $cat_name);
	}

	header('Location: /privateoffice/profkurortjoinlist'); exit();
	
}
     
public function getpartnererrorsAction()
{
	$this->authsecure();
	$uskey=$this->getuskeyinsession();
	$usertype = $this->getusertypeinsession();

	if($usertype != 'admin' && $usertype != 'meneger' && $usertype != 'manager') {
		return $this->error(404);       
	} 
	
	$this->setCfgLayout('full_admin');
	$page_actives=array(200 =>'200');
	Zend_Registry::set('page_actives', $page_actives);
	
	$upload_error = false;
	if (isset($_POST["submit"]) && isset($_FILES['file'])) {
		
		$file = $_FILES['file'];

		$allowedExtensions = array('xls','xlsx');
	
		if(in_array(end(explode(".", strtolower($file['name']))), $allowedExtensions)){
			
			$privateofficemodel = $this->getModel('Privateoffice');
			$agents_arr = $privateofficemodel->getAgentsDog();
			
			$agents = array();
			foreach($agents_arr as $agent) {
				$agents[mb_strtolower($agent['PR_NAME'], "UTF-8")] = $agent;
			}

			$inputFileType = PHPExcel_IOFactory::identify($file['tmp_name']);
			$objReader = PHPExcel_IOFactory::createReader($inputFileType);
			$objPHPExcel = $objReader->load($file['tmp_name']);
			$sheet = $objPHPExcel->getSheet(0);

			$data_upload = $sheet->rangeToArray('A2:' . $sheet->getHighestColumn() . $sheet->getHighestRow(), NULL, TRUE, FALSE);
			$index_id = 0;
			$index_name = 3;
			$index_inn = 4;
			$index_dog = 7;
			$index_legal = 8;
			
			
			$errors = array();
			foreach($data_upload as $item) {
				
				if($item[$index_id]){
					
					$error_name = FALSE;
					$error_inn = FALSE;
					$error_dog = FALSE;
					$error_legal = FALSE;
					
					$item_name = mb_strtolower($item[$index_name], "UTF-8");
					
					if(!array_key_exists($item_name, $agents)){
						$error_name = TRUE;
						$error_inn = TRUE;
						$error_dog = TRUE;
						$error_legal = TRUE;
					} else {
						if($agents[$item_name]['PR_INN'] <> $item[$index_inn]){
							$error_inn = TRUE;
						}
						if($agents[$item_name]['PD_DogNumber'] <> $item[$index_dog]){
							$error_dog = TRUE;
						}
						if(str_replace(' ','',mb_strtolower($agents[$item_name]['legal_name'], "UTF-8")) <> str_replace(' ','',mb_strtolower($item[$index_legal], "UTF-8"))){
							$error_legal = TRUE;
						}
					}
					
					if($error_name || $error_inn || $error_dog || $error_legal){
						$errors[] = array(
							'id' => array(
								'value' => $item[$index_id],
								'is_error' => FALSE
							),
							'name' => array(
								'value' => $item[$index_name],
								'value_master' => isset($agents[$item_name]['PR_NAME'])?$agents[$item_name]['PR_NAME']:'',
								'is_error' => $error_name
							),
							'inn' => array(
								'value' => $item[$index_inn],
								'value_master' => isset($agents[$item_name]['PR_INN'])?$agents[$item_name]['PR_INN']:'',
								'is_error' => $error_inn
							),
							'dog' => array(
								'value' => $item[$index_dog],
								'value_master' => isset($agents[$item_name]['PD_DogNumber'])?$agents[$item_name]['PD_DogNumber']:'',
								'is_error' => $error_dog
							),
							'legal' => array(
								'value' => $item[$index_legal],
								'value_master' => isset($agents[$item_name]['legal_name'])?$agents[$item_name]['legal_name']:'',
								'is_error' => $error_legal
							),
						);
					}
					
					
				}
			}
			if($errors){
				$this->view->errors = $errors;
				$this->setCfgLayout('empty');
				$this->setView('printpartnererrors');
			} else {
				$upload_error = 'Ошибок в файле не найдено';
			}
		}	
		else {
			$upload_error = 'Разрешено загружать только Excel файлы';
		}
	}

	$this->view->upload_error = $upload_error;

	
}
    
	
	public function printrequestmtkrymAction() 
	{
	$dgcode = (string)$this->_getParam('code','');
	$type=(int)$this->_getParam('type',0);


			$this->setCfgLayout('docxempty');
			$this->authsecure();
			$uskey=$this->getuskeyinsession();
			$boss=$this->getbossinsession();
			$status=(int)$_SESSION['s_status'];
			
			
			
			
			$usertype = $this->getusertypeinsession();
			if ($type!=1 && $type!=0) $type=0;
			//if ($boss===0) $type=0;
			if ($dgcode=='') {
				return $this->error(404);
				exit;
			}

			$privateofficemodel=$this->getModel('Privateoffice');
			
			
			
			
			$userinfopriv=$privateofficemodel->getagentuserpriv($uskey);
			if($userinfopriv['us_all_dog_priv']===null)  $alldogpriv = 1;
			else $alldogpriv = $userinfopriv['us_all_dog_priv'];
			if($alldogpriv==0 && $boss === 0) $type=0;
			
			if (($usertype=='manager' || $usertype=='admin' || $usertype == 'meneger') && $uskey == 0) {
				$allbool = true;
			} else {
				$allbool = false;
			}
			$prkey=0;
			
			
			
			if (!$allbool) {
				if (!$uskey) {
					return $this->error(404);
					exit;
				}
				$this->view->userinfo=$privateofficemodel->getuserinfo($uskey);
				if (!$this->view->userinfo) {
					return $this->error(404);                
					exit;
				}
				$prkey=(int)$this->view->userinfo['US_PRKEY'];
			}
			
			$logintxt=$_SESSION['s_login'];
			if($usertype == 'meneger'){
					preg_match('/^meneger_(.*)$/', $logintxt, $matches);
					// zend_debug::dump($matches);
					// exit;
					$logintxt = $matches[1];
				}
			$creator = $privateofficemodel->getmenegerbylogin($logintxt);
			if ($creator){
				$logintxt = $creator[0]['cur_fio'];
			}
			
			
			
			//$this->view->anegtdoginfo=$privateofficemodel->getanegtdoginfo($prkey);
			if (strlen($dgcode)>0 && preg_match("/^[A-Z][0-9]{1,10}$/", $dgcode)) {
				
			
				//Информация по договору
				$dogovorinfo=$privateofficemodel->getdogovorinfo($dgcode);
				$dgkey=$dogovorinfo['DG_Key'];
				
				$dupuserkey=(int)$dogovorinfo['DG_DUPUSERKEY'];


			
				if (!$dogovorinfo) {
					return $this->error(404);                
					exit;
				}


				
				//Информация по агентству
				$dg_prkey=(int)$dogovorinfo['DG_PARTNERKEY'];
				
				$status=(int)$_SESSION['s_status'];
				if ($usertype!='admin' && $usertype != 'manager' && $usertype != 'meneger')  {
					if ($dg_prkey!=$prkey) {
						return $this->error(404);                
						exit;
					}
					if ($boss===0 && $alldogpriv==0) {
						if ($uskey!=$dupuserkey) {
							return $this->error(404);                
							exit;
						}
					}
				}            
				
			
				$agentinfo=$privateofficemodel->getagentinfo($dg_prkey);
				if (isset($agentinfo['PR_BOSSNAME'])) $prbossname=$agentinfo['PR_BOSSNAME'];
				else $prbossname='';
				
				$anegtdoginfo=$privateofficemodel->getanegtdoginfo($dg_prkey);
				
				$dognumview='';
				$dogdateview='';
				$daydog='';
				$mondogtxt='';
				$yeardog='';
				if (isset($anegtdoginfo['PD_DogNumber'])) $dognumview=$anegtdoginfo['PD_DogNumber'];
				if (isset($anegtdoginfo['PD_DateBeg'])) {
					$daydog=date("d", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondog=date("n", strtotime($anegtdoginfo['PD_DateBeg']));
					$yeardog=date("Y", strtotime($anegtdoginfo['PD_DateBeg']));
					$mondogtxt='';
					$mondog=(int)$mondog;
					$mondogtxt=$this->getmontxt($mondog);
				
				}
				
				
				$pr_fullname=$agentinfo['PR_FULLNAME'];
				$agentadress=$agentinfo['PR_CITY'].', '.$agentinfo['PR_ADRESS'];
				$pr_phones=$agentinfo['PR_PHONES'];
				$pr_fax=$agentinfo['PR_FAX'];
				$pr_email=$agentinfo['PR_EMAIL'];
				
				//Дата бронирования
				$crdate=$dogovorinfo['DG_CRDATE'];
				$crdate=date("d.m.Y", strtotime($crdate));
				
				//Информация по стране
				$countryid=(int)$dogovorinfo['DG_CNKEY'];
				$countriesmodel = $this->getModel('Countries');
				$country=$countriesmodel->getcountrybyid($countryid);
				if (isset($country['Name'])) {
					$countryname=$country['Name'];
				} else {
					$countryname='';
				}
				
				//Информация по городу
				$cityid=(int)$dogovorinfo['DG_CTKEY'];
				$citiesmodel = $this->getModel('Cities');
				$city=$citiesmodel->getcitybyid($cityid);
				if (isset($city['Name'])) {
					$cityname=$city['Name'];
				} else {
					$cityname='';
				}

				//Информация по туру
				$turname=$dogovorinfo['turname'];
				// zend_debug::dump($dogovorinfo);
				// exit;
				//Список туристов
				$dgkey=$dogovorinfo['DG_Key'];
				$turlist=$privateofficemodel->getturistlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
			
				function stday($day) {
					$daytext='';
					if ($day<21) {
						if ($day==1) $daytext='день';
						else if ($day>=2 && $day<=4) $daytext='дня';
						else if ($day>=5 && $day<=20) $daytext='дней';
					} else {
						$dayost=$day%10;
						if ($dayost==1) $daytext='день';
						else if ($dayost>=2 && $dayost<=4) $daytext='дня';
						else if ($dayost>=5 && $dayost<=9 || $dayost==0) $daytext='дней';
					}
					return $daytext;
				}

				//Функция извлечения времени без секунд, из datetime
				function gettimetosqldate($date) {
					$date_arr=explode(' ',$date);
					if (count($date_arr)==2) {
						$date=$date_arr[1];
						$date_arr=explode(':',$date);
						if (count($date_arr)==3) {
							$date=$date_arr[0].':'.$date_arr[1];
						} else {
							$date='';
						}
					} else {
						$date='';
					}
					return $date;
				}
				
			  
	// Партнёры поставщики услуг

	$dlpartners = $privateofficemodel->getdogovorlistpartners($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);		  

	$pri = 0;
	$partnersview = array();

	foreach($dlpartners as $prkey=> $prrow)
	{            
	$patnerline = array();
			$dlpartner = $prrow['DL_PARTNERKEY'];
				
				$anegtdoginfo=$privateofficemodel->getagentinfo($dlpartner);
				
				$patnerline['pr_fullname']=$anegtdoginfo['PR_FULLNAME'];
				$patnerline['agentadress']=$anegtdoginfo['PR_CITY'].', '.$anegtdoginfo['PR_ADRESS'];
				$patnerline['pr_phones']=$anegtdoginfo['PR_PHONES'];
				$patnerline['pr_fax']=$anegtdoginfo['PR_FAX'];
				$patnerline['pr_email']=$anegtdoginfo['PR_EMAIL'];
				$patnerline['pr_key']=$dlpartner;

				//Таблица с проживаниями
				//$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])));
				$dogovorlist=$privateofficemodel->getpartnerdogovorlist($dgkey,$dlpartner,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				
				
				
				
				$hotellistview=array();
				$i=0;
				$hotelstxt='';
				$datebegintxt='';
				$datebeginint=0;
				$dateendtxt='';
				$dateendint=0;
				$roomstxt='';
				$pansiontxt='';
				$turists =  array();
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $key=>$row) {
						if ($row['DL_SVKEY']=='3') {
							$i++;
							
							//Номер
							$hotellistview[$i]['num']=$i;
							//Город 
							$cityid=$row['DL_CTKEY'];
							$city=$citiesmodel->getcitybyid($cityid);
							$cityname='';
							if (is_array($city)) {
								if (isset($city['Name'])) {
									$cityname=$city['Name'];
								}
							}
							$hotellistview[$i]['cityname']=$cityname;
							//Отель
							$hotelkey=(int)$row['DL_CODE'];
							$hotelname='';
							$hoteldictionary=$privateofficemodel->gethoteldictionary($hotelkey);
							
							if (is_array($hoteldictionary)) {
								if (isset($hoteldictionary['HD_NAME'])) {
									$hotelname=$hoteldictionary['HD_NAME'];
								}
								if (isset($hoteldictionary['HD_STARS'])) {
									if (strlen($hoteldictionary['HD_STARS'])>0) {
										$hotelname.=' ('.$hoteldictionary['HD_STARS'].')';
									}
								}
							}
							if (strlen($hotelstxt)>0) $hotelstxt.='; ';
							$hotelstxt.=$hotelname;
							if (strlen($cityname)>0) $hotelstxt.=' '.$cityname;

							$hotellistview[$i]['hotelname']=$hotelname;
							//номер
							$subcode1=(int)$row['DL_SUBCODE1'];
							$roomname='';
							if ($subcode1>0) {
								$room=$privateofficemodel->getroom($subcode1);
								if (is_array($room)) {
									$roomname=trim($room['Room']).' ('.trim($room['RoomsCategory']).')';
									$accmdkey=(int)$room['AccmdMenTypeKey'];
									$accmd=$privateofficemodel->getaccmd($accmdkey);
									if (is_array($accmd)) {
										$roomname.=', '.trim($accmd['Code']);
									}
								}
							}
							if (strlen($roomstxt)>0) $roomstxt.='; ';
							$roomstxt.=$roomname;
							$hotellistview[$i]['roomname']=$roomname;
							//питание
							$subcode2=(int)$row['DL_SUBCODE2'];
							$pansionname='';
							if ($subcode2>0) {
								$pansion=$privateofficemodel->getpansion($subcode2);
								if (is_array($pansion)) {
									$pansionname=$pansion['Code'].' '.$pansion['Name'];
								}
							}
							if (strlen($pansiontxt)>0) $pansiontxt.='; ';
							$pansiontxt.=$pansionname;
							$hotellistview[$i]['pansionname']=$pansionname;
							//Дата заезда
							$datebegin=date("d.m.Y", strtotime($row['DL_DATEBEG']));
							$datebegininttemp=strtotime($row['DL_DATEBEG']);
							// echo $datebegininttemp.'<br>';
							if ($datebeginint>$datebegininttemp || $datebeginint==0) {
								$datebeginint=$datebegininttemp;
								$datebegintxt=date("d.m.Y", $datebegininttemp);
							}
							$hotellistview[$i]['datebegin']=$datebegin;
							//Дата выезда
							$dateend=date("d.m.Y", strtotime('+1 days', strtotime($row['DL_DATEEND'])));
							$dateendinttemp=strtotime($row['DL_DATEEND']);
							if ($dateendint<$dateendinttemp || $dateendint==0) {
								$dateendint=$dateendinttemp;
								$dateendtxt=date("d.m.Y", strtotime('+1 days',$dateendinttemp));
							}
							
							$hotellistview[$i]['dateend']=$dateend;
							//Кол-во ночей
							$ndays=(int)$row['DL_NDAYS'];
							$ndaystxt=$ndays.'/'.($ndays+1);
							$hotellistview[$i]['days']=$ndaystxt;
							
							// Туристы по услуге 
							
							$dlkey=$row['DL_KEY'];
							$turlist=$privateofficemodel->getturistlistbydlkey2p($dlkey,$dgcode);
							
							$turlistview=array();
				foreach ($turlist as $key=>$row) {
					$fio=$row['TU_NAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_FNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_FNAMERUS'];
					if (strlen($fio)>0 && strlen($row['TU_SNAMERUS'])>0) $fio.=' ';
					$fio.=$row['TU_SNAMERUS'];
					$turlistview[$key]['fio']=$fio;
					
					if ($row['TU_RealSex']=='0') $sex='М';
					else $sex='Ж';
					$turlistview[$key]['sex']=$sex;
					
					$pasport=$row['TU_PASPORTTYPE'];
					if (strlen($pasport)>0 && strlen($row['TU_PASPORTTYPE'])>0) $pasport.=' ';
					$pasport.=$row['TU_PASPORTNUM'];
					$turlistview[$key]['pasport']=$pasport;
					
					$birthday='';
					if (strlen($row['TU_BIRTHDAY'])>0) {
						$birthday.=date("d.m.Y", strtotime($row['TU_BIRTHDAY']));
					}
					$turlistview[$key]['birthday']=$birthday;
					// echo $birthday;
					
					
				}
							
							
							$hotellistview[$i]['turists']= $turlistview;
							
						}
						
						
					}
				}       
		$patnerline['hotelistview'] = $hotellistview;
		
	$partnersview[$pri] = $patnerline;
	$pri++;	

	} /// Конец списка партнеров поставщиков			

				//Расчетный час
				$rastcode=0;
				$rasttxt='';
				
				$dogovorlist=$privateofficemodel->getdogovorlist($dgkey,date("Y", strtotime($dogovorinfo['DG_CRDATE'])),$dgcode);
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1112') {
							// zend_debug::dump($row);
							$rastcode=(int)$row['DL_CODE'];
							if ($rastcode>0) {
								$rast=$privateofficemodel->getservicelist(1112,$rastcode,$dgcode);
								// zend_debug::dump($rast);
								if (is_array($rast)) {
									if (isset($rast['SL_NAME'])) {
										if (strlen($rasttxt)>0) $rasttxt.=', ';
										$rasttxt.=$rast['SL_NAME'];
									}
								}
							}
						}
					}
				}

				if (strlen($rasttxt)==0) $rasttxt='Нет';
	 ///////////////////////
	 //Дополнительные услуги
				$dopcode=0;
				$doptxt='';
				if (is_array($dogovorlist)) {
					foreach ($dogovorlist as $row) {
						// echo $row['DL_SVKEY'].'<br>';
						if ($row['DL_SVKEY']=='1032') {
							// zend_debug::dump($row);
							$dopcode=(int)$row['DL_CODE'];
							if ($dopcode>0) {
								$dop=$privateofficemodel->getservicelist(1032,$dopcode,$dgcode);
								if (is_array($dop)) {
									if (isset($dop['SL_NAME'])) {
										if (strlen($doptxt)>0) $doptxt.=', ';
										$doptxt.=$dop['SL_NAME'];
									}
								}
							}
						}
					}
				}  
				if (strlen($doptxt)==0) $doptxt='Нет';
	
		 }       
			$this->view->dgcode=$dgcode;
			//$this->view->crdate=$crdate;
			$this->view->crdate=date('d.m.Y');;
		   
			$this->view->countryname=$countryname;
			$this->view->cityname=$cityname;
			$this->view->turname=$turname;
			
			
			$this->view->partnersview = $partnersview;

			$this->view->rasttxt=$rasttxt;
			$this->view->logintxt=$logintxt;
			
			$this->view->datebegintxt=$datebegintxt;
			$this->view->dateendtxt=$dateendtxt;
			$this->view->roomstxt=$roomstxt;
			$this->view->pansiontxt=$pansiontxt;
			
			$this->view->doptxt = $doptxt;
			$this->view->daydog=$daydog;
			$this->view->mondogtxt=$mondogtxt;
			$this->view->yeardog=$yeardog;
			
			$this->view->dognumview=$dognumview;

			$this->view->prbossname=$prbossname;
			
			
			$filename = 'request' .$dgcode. '.doc';
			$this->view->filename=$filename;
			if (!headers_sent()) {
				header("Content-Type: application/msword");
				header('Content-Disposition: attachment; filename="'.$filename.'"');
			}

	}
	
		

	
}
